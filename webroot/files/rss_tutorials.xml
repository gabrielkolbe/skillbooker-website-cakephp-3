<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>Skillbooker.com</title>
<link>http://Skillbooker.com</link>
<description>Jobs, Freelance Projects, Tutorials</description>
<language>en</language>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/1</link>
    <description>You add it in the array like so:rnrnrnrnecho $form- input( email ,array( default = enter your email address ));rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/2</link>
    <description>Even if an array seems empty like thisrnrnrnrnif($thisisarray[ something ] ==  ) {} rnrnrnit might not seems empty enough! as there might be 0 srnrnto do a check do it like this:rnremove all 0 s and then check for emptyrnrnrnrn$errors = array_filter($thisisarray);rnif (!empty($thisisarray)) { echo do something ; }rnrnrnarray_filter() function s default behavior will remove all values from array which are equal to null, 0,   or false.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/5</link>
    <description>The box model hack is used to fix a rendering problem in pre-IE 6 browsers on PC, where by the border and padding are included in the width of an element, as opposed to added on. A number ofCSS-based solutions have been put forward to remedy this, so here s another one which we really like:rnrnpadding: 2em;rnborder: 1em solid green;rnwidth: 20em;rnwidth/**/:/**/ 14em;rnrnThe first width command is read by all browsers; the second by all browsers except IE5.x on PC. Because the second command comes second it takes precedence over the first - any command that comes second will always override a preceding command. So, how does all this work?rnrnBy placing empty comment tags (/**/) before the colons, IE5.0 will ignore the command. Likewise, by placing these empty comment tags after the colon, IE5.5 will ignore the command. By using these two rules in conjunction with each other, we can hide the command from all of IE5.x.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/4</link>
    <description>Almost all HTML elements are either block or inline elements. The characteristics of block elements include:rnrnrn	Always begin on a new linern	Height, line-height and top and bottom margins can be manipulatedrn	Width defaults to 100% of their containing element, unless a width is specifiedrnrnrnExamples of block elements include  div ,  p ,  h1 ,  form ,  ul  and  li . Inline elements on the other hand have the opposite characteristics:rnrnrn	Begin on the same linern	Height, line-height and top and bottom margins can t be changedrn	Width is as long as the text/image and can t be manipulatedrnrnrnExamples of inline elements include  span ,  a ,  label ,  input ,  img ,  strong  and em .rnrnTo change an element s status you can use display: inline or display: block. But what s the point of changing an element from being block to inline, or vice-versa? Well, at first it may seem like you might hardly ever use this, but in actual fact this is a very powerful technique, which you can use any time you want to:rnrnrn	Have an inline element start on a new linern	Have a block element start on the same linern	Control the width of an inline element (particularly useful for navigation links)rn	Manipulate the height of an inline elementrn	Set a background colour as wide as the text for block elements, without having to specify a widthrnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/6</link>
    <description>It is not every day that things get handed to you to help you along, one of those is the CSS command that exists is the min-width command, whereby you can specify a minimum width for any element. This can be particularly useful for specifying a minimum width for a page.rnrnUnfortunately, IE doesn t understand this command, so we ll need to come up with a new way of making this work in this browser. First, we ll insert a  div  under the  body  tag, as we can t assign a minimum width to the  body :rnrn body rn div id= container  rnrnNext we create our CSS commands, so as to create a minimum width of 600px:rnrn#containerrn{rnmin-width: 600px;rnwidth:expression(document.body.clientWidth  600?  600px :  auto  );rn}rnrnThe first command is the regular minimum width command; the second is a short JavaScript command that only IE understands. Do note though, this command will cause your CSS document to invalidate so you may prefer to insert it into the head of each HTML document to get round this.rnrnYou might also want to combine this minimum width with a maximum width:rnrn#containerrn{rnmin-width: 600px;rnmax-width: 1200px;rnwidth:expression(document.body.clientWidth  600?  600px  : document.body.clientWidth  1200?  1200px  :  auto );rn}rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/7</link>
    <description>E has a rather strange way of doing things. It doesn t understand the min-width and min-height commands, but instead interprets width and height as min-width and min-height- go figure!rnrnThis can cause problems, because we may need boxes to be resizable should more text need to go in them or should the user resize text. If we only use the width and height commands on a box then non-IE browsers won t allow the box to resize. If we only use the min-width and min-height commands though then we can t control the width or height in IE!rnrnThis can be especially problematic when using background images. If you re using a background image that s 80px wide and 35px high, then you ll want to make sure that the default size for a box using this image is exactly 80 x 35px. However, if users resize the text then the box size will need to expand gracefully.rnrnTo resolve this problem, you can use the following code for a box with class= box :rnrn.boxrn{rnwidth: 80px;rnheight: 35px;rn}rnrnhtml body .boxrn{rnwidth: auto;rnheight: auto;rnmin-width: 80px;rnmin-height: 35px;rn}rnrnAll browsers will read through the first CSS rule but IE will ignore the second rule because it makes use of the child selector command. Non-IE browsers will read through the second one and will override the values from the first rule because this CSS rule is more specific, and CSS rules that are more specific always override those that are less specific.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/8</link>
    <description>One of the lesser known, but really useful CSS commands is the text-transform command. Three of the more common values for this rule are: text-transform: uppercase, text-transform: lowercase and text-transform: capitalize. The first rule turns all characters into capital letters, the second turns them all into small letters, and the third makes the first letter of each word capitals.rnrnThis command is incredibly useful to help ensure consistency in style across an entire website, particularly if there a number of content editors. Say for example your style guide dictates that words in headings must always begin with capital letters. To ensure that this is always the case, use text-transform: capitalize. Even if site editors forget about the capitalisation, their mistake won t show up on the website.rnrnIt s also preferable to use text-transform: uppercase to capitalise words, as screen readers may pronounce shorter words in capital letters as acronyms. A great example of this is CONTACT US , which is pronounced as contact U S by some screen readers.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/9</link>
    <description>E has a very strange bug where text or background images sometimes disappears from sight. These items are still actually there, and if you highlight everything on screen or hit refresh they ll often re-appear. Kind of strange, huh?rnrnThis problem mostly occurs on background images and on text next to a floated element. To remedy the problem, simply insert position: relative into the CSS command for the disappearing element, and for some bizarre reason that ll usually fix the problem. If this doesn t work (it sometimes doesn t), assign a width to the offending element in the CSS and that should fix the problem.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/13</link>
    <description>Sometime you may actually want to make text invisible. Invisible text can be especially useful for screen reader users, perhaps to assign a label to a form item or insert a heading ahead of a section. Don t want to change the visual appearance by inserting these? Make them invisible and no one using a visual browser knows that they re there.rnrnYou may also want to make text invisible if using a print or handheld CSS file, as some information may not need to be displayed on either of these mediums (see below for more on this).rnrnTo make text invisible you can use display: none - easy! This works fine for hiding text from handhelds (if CSS is supported) and printed web pages, but isn t so great for many screen readers. Screen readers are now becoming too clever for their own good, and some will actually ignore the any text that has the rule display: none assigned to it.rnrnFor screen readers users therefore, a new approach is needed: position: absolute; left: -9000px. This basically takes the text and positions it 9000px to the left of the left edge of the screen, essentially making it invisible.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/14</link>
    <description>A separate CSS document can be created for PDAs and mobile phones, and only activated when one of these devices is being used to access your site. More and more websites are creating separateCSS documents for printing, so web pages automatically become print-friendly when users choose to print them. You can also do the same for handheld devices.rnrnThe following command is used to call up the CSS document for handhelds:rnrn link type= text/css  rel= stylesheet  href= handheldstyle.css  media= handheld / rnrnCSS commands in the handheld CSS file override any equivalent commands in the main CSSdocument. So, what commands should you place in this file?rnrnIdeally, you want handheld web users to avoid having to scroll across. To test this, open up your website in a regular browser window and resize it to 150px in width. Then, open up your main CSS file and insert some new commands at the very bottom of the document. The commands you place here should adjust the layout of the website so that it doesn t require horizontal scrolling at a 150px width. Then, open up a new document, cut and paste these new commands over, and save it as handheldstyle.css (or whatever name you want to give it).rnrnWhat your website offers to handheld web users should be quite different to what it offers on traditional web browsers, as the user experience is quite different. For further information, a book such as Handheld Usability is a great read.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/15</link>
    <description>ack in the early days of the web, 3-d buttons that appeared to become pushed in when moused over were all the rage. At that time, this could only be achieved through images and JavaScript, but now with the advent of CSS we can go all retro and re-create this effect:rnrnThe main CSS commands you ll need are:rnrna {rndisplay: block;rnborder: 1px solid;rnborder-color: #aaa #000 #000 #aaa;rnwidth: 8em;rnbackground: #fc0;rn}rnrna:hoverrn{rnposition: relative;rntop: 1px;rnleft: 1px;rnborder-color: #000 #aaa #aaa #000;rn}rnrnAside from these commands, you can insert any other commands to achieve the desired presentation effect - the only limit is your imagination!rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/16</link>
    <description>Most websites highlight the navigation item of the user s location in the website, to help users orientate themselves. This is a fundamental requirement for basic usability, but can be a pain as you ll need to tweak the HTML code behind the navigation for each and every page. So can we have the best of both worlds? Is it possible to have the navigation highlighted on every page, without having to tweak the HTML code on each and every page? Of course it is...rnrnFirst of all, you ll need to assign a class to each navigation item:rnrn ul rn li a href= #  class= home  Home /a /li rn li a href= #  class= about  About us /a /li rn li a href= #  class= contact  Contact us /a /li rn /ul rnrnYou ll then need to insert an id into the  body  tag. The id should be representative of where users are in the site and should change when users move to a different site section. When in Home it should read  body id= home  , in About Us it should be  body id= about   and in Contact Us  body id= contact  .rnrnNext, you create a new CSS rule:rnrn#home .home, #about .about, #contact .contactrn{rncommands for highlighted navigation go herern}rnrnThis basically creates a rule that only takes effect when class= home  is contained withinid= home , and when class= about  is in id= about  and class= contact  is inid= contact . These situations will only occur when the user is in the appropriate site section, seamlessly creating our highlighted navigation item.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/18</link>
    <description>rnrnLook for needle in haystack..rnrnif (strpos($haystack, needle ) !== false) {rn echo true ;rn}rnrnrn !== is better than != AND === better than == rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/19</link>
    <description>rnrn$this- Form- input( Country.id , array( type = select , label = Countries , options = $countrylist, default = 3 ));rnrnThe default value can be a variable that can be 'set' in the controller and passed to the view..rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/20</link>
    <description>Left and right html can be inserted into an css element, like a square or curley bracket, percentage sign, or currency sign like a dollar or a pound signrn rnrnrnrn span class= b  text /span  rn style rn.b:after{content: ] }rn.b:before{content: [ }rn /style rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/21</link>
    <description>You can retrieve a single value in more than one way in cakephp rnrneither like so:rnrnrn$value = $this- model- field( fieldname , array( fieldid - $vlaue));rnrn$logincount = $this- User- field( logincount , array( id = $login_user[ id ]));rnrnrnor like so:rnrnrn$logincount = $this- User- find( first , array( conditions = array( id = $login_user[ id ])));rnrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/29</link>
    <description>Components and Plugins add new functionality to the Cakephp application. rnrnComponents and Plugins are still separate entities in Cake 2.0. Components are  are packages of logic that are shared between controllers , where as Plugins are  a website/cakephp application of controllers, models, and views . which can almost run on it s own, but extend the father site.rnrnCompoments extend the base Component class, while Plugins have their own AppModel and AppController.rnrnThink of a plugin as a separate Cake application sharing the same core libraries with your main application.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/22</link>
    <description>You can update a single database field in cakephp so:rnrn rnrnrnrn$this- Model- id = $id;rn$this- Model- saveField( myfieldtoupdate , $fieldtoupdatevalue);rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/23</link>
    <description>If you have two function onernrnrnrnpublic function name()rn{rn ...content herern}rnrnrnthe other rnrn rnrnrnrnfunction name()rn{rn ...content herern}rnrnrn..They are the same, but Public function is better code practice and more explicit, the default is public and forces developers to consider their method visibility. The methods that are available are: public, private and protectedrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/24</link>
    <description>When a user s profile is updated, you want to reset the user details which are set when registering/login by the auth componentrnrn rnrnyou do it like so:rnrnrn$this- Session- write( Auth , $this- User- read(null, $user_id));rnrnrnor tryrnrnrnrn$this- Session- write( Auth , $this- User- read(null, $this- Auth- User( id )));rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/25</link>
    <description>To remove the title from the input field in cakephp go from:rnrnrnrnecho $form- input( title );rnrnrntornrnrnrnecho $form- input( title , array( label = false));rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/26</link>
    <description>In order to set the value of a hidden field in cakephp you can do it like this:rnrnrnecho $form- hidden( Model.name , array( value =  fieldvalue ) ); rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/27</link>
    <description>You can check if a value in a comma separated string exists in a few ways one way is:rnrnrnrn$list = 1,2,3,4,5,6 ;rnrnrnrn$commaseparatedlist = explode( , ,$list);rnif (in_array(2, $commaseparatedlist)) {rn echo  Available ;rn} else {rn echo  Not available ;rn}rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/28</link>
    <description>In order to display an individual javascript file for each spesific element in Cakephp, in the layout put:rnrnrn ?php echo $scripts_for_layout; ? rnrnrnThen in the element you can call the javascript file you need to include, like so:rnrnrnHtml- script( js_file , array( inline = false)); ? rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/30</link>
    <description>The way to get the li elements to display next to each other is by simply place a float:left style on the li elementrnrnrnrn.menu-left ul li {rn display:inline-block;rn float:left;rn vertical-align: top;rn}rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/31</link>
    <description>Here is how to remove the comma from beginning or end of string with php:rnrnright part of string:rnrnrnrn$string = rtrim($string, , );rnrnrnleft part of stringrnrnrnrn$string = ltrim($string, , );rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/32</link>
    <description>Here is how you style every second li, or lo or other element in css:rnrnthe even:rnrnrnrnul li:nth-child(even) {rn border: #ccc 1px solid;rn}rnrnrnthe odd:rnrnrnrnul li:nth-child(even) {rn border: #ccc 1px solid;rn}rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/33</link>
    <description>rnMake sure beforeSave() returns true. rnrnif($this- save($this- data)) {rn echo worked ;rn} else {rn echo failed ;rn}rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/39</link>
    <description>It can be an unending search if you have accidentally deleted a file or made some changes and you want to restore it and you don t have any other copies. The one option if you use PSPAD is, it stores your ftp files locally and you might be able to retrieve it.rnrnrnIn windows 7 you can go to C: USERS/computer-username/AppData/Local/Temp/Pspad/name-of-your-ftp-connection/rnrnrnMake sure that all hidden files are viewable in the Control Panelrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/40</link>
    <description>You can remove the last comma, or character from a string - which which when you loop through a comma seperated list, can break the loop because the last value is empty after the last comma, so you want to remove it before you loop through the list.rnrnBy doing this:rnrnrnrn$string = name , name2 , name3 , ;rn$string = rtrim($string, , );rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/41</link>
    <description>Sometimes the most simplistic things in php can be a headace in a framework like cakephp.rnrnYou can move parameters in two ways. Either use a named parameter where you call it by name or a un-named parameter where it is just passed.rnIn named:rnrnYou pass it like so:rnrnrn ?php if($records[ User ][ tablename ]  0) { echo $this- Html- link(__( title here ,true),array( plugin = false, controller =  user , action =  index , userid = $records[ User ][ id ]),array( class = btn btn-primary , escape = false)); } ? rnrnrnThen you receive it like:rnrnrnecho $this- params[ named ][ userid ] // param rnrnrnin un - named parameters you send like:rnrnrn ?php if($records[ User ][ tablename ]  0) { echo $this- Html- link(__( title here ,true),array( plugin = false controller =  user , action =  index , $records[ User ][ id ]),array( class = btn btn-primary , escape = false)); } ? rnrnrnThen you receive like:rnrnrnrnecho $this- params[ pass ][0] // passed_param rnrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/42</link>
    <description>CKFinder is not free but in Cakephp you can integrate KCFinder file manager into CKEditor so that you can upload files to your server.rnrnThe following instructions were made based on a following versions of software:rnrnrn	CakePHP 2.0.5rn	CKEditor 3.6.2rn	KCFinder 2.51rnrnrnHow to install and integrate CKEditor to CakePHP?rnrnrn	Download CKEditor from www.ckeditor.comrn	Copy files from the zipped folder to  webroot/js/ckeditor/ rn	In the view where you want to display the editor, put the following script on the top of the page (or somewhere before textarea which you want to contain editor):rn	 ?php echo $this- Html- script( ckeditor/ckeditor );? rn	This scipt will include the  webroot/js/ckeditor.js  file to your view.rn	Create the textarea and give it a class named  ckeditor rn	 ?php echo $this- Form- textarea( content ,array( class = ckeditor ))? rn	rnrnrnVoila! The editor is now displaying instead of raw textarea.rnrnHow to install and integrate KCFinder to CakePHP?rnrnrn	Download KCFinder from kcfinder.sunhater.comrn	Copy files from the zipped folder to  webroot/js/kcfinder/ rn	Open  webroot/js/kcfinder/config.php  file.rn	In this file you can set several configurations, but we will focus on the ones that are most important for our file manager to work.rn	KCFinder is disabled by default.rn	If you want to give the ability of using file manager to all users in your website (so with no restrictions), change the value of disabled to false.rn	 disabled = false,rn	But giving everyone access to managing files on the server is probably not a good idea. Instead of this, you can enable file managment only when a specified session variable is set. The name of the session variable is on the bottom of config.php file:rnrn	 _sessionVar =  $_SESSION[ KCEDITOR ],rn	So, this is what you should do to make the file manager available after an authenticated user logs in:rnrn	rn		leave the  disabled  to  true rn		in the controller where you do the user authentication, after user has successfully logged in, enter this code to override the  disabled  value:rn		$_SESSION[ KCEDITOR ][ disabled ]=false;rn		Remember to destroy this session variable after user logs out. rn		on the top of the  webroot/js/kcfinder/core/autoload.php  file insert:rn		session_name( CAKEPHP );rn		rn	rn	rn	Still in the  config.php  file define the folder for uploaded files. By default the folder is  upload  in  kcfinder  directory. rn	If you are developing an application on your localhost and the  webroot  is under a  http://localhost/  address, and you want to keep uploaded files in  webroot/upload  folder, the uploadURL configuration should look like:rn	 uploadURL = /app/webroot/upload ,rn	If you are developing your application under for example  http://localhost/my_app/  address, the uploadURL should look like:rnrn	 uploadURL = /my_app/app/webroot/upload ,rn	rnrnrnYou can test if KCFinder displays and works correctly under the URL:rnhttp://path_to_your_app/js/kcfinder/browse.phprn rnrnHow to integrate KCFinder to CKEditor in CakePHP?rnrnOpen the  webroot/js/ckeditor/config.js  file and modify editor config to contain following code:rnrn rnrnCKEDITOR.editorConfig = function( config )rn{rn  config.filebrowserBrowseUrl = /js/kcfinder/browse.php?type=files ;rn  config.filebrowserImageBrowseUrl = /js/kcfinder/browse.php?type=images ;rn  config.filebrowserFlashBrowseUrl = /js/kcfinder/browse.php?type=flash ;rn  config.filebrowserUploadUrl = /js/kcfinder/upload.php?type=files ;rn  config.filebrowserImageUploadUrl = /js/kcfinder/upload.php?type=images ;rn  config.filebrowserFlashUploadUrl = /js/kcfinder/upload.php?type=flash ;rn};rnrnrnIf your app is being developed under for example http://localhost/my_app/, remember to put the whole path in the URLs, for example:rnrnconfig.filebrowserBrowseUrl = /my_app/js/kcfinder/browse.php?type=files ;rnrnAfter adding above six lines of code in the CKEditor configuration you should be able to see  Browse  button in image / link / Flash insert options.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/43</link>
    <description>In the default.ctp layout.rnrnrn if(isset($cssIncludes)){rn foreach($cssIncludes as $css){rn  echo $this- Html- css($css);rn }rn}rnrnif(isset($jsIncludes)){rn foreach($jsIncludes as $js){rn  echo $this- Html- script($js);rn }rn}rnrnrnIn the action of the view in the controller..rnrnrn$this- set( cssIncludes ,array( my_css )); // this will link to /css/my_css.css in functionrn$this- set( jsIncludes ,array( my_jsfile )); rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/44</link>
    <description>In PHP, string concatenation is done with the . operator:rnrnrnrn$string .= my string ;rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/45</link>
    <description>Here is how to change the thickness of a hr tag hr in css or in line.rnrnrnrnhr {rn border: none;rn height: 1px;rn /* Set the hr color */rn color: #333; /* old IE */rn background-color: #333; /* Modern Browsers */rn}rnrnrninline:rnrnrnrn hr style= height:1px;border:none;color:#333;background-color:#333;  / rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/46</link>
    <description>You can render a view in a controller from another controller like so:rnrnrn$this - render( Controller/View );rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/48</link>
    <description>There are two ways to join tables in Cakephp.rnrnFirstrnrnYou would create a relationship with your User model and Messages Model, and use the containable behavior:rnrnrnrnclass User extends AppModel {rn public $actsAs = array( Containable );rn public $hasMany = array( Message );rn}rnrnclass Message extends AppModel {rn public $actsAs = array( Containable );rn public $belongsTo = array( User );rn}rnrnrnYou need to change the messages.from column to be messages.user_id so that cake can automagically associate the records for you.rnrnThen you can do this from the messages controller:rnrnrnrn$this- Message- find( all , array(rn contain = array( User )rn conditions = array(rn  Message.to = 4rn ),rn order =  Message.datetime DESC rn));rnrnrnThe Second wayrnrn rnrnI recommend using the first method, because it will save you a lot of time and work. The first method also does the groundwork of setting up a relationship which can be used for any number of other find calls and conditions besides the one you need now. However, cakePHP does support a syntax for defining your own joins. It would be done like this, from the MessagesController:rnrnrnrn$this- Message- find( all , array(rn joins = array(rn array(rn  table =  users ,rn  alias =  UserJoin ,rn  type =  INNER ,rn  conditions = array(rn   UserJoin.id = Message.from rn  )rn )rn ),rn conditions = array(rn  Message.to = 4rn ),rn fields = array( UserJoin.* , Message.* ),rn order =  Message.datetime DESC rn));rnrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/49</link>
    <description>As documented in http://book.cakephp.org/2.0/en/models/retrieving-your-data.htmlrnrnrnrn$totalUsers = $this- User- find( count , array( conditions = array( User.email = $email)));rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/50</link>
    <description>Understandably, Recruiters is first and foremost sales people. The best sales people in the world are those who build up relationships with their clients and serve their needs, add value for their client. Sales people who are in it for the quick buck are exposed quickly and shunned. Here is a list of things recruiters do that make the client feel that they are only out for a quick buck.rnrnrnrnNOT Testing candidates properly.rnrnMany times candidates are not tested properly. Often the recruiter does not have the time or technical expertise to interview candidates properly. This should be more than just a phone call and a tick list. The phone call part is OK, but the recruiter need to know at least what questions to ask. Either send the candidate a list of answers and questions or send them an invitation to a SKILLBOOKER test to complete. Test send to candidates should not be longer than half an hour as candidates might apply for several jobs and it makes their life very difficult if they have to do a 3 hour test for each job they apply for. Interview questions can also be casually asked over the phone, they type of interview questions that the candidate will be asked when he/she actually go to the interview.rnrn rnrnCatch-all Job DescriptionsrnrnExample:rnrnrnOver 7 years experience programming in Language X, Y, ZrnStrong design principles.rnSolid on coding fundamentals e.g. Object-Oriented design, data structures, and dependency injection.rnExperience in enterprise-level integration technologies including X and Y, in ZrnHands-on experience in widely used third party frameworksrn[several more]rnrnThe candidate must be highly self-motivated confident and mature, well developed analytical and problem solving skills with the aptitude to learn as well as a flexibility to adapt to change.rnTeam player and proven ability to work under pressure and meet project datesrnrnrnrnCatch all job descriptions are bad in two ways, they will put serious candidates off and under mine your professional outlook.Also you might end up with list and list of the wrong kind of candidates !! Job descriptions should have the general location (at least) where the job is located, the sector, what primary and secondary skills are needed and if possible the salary or rate bracket.rnrn rnrnResume DoctoringrnrnDon t do it !! If a candidate has 1 month of experience and you change it to 1 year it will not just be caught out in a proper interview, they candidate will be embarrassed when he/she is asked to do a technical test to prove he/she has a year s worth of experience in that technology. It will make the HR person - your client fed up that you have send - unvetted candidates to his/her door !!rnrn rnrnDon t hint just askrnrnRecruiters will phone candidates and ask shadowy questions about their past trying to find the contact person of where they lived before in order to drum up more business. Don t do it. Just ask properly. Like this: Hi Joe, I see you worked at Bla bla industries I would like to give them a call and see if they have any work for us, if they do we ll send you a 200 gift. Joe can say yes or no respect that and respect people it will pay off in the long run.rnrn rnrnDeliver what you promisernrnIf you promise some one 200 for introducing you to a candidate, make sure you get back to that person if you candidate get s the job and use your initiative and pay them. See it as sowing, that bit of taking care to pay someone who would not be the wise if you didn t will make the universe look after you. You will feel solid and next time you speak to someone promising 200 you can do it with confidence knowing you are not lying.rnrn rnrnProtect your candidatesrnrnCandidates are sometimes to be blamed for bad work, but sometimes they do get the short end of the stick. Protect your candidates. Make sure your contracts are good and decent. For instance if a candidate works over the Christmas / New Year period try and negotiate a day or two more breaks that what is expected. This will give the candidate more respect. Also you can offer the candidate extra money (weekend break? ) for completing contacts / introduction periods. This will please job providers and candidates equally.rnrn rnrnCommunicate properlyrnrnIf a candidate did not get a job, contact him and tell him/her that properly and with care. Not returning phone calls or feedback is BAD. I know of candidates who has a little black list they keep with all the bad recruiters on there.Make sure you don t get on such a list.rnrn rnrnDeliver what you advertisernrnIf you advertise a job for 200 a day, when the candidate get it give it for 200 a day don t try and get the candidate to take it for 180. It might be a sales man trick but very very irritated when you are the candidate one moment you are happy for getting a job the next moment you hear you have to sacrifice a portion of you income to a greedy recruitment consultant.rnrn rnrnSounding arrogantrnrnFriendliness and humility go a long way. As a recruiter you might not know that people are generally scarred of taking to you. For the candidate it is a very personal thing. Sensitivity and friendliness will put a candidate at ease and generally you will have more success. Try not to sound arrogant, irritable but just down to earth and professional and friendlyrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/51</link>
    <description> CakePHP version 2 cheat sheet has been coming for a long time, but I have been looking for a spare day to just sit and go through it properly. In this cheatsheet (based on some other online examples) I am also going to reference other Cakephp examples found on the Skillbooker.com tutorial site.rnrnCakePHP Naming ConventionsrnrnThis is a list of the CakePHP naming conventions, specifically the CakePHP Model, View, and Controller naming conventions.rnrnCakePHP Modelsrnrnrn	class names are singularrn	class names UpperCamelCasedrn	filenames use a lower-case underscored syntaxrn	database tables are plural underscoredrn	set var $name in your model definition (PHP4)rnrnrnCakePHP Controllersrnrnrn	class names are pluralrn	class names are UpperCamelCased for multi-word controllersrn	class names also end with Controller rn	file names use a lower-case underscored syntaxrn	file names also end with _controller.php .rnrnrnCakePHP Viewsrnrnrn	views are in folders that match controllerrn	view folders are plural underscoredrn	views are named after actions they display.rn	name the view file after action name, in lowercase.rnrnrnCakePHP naming conventions - ExamplesrnrnAssuming we have a database table named orders, the following standard CakePHP naming conventions should be used:rnrnrnModelrn filename = order.phprn classname = Orderrn directory = app/modelsrnrnViewrn filename = (same as the action name in the controller)rn extension = .ctp (the filename extension)rn directory = app/views/ordersrnrnControllerrn filename = orders_controller.phprn classname = OrdersControllerrn directory = app/controllersrnrnrnAssuming we have a database table named order_items, the following standard CakePHP naming conventions should be used:rnrnrnModelrn filename = order_item.phprn classname = OrderItemrn directory = app/modelsrnrnViewrn filename = (same as the action name in the controller)rn extension = .ctp (the filename extension)rn directory = app/views/order_itemsrnrnControllerrn filename = order_items_controller.phprn classname = OrderItemsControllerrn directory = app/controllersrnrnrn rnrnCakePHP bake Command ExamplesrnrnHere are some CakePHP bake examples (cake bake examples):rnrnrncake bakerncake bake controllerrncake bake modelrncake bake viewrncake bake projectrncake bake controller ordersrncake bake model orderrnrnrnCakePHP Foreign Key Examples and Relationship TypesrnrnrnRelationship Association Type   Examplernone to one  hasOne   A user has one profile.rnone to many hasMany  A user can have multiple recipes.rnmany to one belongsTo   Many recipes belong to a user.rnmany to many hasAndBelongsToMany Recipes have, and belong to many tags.rnrnrnFurther details on these relationships can be found at the CakePHP Cookbook pages:rnrnrn	hasOnern	belongsTorn	hasManyrn	hasAndBelongsToManyrnrnrnCakePHP relationship type examples:rnrnrn# in a Post model class:rn# each Post belongs to a Userrnvar $belongsTo = array( User );rnrn# TODOrnvar $hasOne ...rnrn# in the User modelrnvar $hasMany = array( Post );rnrn# TODOrnvar $hasAndBelongsToManyrnrnrnThe CakePHP recursive attributernrnThe CakePHP recursive attribute affects how CakePHP retrieves data, in particular when there are associations between database tables. (I normally indicate these associations with foreign key relationships, but I ve also seen applications not indicate foreign key relationships in the database, but just deal with them in the software that is written.)rnrnFor instance, the CakePHP Cookbook includes an example of a blog database, and this database is built upon in the excellent book, Beginning CakePHP. In this book, blog  posts  are associated with  tags  and  users . As the author of the book explains, when a Post model runs a query that pulls posts from the database, it will (may) also retrieve associated rows from the tags and users database tables. This is where the CakePHP recursive attribute comes in:rnrnrnThe CakePHP recursive attribute tells the model how far to look when pulling associated rows.rnrnrnThe CakePHP recursive attribute can be set to the following integer values, with the following meanings:rnrnrnValue  Meaningrn-1  returns only the current model, and ignores all associations.rn 0  returns the current model, plus its owner(s).rn 1  returns the current model, its owner(s), plus their associated models.rn 2  returns the current model, its owner(s), their associated models,rn and the associated models of any associations.rnrnrnIn a simple controller index() method, the recursive attribute may be used like this:rnrnrnfunction index()rn{rn $this- Post- recursive = 0;rn $this- set( posts , $this- paginate);rn}rnrnrnTODO - add other recursive examples herernrnCakePHP find ConditionsrnrnOne of the things you have to get used to when working with CakePHP is the CakePHP find method. This is a collection of CakePHP find examples.rnrnFirst, a list of possible CakePHP find query parameters:rnrnrnName Default Descriptionrntype  first  can be all , first , or list . determines what type ofrn   find operation to perform. (TODO - more info here)rnrnconditions null array containing the find (select) conditions asrn   key/value pairsrnrnfields  null array specifying which fields should be retrievedrn   in the resulting select queryrnrnorder  null sql order by conditions. field name must bern   followed by ASC or DESCrnrnpage null page number, used for paged datarnrnlimit  null a limit on the number of results returned, likern    select * from orders limit 20 .rnrnoffset  null sql offset value (i haven t used this query muchrn   myself, but i think it refers to skipping X rn   number of rows returned in a query)rnrnrecursive  1 the cakephp recursive value, relating to associatedrn   model datarnrnrnNext, a very simple CakePHP find query that retrieves all records from the Post model (probably not something you ll want to do in a production application):rnrnrn$this- Post- find( all );rnrnrnA CakePHP find query with one condition:rnrnrn$this- Post- find( all , array( conditions = array( User.id = 5)));rnrnrnA CakePHP find query with one  not equal to  condition:rnrnrn$this- Post- find( all , array( conditions = array( User.id = 5 )));rnrnrnA CakePHP find query with multiple conditions:rnrnrn# this is a little lame, but i m trying to avoid datesrn$this- Post- find( all , array( conditions = array( User.id = 1, Post.id = 50 )));rnrnrnA CakePHP find query that uses all the find function parameters:rnrnrn# TODO - i m not sure that this is right; i think fields is supposed to be an arrayrn$this- Post- find( all ,rn   array( conditions = array( User.id = 5),rn    fields = Post.name ,rn    order = Post.id ASC ,rn    limit = 20,rn    recursive = 0));rnrnrnA CakePHP find query using a date:rnrnrn# note: you can search for date or datetime fields by enclosing the table s field namern#  in the SQL DATE() function.rn$this- Post- find( all , array( conditions = array( User.id = 5, DATE(Post.date) = CURDATE() )));rnrn# TODO demonstrate  date and  date conditionsrnrnrnCakePHP find queries with ORDER BY examples:rnrnrnarray( order = date ASC )rnarray( order = date DESC )rnarray( order = User.id DESC )rnrnrnA collection of other CakePHP find query examples:rnrnrnThese CakePHP find examples are lines of code that would be used in an OrderController class:rnrn$this- Order- find( all );rn$this- Order- find(null, null, date DESC );rn$this- Order- find( all , array( conditions = array( User.id = 1)));rn$this- Order- find( all , array( conditions = array( User.id = array(1,2,3,4))));rn$this- Order- find( all , array( conditions = array( User.id = 1 )));rn$this- Order- find( all , array( conditions = array( User.id = 1, DATE(Post.date) = CURDATE() )));rn$this- Order- find( all , array( order = date ASC , limit = 20, recursive = 0);rnrnrnHere are some CakePHP find examples from the CakePHP retrieving your data book page:rnrnrn$params can contain all these:rnrnarray(rn  conditions = array( Model.field = $thisValue), //array of conditionsrn  recursive = 1, //intrn  fields = array( Model.field1 , DISTINCT Model.field2 ), //array of field namesrn  order = array( Model.created , Model.field3 DESC ), //string or array defining orderrn  group = array( Model.field ), //fields to GROUP BYrn  limit = n, //intrn  page = n, //intrn  offset = n, //int  rn  callbacks = true //other possible values are false, before , after rn)rnrnrnHere s a CakePHP function showing several different CakePHP find examples:rnrnrn# find( first , $params) syntaxrnrnfunction some_function() {rn ...rn $this- Article- order = null; // resetting if it s setrn $semiRandomArticle = $this- Article- find();rn $this- Article- order = Article.created DESC ; // simulating the model having a default orderrn $lastCreated = $this- Article- find();rn $alsoLastCreated = $this- Article- find( first , array( order = array( Article.created DESC )));rn $specificallyThisOne = $this- Article- find( first , array( conditions = array( Article.id = 1)));rn ...rn}rnrnrnHere s a CakePHP find count example:rnrnrn# find( count , $params)rnrnfunction some_function() {rn  ...rn  $total = $this- Article- find( count );rn  $pending = $this- Article- find( count , array( conditions = array( Article.status =  pending )));rn  $authors = $this- Article- User- find( count );rn  $publishedAuthors = $this- Article- find( count , array(rn  fields =  DISTINCT Article.user_id ,rn  conditions = array( Article.status != =  pending )rn  ));rn  ...rn}rnrnrnSome CakePHP find all examples:rnrnrn# find( all , $params) syntaxrnrnfunction some_function() {rn  ...rn  $allArticles = $this- Article- find( all );rn  $pending = $this- Article- find( all , array( conditions = array( Article.status =  pending )));rn  $allAuthors = $this- Article- User- find( all );rn  $allPublishedAuthors = $this- Article- User- find( all , array( conditions = array( Article.status != =  pending )));rn  ...rn}rnrnrnCakePHP find list examples, useful for creating select boxes:rnrnrn# find( list , $params) syntaxrnrnfunction some_function() {rn  ...rn $allArticles = $this- Article- find( list );rn $pending = $this- Article- find( list , array(rn  conditions = array( Article.status =  pending )rn ));rn $allAuthors = $this- Article- User- find( list );rn $allPublishedAuthors = $this- Article- find( list , array(rn  fields = array( User.id , User.name ),rn  conditions = array( Article.status != =  pending ),rn  recursive = 0rn ));rn  ...rn}rnrnrnSee the CakePHP retrieving your data book page for many more CakePHP find examples, including:rnrnrn	find threadedrn	find neighborsrn	findAllByrn	findByrn	queryrn	fieldrn	readrn	More complex CakePHP find examplesrnrnrnCakePHP paginate ExamplesrnrnAnother important CakePHP method to know is the CakePHP paginate method. Here is a collection of CakePHP paginate examples.rnrnrnA basic CakePHP paginate method in a controller:rnrnfunction index() {rn $this- Order- recursive = 0;rn $this- set( orders , $this- paginate());rn}rnrnrnYou can also control CakePHP pagination with the CakePHP paginate variable in your CakePHP controllers, like this:rnrnrnclass RecipesController extends AppController {rnrn var $paginate = array(rn  limit = 25,rn  order = array(rn  Post.title =  asc rn )rn );rn}rnrnrnor this:rnrnrnclass RecipesController extends AppController {rnrn var $paginate = array(rn  fields = array( Post.id , Post.created ),rn  limit = 25, rn  order = array(rn  Post.title =  asc rn )rn );rn}rnrnrnFor more information on CakePHP pagination, see the CakePHP pagination book page.rnrn rnrnCakePHP loggingrnrnYou can write to CakePHP log files using the CakeLog::write method:rnrnrnCakeLog::write( debug , Something did not work );rnrnrnOr you can use the CakePHP log function in any class that extends the CakePHP Object class:rnrnrn$this- log( Something did not work! , debug );rnrnrnYou can also perform CakePHP error logging like this:rnrnrnConfigure::write( log , E_WARNING);rnrnrnCakePHP Global MethodsrnrnThese are names of some globally available CakePHP methods (assuming you extend the CakePHP Object class):rnrnrnconfigrnusesrnvendorrndebug  - use like ? debug($order); ? in a viewrnarnaarnamrne  - shortcut for echo()rnenvrnifernlowrnuprnrrnpr  - shortcut for print_r()rnstripslashes_deeprnrnrnCakePHP Global ConstantsrnrnThis is a list of CakePHP global constants. (I don t know much about these yet.)rnrnrnACL_CLASSNAMErnACL_FILENAMErnAPPrnAPP_DIRrnAPP_PATHrnAUTO_SESSIONrnCACHErnCACHE_CHECKrnCAKErnCAKE_CORE_INCLUDE_PATHrnCAKE_SECURITYrnCAKE_SESSION_COOKIErnCAKE_SESSION_SAVErnCAKE_SESSION_STRINGrnCAKE_SESSION_TABLErnCAKE_SESSION_TIMEOUTrnCOMPONENTSrnCOMPRESS_CSSrnCONFIGSrnCONTROLLER_TESTSrnCONTROLLERSrnCORE_PATHrnCSSrnDATASOURCErnDAYrnDEBUGrnDSrnELEMENTSrnHELPER_TESTSrnHELPERSrnHOURrnINFLECTIONSrnJSrnLAYOUTSrnLIB_TESTSrnLIBSrnLOG_ERRORrnLOGSrnMAX_MD5SIZErnMINUTErnMODEL_TESTSrnMODELSrnMODULESrnMONTHrnROOTrnSCRIPTSrnSECONDrnTAG_DIVrnTAG_FIELDSETrnTAG_LABELrnTAG_P_CLASSrnTESTSrnTMPrnVENDORSrnVIEWSrnWEBROOT_DIRrnWEBSERVICESrnWEEKrnWWW_ROOTrnYEARrnrnrnCakePHP Controller properties, methods, callbacksrnrnCakePHP controller properties:rnrnrn$name = nullrn$action = nullrn$autoLayout = truern$autoRender = truern$base = nullrn$beforeFilter = nullrn$cacheAction = falsern$components = array()rn$data = array()rn$helpers = array( Html )rn$here = nullrn$layout = default rn$output = nullrn$pageTitle = falsern$params = array()rn$persistModel = falsern$plugin = nullrn$uses = falsern$view = View rn$viewPath = nullrn$webroot = nullrn$_viewClass = nullrn$_viewVars = array()rnrnrnCakePHP controller methodsrnrnrncleanUpFields ()rnconstructClasses ()rnflash ($message, $url, $pause = 1)rnflashOut ($message, $url, $pause = 1)rngenerateFieldNames ($data = null, $doCreateOptions = true)rnpostConditions ($data, $operator =  , $bool = AND , $exclusive = false)rnredirect ($url, $status = null)rnreferer ($default = null, $local = false)rnrender ($action = null, $layout = null, $file = null)rnset ($one, $two = null)rnsetAction ($action)rnvalidate ()rnvalidateErrors ()rnrnrnCakePHP controller callbacksrnrnrnafterFilter ()rnbeforeFilter ()rnbeforeRender ()rnrnrnCakePHP Model properties, methods, callbacks, and validationrnrnCakePHP Model properties:rnrnrn$belongsTo = array()rn$cacheQueries = truern$data = array()rn$displayField = nullrn$hasAndBelongsToMany = array()rn$hasMany = array()rn$hasOne = array()rn$id = falsern$logTransactions = falsern$name = nullrn$primaryKey = nullrn$recursive = 1rn$useDbConfig = default rn$useTable = nullrn$validate = array()rn$validationErrors = array()rnrnrnCakePHP Model methods:rnrnrnbindModel ($params)rncreate ()rndelete ($id = null, $cascade = true)rnescapeField ($field)rnexecute ($data)rnexists ()rnfield ($name, $conditions = null, $order = null)rnfind ($conditions = null, $fields = null, $order = null, $recursive = null)rnfindAll ($conditions = null, $fields = null, $order = null, $limit = null, $page = 1, $recursive = null)rnfindAllThreaded ($conditions = null, $fields = null, $sort = null)rnfindCount ($conditions = null, $recursive = 0)rnfindNeighbours ($conditions = null, $field, $value)rngenerateList ($conditions = null, $order = null, $limit = null, $keyPath = null, $valuePath = null)rngetAffectedRows ()rngetColumnType ($column)rngetColumnTypes ()rngetDisplayField ()rngetID ($list=0)rngetLastInsertID ()rngetNumRows ()rnhasAny ($conditions = null)rnhasField ($name)rninvalidate ($field)rninvalidFields ($data = array())rnisForeignKey ($field)rnloadInfo ()rnquery ()rnread ($fields = null, $id = null)rnremove ($id = null, $cascade = true)rnsave ($data = null, $validate = true, $fieldList = array())rnsaveField ($name, $value, $validate = false)rnset ($one, $two = null)rnsetDataSource ($dataSource = null)rnsetSource ($tableName)rnunbindModel ($params)rnvalidates ($data=array())rnsetSource ($tableName)rnrnrnCakePHP Model callbacksrnrnrnafterDelete ()rnafterFind ($results)rnafterSave ()rnbeforeDelete ()rnbeforeFind ( $queryData)rnbeforeSave ()rnbeforeValidate ()rnrnrnCakePHP Model validationrnrnrn VALID_EMAIL`rn VALID_NOT_EMPTY`rn VALID_NUMBER`rn VALID_YEAR`rnrnrnCakePHP View properties and methodsrnrnCakePHP View propertiesrnrnrn$action = nullrn$autoLayout = truern$autoRender = truern$base = nullrn$controller = nullrn$ext = .thtml rn$hasRendered = nullrn$helpers = array( Html )rn$here = nullrn$layout = default rn$loaded = array()rn$models = array()rn$name = nullrn$pageTitle = falsern$paramsrn$parent = nullrn$plugin = nullrn$subDir = nullrn$themeWeb = nullrn$uses = falsern$viewPathrnrnrnCakePHP View methodsrnrnrnelement ($name)rnerror ($code, $name, $message)rnpluginView ($action, $layout)rnrender ($action = null, $layout = null, $file = null)rnrenderCache ($filename, $timeStart)rnrenderElement ($name, $params = array())rnrenderLayout ($content_for_layout)rnsetLayout ($layout)rnrnrnCakePHP Data ValidationrnrnHere are some CakePHP data validation examples, mostly from the CakePHP Data Validation book page:rnrnrn ?phprnclass User extends AppModel {rn var $name = User ;rn var $validate = array(rn  login =  alphaNumeric ,rn  email =  email ,rn  born =  date rn );rn}rn? rnrnrnCakePHP HelpersrnrnCakePHP Html HelperrnrnrnaddCrumb ($name, $link)rncharset ($charset, $return = false)rncheckbox ($fieldName, $title = null, $htmlAttributes = null, $return = false)rncss ($path, $rel = stylesheet , $htmlAttributes = null, $return = false)rndateTimeOptionTag ($tagName, $dateFormat = DMY , $timeFormat = 12 , $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)rndayOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)rnfile ($fieldName, $htmlAttributes = null, $return = false)rnformTag ($target = null, $type = post , $htmlAttributes = null)rngetCrumbs ($separator =  raquo; , $startText = false, $return = false)rnguiListTree ($data, $htmlAttributes = null, $bodyKey = body , $childrenKey = children , $return = false)rnhidden ($fieldName, $htmlAttributes = null, $return = false)rnhourOptionTag ($tagName, $value = null, $format24Hours = false, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)rnimage ($path, $htmlAttributes = null, $return = false)rninput ($fieldName, $htmlAttributes = null, $return = false)rnlink ($title, $url = null, $htmlAttributes = null, $confirmMessage = false, $escapeTitle = true, $return = false)rnlinkEmail ($title, $email = null, $options = null)rnmeridianOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)rnminuteOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)rnmonthOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)rnparseHtmlOptions ($options, $exclude = null, $insertBefore = , $insertAfter = null)rnpassword ($fieldName, $htmlAttributes = null, $return = false)rnradio ($fieldName, $options, $inbetween = null, $htmlAttributes = array(), $return = false)rnselectTag ($fieldName, $optionElements, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true, $return = false)rnsetFormTag ($tagValue)rnsubmit ($caption = Submit , $htmlAttributes = null, $return = false)rntableCells ($data, $oddTrOptions = null, $evenTrOptions = null, $return = false)rntableHeaders ($names, $trOptions = null, $thOptions = null, $return = false)rntagErrorMsg ($field, $text)rntagIsInvalid ($model, $field)rntagValue ($fieldName)rntextarea ($fieldName, $htmlAttributes = null, $return = false)rntrim ()rnurl ($url = null, $return = false)rnvalidate ()rnvalidateErrors ()rnyearOptionTag ($tagName, $value = null, $minYear = null, $maxYear = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)rn_parseAttributes ($options, $exclude = null, $insertBefore = , $insertAfter = null)rnrnrnCakePHP Form Helperrnrnrnbutton ($params, $type= button , $options=array())rncreate ($model=null, $options=array())rndateTime ($tagName, $dateFormat= DMY , $timeFormat= 12 , $selected=null, $attributes=array(), $showEmpty=true)rnday ($fieldName, $selected=null, $attributes=array(), $showEmpty=true)rnend ($options=null)rnerror ($field, $text=null, $options=array())rnfile ($fieldName, $options=array())rnhidden ($fieldName, $options=array())rnhour ($tagName, $format24Hours=false, $selected=null, $attributes=array(), $showEmpty=true)rninput ($tagName, $options=array())rninputs ($fields=null, $blacklist=null)rnisFieldError ($field)rnlabel ($tagName=null, $text=null, $attributes=array())rnmeridian ($tagName, $selected=null, $attributes=array(), $showEmpty=true)rnminute ($tagName, $selected=null, $attributes=array(), $showEmpty=true)rnmonth ($tagName, $selected=null, $attributes=array(), $showEmpty=true)rnpassword ($fieldName, $options=array())rnsecure ($fields)rnselect ($fieldName, $options=array(), $selected=null, $attributes=array(), $showEmpty=  )rnsubmit ($caption= Submit , $options=array())rnsubmitImage ($path, $options=array())rntext ($fieldName, $options=array())rntextarea ($fieldName, $options=array())rnyear ($fieldName, $minYear=null, $maxYear=null, $selected=null, $attributes=array(), $showEmpty=true)rnrnrnCakePHP Ajax HelperrnrnrnautoComplete ($field, $url= , $options=array())rndiv ($id, $options=array())rndivEnd ($id)rndrag ($id, $options=array())rndrop ($id, $options=array())rndropRemote ($id, $options=array(), $ajaxOptions=array())rneditor ($id, $url, $options=array())rnform ($params=null, $type= post , $options=array())rnisAjax ()rnlink ($title, $href=null, $options=array(), $confirm=null, $escapeTitle=true)rnobserveField ($field_id, $options=array())rnobserveForm ($field_id, $options=array())rnremoteFunction ($options=null)rnremoteTimer ($options=null)rnslider ($id, $track_id, $options=array())rnsortable ($id, $options=array())rnsubmit ($title= Submit , $options=array())rnrnrnCakePHP Text Helperrnrnrnhighlight ($text, $phrase, $highlighter= span class= highlight  \1 /span  )rnstripLinks ($text)rnautoLinkUrls ($text, $htmlOptions = array())rnautoLinkEmails ($text, $htmlOptions = array())rnautoLink ($text, $htmlOptions = array())rntruncate ($text, $length, $ending = ... , $exact = true)rntrim ()rnexcerpt ($text, $phrase, $radius = 100, $ending =  ... )rnflay ($text, $allowHtml = false)rnrnrnCakePHP Time HelperrnrnrndayAsSql ($date_string, $field_name, $return = false)rndaysAsSql ($begin, $end, $field_name, $return = false)rnfromString ($date_string)rnisThisYear ($date_string, $return = false)rnisToday ($date_string, $return = false)rnisTomorrow ($date_string, $return = false)rnnice ($date_string=null, $return = false)rnniceShort ($date_string=null, $return = false)rnrelativeTime ($datetime_string, $format = j/n/y , $return = false)rntimeAgoInWords ($datetime_string, $format = j/n/y , $backwards = false, $return = false)rntoAtom ($date_string, $return = false)rntoRSS ($date_string, $return = false)rntoUnix ($date_string, $return = false)rntrim ($string, $length, $ending = .. )rnwasWithinLast ($timeInterval, $date_string, $return = false)rnwasYesterday ($date_string, $return = false)rnrnrnCakePHP Number Helperrnrnrnprecision ($number, $precision = 3)rntoReadableSize ($size)rntoPercentage ($number, $precision = 2)rnrnrnCakePHP ComponentsrnrnCakePHP Session Componentrnrnrncheck ($name)rndel ($name)rndelete ($name)rnerror ()rnflash ($key)rnread ($name)rnrenew ()rnsetFlash ($flashMessage, $layout = default , $param = null, $key = flash )rnvalid ()rnwrite($name, $value)rnrnrnCakePHP RequestHandler Componentrnrnrnaccepts ($types)rngetAjaxVersion ()rngetClientIP ()rngetReferer ()rnisAjax ()rnisAtom ()rnisDelete ()rnisGet ()rnisMobile ()rnisPost ()rnisPut ()rnisRss ()rnisXml ()rnsetContent ($name, $type)rnstripAll ($string)rnstripImages ($string)rnstripScripts ($string)rnrnrnCakePHP Security ComponentrnrnrnrequirePost ([$action1, $ action2, $action3, ...])rnrequireAuth ([$action1, $ action2, $action3, ...])rnrnrnCakePHP ACL Componentrnrnrncheck ($aro, $aco, $action= * )rnallow ($aro, $aco, $action= * )rndeny ($aro, $aco, $action= * )rninherit ($aro, $aco, $action= * )rngrant ($aro, $aco, $action= * )rnrevoke ($aro, $aco, $action= * )rngetAro ($id)rngetAco ($id)rnrnrnCakePHP SQL DebugrnrnTo add CakePHP SQL debug output in CakePHP 1.3, change the CakePHP debug config parameter to 2 in this line of the $app/config/core.php file:rnrnrnConfigure::write( debug , 2);rnrnrnThen add this line to the bottom of your CakePHP view page:rnrnrnecho $this- element( sql_dump );rnrnrnOther CakePHP tutorialsrnrnFor deeper problems, I ve created some other CakePHP tutorials:rnrnrn	Setting the CakePHP page titlern	CakePHP MVC naming conventionsrn	CakePHP error loggingrn	CakePHP SQL query examplesrn	A CakePHP find all limit and order by examplern	A CakePHP debug strategyrn	A CakePHP SELECT DISTINCT examplern	A CakePHP SELECT BETWEEN date examplernrnrnCakePHP API DocumentationrnrnLinks to some of the most important (common) CakePHP classes:rnrnrn	The CakePHP API docs (main page)rn	CakePHP Model classrn	CakePHP Model::findrn	CakePHP Controller classrn	CakePHP String classrn	CakePHP Validation classrn	CakePHP AuthComponentrn	NumberHelperrn	TimeHelperrnrnrnCakePHP - TODO ItemsrnrnThis is a list of more things I want to add to this CakePHP cheat sheet:rnrnrn	Auth informationrn	AppControllerrn	var $helpers = array( Html , Form , Ajax , Javascript ); // in AppController or other controllersrn	More find queriesrn	read()rn	save()rn	Date, time, calendar, currencyrn	setFlashrn	redirectrn	Validationrn	$tags = $this- Post- Tag- find( list );rn	$users = $this- Post- User- find( list );rn	$tags = $this- compact(...)rnrnrnCakePHP Default Directory StructurernrnThis is what the CakePHP directory structure looks like by default:rnrnrnrn/apprn	app_controller.phprn	app_model.phprn	/configrn		acl.ini.phprn		bootstrap.phprn		core.phprn		databases.phprn		inflections.phprn		routes.phprn	/controllersrn		/componentsrn			your_components_here.phprn		your_controllers_here.phprn	/localern		/engrn	/modelsrn		/behaviorsrn			your_behaviors_here.phprn		your_models_here.phprn	/pluginsrn	/testsrn		/casesrn			/behaviorsrn			/componentsrn			/controllersrn			/helpersrn			/modelsrn		/fixturesrn		/groupsrn	/tmprn	/vendorsrn	/viewsrn		/helpersrn		your_views_here.ctprn	/webrootrn		/cssrn		/filesrn		/jsrn/cakern	cake_core_files_are_in_herern/docsrn	release_notes_herern/vendorsrnrnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/52</link>
    <description>What Is CakePHP?rnrnCakePHP is a free, open-source, rapid development framework for PHP. It s a foundational structure for programmers to create web applications. CakePHP goal is to enable developers to work in a structured and rapid manner without loss of flexibility. CakePHP takes the monotony out of web development.rnrn rnrn rnrnWhat does MVC stand for in CakePHP?rnrnModel view controller (MVC) is an architectural pattern used in software engineering.rnrnModel  - : Database functions exist in the modelrnrnView  - : Design parts written herernrnController : Business Logic goes herernrn rnrn rnrnWhat are the server requirements to install CakePHP.rnrnHere are the requirements for setting up a server to run CakePHP:rnrnAn HTTP server (like Apache) with the following enabled: sessions, mod_rewrite (not absolutely necessary but preferred)rnrnPHP 4.3.2 or greater. Yes, CakePHP works great in either PHP 4 or 5.rnrnA database engine (right now, there is support for MySQL 4+, PostgreSQL and a wrapper for ADODB).rn rnrnHere are the stepsrnrnstep1: Go to CakePHP.org and download the latest version of CakePHP.rnrnstep2: CakePHP comes in a .zip file,so unzip it.rnrnstep3: Extract the files in the localhost in the desired folder (for example:CakePHP).rnrnstep4: Open the browser and run the URL localhost/CakePHPrnrnstep5: Just Follow the instructions display on the page.rnrn rnrn rnrnWhat Is The Folder Structure Of CakePHP?rnrnrnCakePHP/rnapp/rnConfig/rnConsole/rnController/rnLib/rn Locale/rn Model/rn Plugin/rn Test/rn tmp/rn Vendor/rn View/rn webroot/rn .htaccessrn index.phprn rn lib/rn plugins/rn vendors/rn .htaccess/rn index.php/rn README.md/rnrnrnrnWhat is the CakePHP Database Configuration File called, and where is it located?rnrnDefault file name is database.php.default.rnrnIts located at  /app/config/database.php.default .To connect with database it should be renamed to database.phprnrn rnrn rnrnWhat is the name of the first file that gets loaded when you run a application using CakePHP?rnrnbootstrap.phprnrnEither through index.php , or through .htaccess you can change itrnrn rnrnWhat does Security.Salt And Security.CipherSeed In CakePHP do?rnrn- The Security.salt is used for generating hashes.we can change the default Security.salt value in /app/Config/core.php. rnrn- The Security.cipherseed is used for encrypt/decrypt strings.We can change the default Security.cipherSeed value by editing /app/Config/core.php. rnrn rnrn rnrnWhat does Controllers do?rnrnA controller is used to manage the logic for a part of your application. Most commonly, controllers are used to manage the logic for a single model. Controllers can include any number of methods which are usually referred to as actions. Actions are controller methods used to display views. An action is a single method of a controller.rnrn rnrn rnrnWhat is default function for a Controller?rnrnindex() functionrnrn rnrn rnrnWhich function is executed before every action in the Controller?rnrnfunction beforeFilter()rnrn rnrn rnrnWhich features does CakePHP have?rnrn rnrnrn	Compatible with versions 4 and 5 of PHPrn	MVC architecturern	Built-in validationsrn	Cachingrn	Scaffoldingrn	Access Control Lists and Authentication.rn	CSRF protection via Security Component.rnrnrnrn rnrnWhat are CakePHP s drawbacks.rnrnIt loads full application before it starts your task. It s not recommended for small projects because of its resource-heavy structure.rnrn rnrn rnrnWhat naming convention does CakePHP use?rnrnTable names are plural and lowercased,model names are singular and CamelCased: ModelName, model filenames are singular and underscored: model_name.php, controller names are plural and CamelCased with *Controller* appended: ControllerNamesController, controller filenames are plural and underscored with *controller* appended: controller_names_controller.php,rnrn rnrn rnrnWhat does scaffolding in CakePHP do? rnrnScaffolding is a technique that allows a developer to define and create a basic application that can create, retrieve, update and delete objects.rnrn rnrn rnrnHow do you use Scaffolding?rnrnTo add scaffolding to your application,just add the $scaffold variable in the controller,rnrnrn ?phprnclass PostsController extends AppController {rn var $scaffold;rn}rn? rnrnrnAssuming you ve created Post model class file (in /app/Model/post.php), you re ready to go. Visit http://example.com/posts to see your new scaffold.rnrn rnrn rnrnWhat is a Component in CakePHP?rnrnComponents are packages of logic that are shared between controllers. They are useful when a common logic or code is required between different controllers.rnrn rnrnWhat are the most commonly used Components of CakePHP?rnrn rnrnrn	Securityrn	Sessionsrn	Access control listsrn	Emailsrn	Cookiesrn	Authenticationrn	Request handlingrn	Scaffoldingrnrnrnrn rnrnWhat are Helpers used for?rnrnHelpers in CakePHP are associated with Presentation layers of application.Helpers mainly contain presentational logic which is available to share between many views, elements, or layoutsrnrn rnrn rnrnWhat are the most commonly used Helpers of CakePHP?rnrn rnrnrn	FormHelperrn	HtmlHelperrn	JsHelperrn	CacheHelperrn	NumberHelperrn	Paginatorrn	RSSrn	SessionHelperrn	TextHelperrn	TimeHelperrnrnrn rnrnWhat does a Behavior do?rnrnBehaviors in CakePHP are associated with Models.Behaviors are used to change the way models behaves and enforcing model to act as something else.rnrn rnrn rnrnWhat is the difference between Component, Helper, Behavior?rnrnComponent is a Controller extension, Helpers are View extensions, Behavior is a Model Extension.rnrn rnrn rnrnWhat does a Element do?rnrnElement in CakePHP are smaller and reusable bits of view code. Elements are usually rendered inside views.rnrn rnrn rnrnWhat is a Layout?rnrnLayout in CakePHP are used to display the views that contain presentational code. In simple views are rendered inside a layoutrnrn rnrn rnrnHow to set a specific layout in a Controller?rnrnvar $layout = layout_name ;rnrnto overwrite for a specific action use below code in that actionrnrn$this- layout = layout_name ;rnrn rnrn rnrnHow do you include Helpers in a Controller ?rnrnpublic $helpers = array( Form , Html , Js , Time );rnrnto in specific action use below code in that actionrnrn$this- helper[] = helper_name ;rnrn rnrn rnrnHow do you include Components in Controller ?rnrnrnpublic $components = array( Emails , ImageUploader , Sms );rnrn rnrnHow do you Write, Read And Delete Sessions in CakePHP?rnrnrn$this- Session- write( Bird.Color , Black );rn$black = $this- Session- read( Bird.Color );rn$this- Session- delete( Bird ); rnrnrn rnrnWhat do you us $this- Set(); for?rnrnThe set() method is used for creating a variable in the view file.Say for example if we write,rnrn$this- set( posts ,$posts); in controller fie, then the variable $posts will be available to use in the view template file for that action.rnrn rnrn rnrnWhat do you use $this- Set(Compact()); for?rnrn rnrnUsing $this- set(compact()) , we can pass multiple parameters to access into the view file.rnrnrnFor example,rnrn$this- set(compact( posts , users , reports ));rnrnNow all these variables will be available in respective view file.rnrn rnrn rnrnWhat advantages of $this- set and $this- Set(Compact()); ?Which would you use?rnrnAn advantage with first case $this- set( posts , $posts); is that it allows two different names for the view file and controller file. For example, you could write something like $this- set( postData , $posts);. Now the variable name in the view file would be $postData.rnrn rnrnThe advantage with the second approach $this- set(compact()); is easier to write, and useful especially when we are setting several variables to the view.No need to add separate line for each variable as we have with $this- set();rnrnFor example,rnrn$this- set(compact( posts , users , reports ));rnrn rnrn rnrnIs it possible to have multiple validation rules per field in CakePHP?rnrnYes its possible.rnrn rnrn rnrnWhat is wrong with the Validation rule below?rnrnrn email = array(rn rule = array(rn  rule =  notEmpty ,rn  message =  Please Enter Email address. rn ),rn rule = array(rn  rule =  email ,rn  message =  Entered Email address is invalid. rn )rn)rnrnrnrnThe problem is the first rule notEmpty will never be called because email rule will overwrite it.While using multiple validation rules for the same field you must keep the rule key  unique . In this case if we want to use multiple rules then, we can simple change the rule key names like,rnrnrn email = array(rn rule1 = array(rn  rule =  notEmpty ,rn  message =  Please Enter Email address. rn ),rn rule2 = array(rn  rule =  email ,rn  message =  Entered Email address is invalid. rn )rn)rnrnWhat is the difference between Required And NotEmpty in CakePHP?rnrnnonEmpty simply check the presented data to validate validation in other words if the field are NOT there it will not throw and error, where Required will throw and error if there is not data, field nor not.rnrn rnrn rnrn rnrnHow do you get the current URL in CakePHP?rnrnTo get current url in CakePHP use, rnrn rnrnrnecho Router::url($this- here, true);rnrnThis will give full URL with hostname.If you want to get relative path instead of full URL,then use the following code:rnrn rnrnrnecho $this- here;rnrnThis will produce absolute URL excluding hostname i.e. /controller/abc/xyz/rnrn rnrn rnrnHow do you make Urls search engine friendly in CakePHP?rnrnIt s an automatic task that is done by CakePHP.rnrn rnrn rnrnPlease list a few database related functions in CakePHP?rnrnfind, findAll , findAllBy , findBy , findNeighbours and query.rnrn rnrnWhich Methods are can be used to Create and Destroy Model Associations on the Fly?rnrnThe bindModel() and unbindModel() Model methods are used to create and destroy model associations on the fly. rnrn rnrn rnrnWhat do you use RequestAction Method for? rnrnThe method requestAction is used to call a controller s action from any location and returns data from the action.rnrn rnrn rnrnWhat does Recursive do in CakePHP? rnrnBased on the Recursive option being used in CakePHP, you can include related database tables on not - similar to join in SQL.rnrn rnrn rnrnHow can we use Ajax in CakePHP?rnrnBy calling ajax helper and then using it in controller for rendering.rnrn rnrn rnrn) What Is Habtm?rnrn rnrnHas and belongs to many is a kind of associations that can be defined in models for retrieving associated data across different entities.rnrn rnrn rnrn rnrnHow does CakePHP URL looks in a address bar?rnrn rnrnrnhttp://example.com/controller/action/param1/param2/param3rnrn rnrn rnrnHow do you include a Javascript Menu throughout the site.rnrnBy adding the javascript files in webroot and call them in default views if needed everywhere or just in the related veiws.rnrnin the layout:rnrnrnif(isset($jsIncludes)){rn foreach($jsIncludes as $js){rn  echo $this- Html- script($js);rn }rn}rnrnrnrnin the view:rnrn rnrnrn$this- set( jsIncludes ,array( my_jsfile )); rnrn rnrn rnrn rnrn rnrnWhy does CakePHP have two Vendor folders?rnrnThere will be two vendor folders available in CakePHP frame work.rnrnone in  app  folder and one in root folderrnrn rnrnThe vendor folder in the app folder is used to place the third-party libraries which are application specific.rnrnThe vendor folder in the root folder is used to place the third-party libraries which are used for multiple applications.rnrn rnrn rnrnWhat Is The Default Extension Of View Files In CakePHP?rnrndefault extension of view files is .ctp .rnrnyes we can change it by writing public $ext = .yourext ; in AppController.If you want to change it for particular controller then add it into that controller only.You can also change it for the specific action of the controller by putting it in that action of controller.rnrnrnpublic $ext = .yourext ; in AppControllerrn - you can change all the views extentions.rnrn public $ext = .yourext ; in specific controller like, PostsControllerrn- you can change all the views extentions of PostsController.rnrnpublic $ext = .yourext ; in specific controller action like, index()rn- you can change the view extention of index.ctp rnrnrnNote: You cannot specify multiple extensions, however it seems like there is a fall back to .ctp if no .php file is found.rnrn rnrn rnrnHow can you det custom page title for static paged?rnrnTo set a custom page title, copy-paste following code anywhere in your static page (.ctp) file:rnrn$this- set( title_for_layout ,  My page title );rnrn rnrn rnrn How do you display the schema of a Model?rnrnIf you want to display the schema of particular model then you just need to add the following single line of code.For example we have Posts Controller.rnrnrnpr($this- Post- schema());rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/53</link>
    <description>Here is where you start..rnAfter you have registered/logged in.rnPlease do the following: rnrnrnRemember Silver memberships have limited functionality.rnrn1. Add a testrnrn  1a. Select a Preconfigured testrn  1b. Create a Custom testrn   1b i) Add Custom Questionsrnrn2. Add Candidatesrnrn3. Create an Assessmentrn(Invite candidates to take the test)rnrn4. Compare test restultsrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/60</link>
    <description>Here are some typical PHP interview questions. Select 10 for a typical interviewrnWhat is PHP?rnrnThe first question in any PHP interview will be: What is PHP? Here it is PHP: Hypertext Preprocessor is open source server-side scripting language that is widely used for web development. PHP scripts are executed on the server. PHP allows writing dynamically generated web pages efficiently and quickly. The syntax is mostly borrowed from C, Java and perl. PHP is free to download and use.rnrnHow do you submit form without a submit button.rnrnWe can achieve the above task by using JavaScript code linked to an event trigger of any form field and call the document.form.submit() function in JavaScript code.rnrnExplain echo vs. print the statement.rnrnecho() and print() are language constructs in PHP, both are used to output strings. The speed of both statements is almost the same.rnecho() can take multiple expressions whereas print cannot take multiple expressions.rnPrint return true or false based on success or failure whereas echo doesn t return true or false.rnrnWhat is the difference between $message vs. $$message in PHP.rnrn$message is a variable with a fixed name. $$message is a variable whose name is stored in $message. rnIf $message contains  var , $$message is the same as $var.rnrnWhat is the different types of errors you get in PHP?rnrnNotices, Warnings and Fatal errors are the types of errors in PHPrnrnNotices: rnNotices represents non-critical errors, i.e. accessing a variable that has not yet been defined. By default, such errors are not displayed to the user at all but whenever required, you can change this default behavior.rnrnWarnings: rnWarnings are more serious errors but they do not result in script termination. i.e calling include() a file which does not exist. By default, these errors are displayed to the user.rnrnFatal errors: rnFatal errors are critical errors i.e. calling a non-existent function or class. These errors cause the immediate termination of the script.rnrnWhat is the importance of the function htmlentities.rnrnThe htmlentities() function converts characters to HTML entities.rnrnWhat is MIME?rnrnMIME - Multi-purpose Internet Mail Extensions. rnrnMIME types represents a standard way of classifying file types over Internet. rnWeb servers and browsers have a list of MIME types, which facilitates files transfer of the same type in the same way, irrespective of operating system they are working in.rnA MIME type has two parts: a type and a subtype. They are separated by a slash (/). rnMIME type for Microsoft Word files is application and the subtype is msword, i.e. application/msword.rnrnHow do you execute a PHP script using command line.rnrnYou can execute a PHP script by running the Command line interface program, in which you can enter the PHP script file as an argument. If the file is made for the web interface then it may not execute properly using command line. Command line allows faster execution of the statements and gives faster results.rnrnHow can we encrypt the password using PHP?rnrncrypt() function is used to create one way encryption. It takes one input string and one optional parameter. The function look is defined as: crypt (input_string, salt), where input_string consists of the string which has to be encrypted and salt is an optional parameter. PHP uses DES for encryption. The format is as follows:-rnrnrn$password = crypt( mypassword );  print $password .  is the encrypted version of mypassword ;rnrnExplain how urlencode() and urldecode() is used?rnrnurlencode() returns the URL encoded version of given string. For URL encoding string values are used in the queries to be passed as URL. Whereas,rnurldecode() returns the URL decoded string (original string) which will be decoded by taking the already encoded string.rnrnrn$discount = 10.00% ;rn$url =  http://domain.com/submit.php?disc= .urlencode($discount);rnecho $url;rnOutput:  http://domain.com/submit.php?disc=10%2E00%25 .rnrnrnWhat is a PHP Session?rnrnPHP session allows you to store the user session, like their information on server for faster access and for later use like username, IP addresses, their actions etc. The information which is saved is temporary and can be deleted after the user is no longer active. Example of starting a PHP session is as follows:rnrnrnsession_start(); // start up your PHP session! rnrnWhat is meant by PEAR in php? What is the purpose of it?rnrnPEAR stands for  PHP Extension and Application Repository . As the name suggests, it gives advanced functionality to the PHP language and include many applications which can be used on fly. The purpose of it is as follows:- rnrn- Open source structured library for PHP usersrn- Code distribution and package maintenance systemrn- Standard style for code written in PHPrnrnExplain the difference between strongly typed and loosely typed language?rnrnPHP is a loosely typed language. In this type of language variable doesn t need to be declared before their use. This language converts the data according to its given value. Whereas, in strongly typed language first every type has to be declared (defined) then only it can be used.rnrnExplain what a Persistent Cookie is?rnrnA cookie which is stored in a cookie file permanently on the browser s computer. rnrnExplain the differences between DROP a table and TRUNCATE a table.rnrnDROP - It will delete the table and table data. rnTRUNCATE - It will delete data of the table but not the table definition. rnrnWhat is the  GET  and  POST  methods?rnrnBoth the methods are used to send data to the server. rnGET method - the browser appends the data onto the URL. rnPost method - the data is sent as standard input. rnrnExplain the  unlink  and  unset  functions.rnrnunlink() function is for file system handling. It just deletes the file in context.rnunset() function is for variable management. It makes a variable undefinedrnrnWhat is the SQL for changing the name of a column in a table?rnrnALTER TABLE table_name CHANGE old_colm_name new_colm_name rnrnHow long does the default session time in PHP last?rnrnUntil closing the browser. rnrnWhat is the SQL for creating a database using PHP and MySQL?rnrnBy using : mysql_create_db( Database Name ) rnrnHow will you find out the value of current session id? rnrnBy using: session_id() rnrnHow can we increase the execution time of a PHP script?rnrnBy default the PHP script takes 30secs to execute. This time is set in the php.ini file. This time can be increased by modifying the max_execution_time in seconds. The time must be changed keeping the environment of the server. This is because modifying the execution time will affect all the sites hosted by the server.rnrnWhat is the purpose of output buffering in PHP.rnrnOutput buffering in PHP buffers a scripts output. This buffer can be edited before returning it to the client. Without output buffering, PHP sends data to the web server as soon as it is ready. Output buffering  send  cookies at any point in the script. Cookies do not have to be necessarily sent near the start of page. Output buffers are stackable and hence sending to output is by choice.rnrnWhat is a session in PHP.rnrnWhen a user logs in an application, his details are usually stored in a session variable. This information is available to all pages in one application. Sessions in PHP work using a unique id for each visitor.rnrnHow can we calculate number of days between two given dates using PHP?rnrnThe start date and end date can be first found as shown below:rnrnrn $date1= strotime($start_date); $date2= strotime($end_date); $date_diff = (($date1)- ($date2)) / (60*60*24)rnrnWrite the PHP with MySQL connection statementsrnrnThe statements that can be used to connect PHP wil MySQL is:rnrnrn$conn = mysql_connect( localhost ); echo $conn;  rnrnThis statement gets the resource of the localhost. There are other different ways with which you can connect to the database and they are as follows:rnrnrnmysql_connect( db.domain.com:33306 , root , user ); mysql_connect( localhost:/tmp/mysql.sock ); mysql_connect( localhost , rasmus , foobar , true,MYSQL_CLIENT_SSL|MYSQL_CLIENT_COMPRESS);rnrnrnHow to use HTTP Headers inside PHP? Write the statement through which it can be added?rnrnHTTP headers can be used in PHP by redirection which is written as:rnrnrn header( Location: http://www.php.net )rnrnThe headers can be added to HTTP response in PHP using the header(). The response headers are sent before any actual response being sent. The HTTP headers have to be sent before taking the output of any data. The statement above gets included at the top of the script.rnrnWhy PHP is also called as Scripting language?rnrnPHP is basically a general purpose language, which is used to write scripts. Scripts are normal computer files that consist of instructions written in PHP language. It tells the computer to execute the file and print the output on the screen. PHP is used for webpages and to create websites, thus included as scripting language.rnrnWhat is the difference between PHP and JavaScript?rnrnThe difference lies with the execution of the languages. PHP is server side scripting language, which means that it can t interact directly with the user. Whereas, JavaScript is client side scripting language, that is used to interact directly with the user.rnrnWhat does ODBC do in context with PHP?rnrnPHP supports many databases like dBase, Microsft SQL Server, Oracle, etc. But, it also supports databases like filePro, FrontBase and InterBase with ODBC connectivity. ODBC stands for Open Database connectivity, which is a standard that allows user to communicate with other databases like Access and IBM DB2.rnrnExplain the differences between require_once(), require(), include()?rnrnrequire() includes and evaluates a specific file, if the file is not found then it shows a Fatal Error. rnrequire_once() includes only the file which is not being included before. It is used to be recommended for the files where you have lots of functions stored. rninclude() includes the file, even if the file is not found, but it gives a warning to the user to include().rnrnHow the web server interprets PHP and interacts with the client?rnrnAfter installing and configuring the PHP, the web When PHP is installed, the Web server looks for PHP code that is embedded in HTML file with its extension. The extensions which are used are .php or .phtml. When web server receives a request for the file with an appropriate extension, HTML statements are processed and PHP statements are executed on the server itself. When the processing gets over the output is being shown in HTML statements.rnrnWhat is the difference between echo, print and printf()?rnrnEcho is the basic type used to print out a string. It just shows the content of the message written using it. It can have multiple parameters as well. print is a construct, it returns TRUE on successful output and FALSE there is no output. It can t have multiple parameters. rnrnPrintf() is a function, and not be used as a construct. It allows the string output to be formatted. It is the slowest medium to print the data out.rnrnWhat IDE is recommended for use with PHP?rnrnIDE stands for Integrated Development environment; it is a framework for developing applications. It includes programming editor where you can edit and write the development programs. The features of IDE are as follows:rnrn1. Debugging: this is the feature which is used to debug or find the bugs in a programrn2. Preview: this is the feature which allow instant preview of the program you are writingrn3. Testing: this is the features that includes built in testing features through which you can check your scriptsrn4. FTP: through this you can upload and download the file while connecting to the server.rn5. Project management: it organizes scripts into projects; manages the files in the project; includes file checkout and check-in features.rn6. Backups: it creates backups automatically of your Web site at periodic intervals.rnrnName the different types of statements in PHP?rnrnThere are four kinds of PHP statements that are present. They are as follows: rnrnSimple statement- these are the echo statements and end with a semicolon (;). PHP ignores white spaces between simple statements. Until it finds a semicolon it reads the statement. rnrnComplex/Conditional statements: these are the statements which deal with certain conditions that have to be executed to meet certain specific requirements. These are if and else block or switch statements. PHP reads the complete statement and doesn t stop at the first semicolon it encounters. It looks for starting and ending braces to end the execution.rnrnLooping statements: statements that are repeated in a block. The feature that enables you to execute the statements repeatedly is called as loop. For example: for loop, while loop, do..while loop.rnrnHow can we increase the execution time of a php script?rnrnBy the use of void set_time_limit(int seconds)rnrnSet the number of seconds a script is allowed to run. If this is reached, the script returns a fatal error. The default limit is 30 seconds or, if it exists, the max_execution_time value defined in the php.ini. If seconds is set to zero, no time limit is imposed.rnrnWhen called, set_time_limit() restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as set_time_limit(20) is made, the script will run for a total of 45 seconds before timing out.rnrnWrite a Hello world script using variablesrnrnTo write the hello world program in PHP using variable you need to know the tags that are used in HTML and the PHP coding which is as follows:rnrnrn html head title Hello World Script using Variable /title /head body ?php $salutation = Hello World! ; echo  p $salutation /p ; ? /body  /html rnrnExplain what type casting meanrnrnPHP automatically store the data and interprets according to itself. Type casting is a way to assign the variable according to your need and requirement and not allowing PHP to assign it automatically. To specify the type, it can be used like:rnrnrn$newint = (int) $var1; $newfloat = (float) $var1; $newstring = (string) $var1;  rnrnThe value in the variable on the right side of the equal sign is stored in the variable on the left side as the specified type.rnrnHow error handling is being handled by PHP?rnrnError handling is very important in every programming language. PHP uses the trigger to print the error in a program. The example statement is given below:rnrnrnIf ($height_of_door  $height_of_house){  trigger_error( Impossible condition ,E_USER_ERROR);  }rnrnrnThe E_USER_ERROR in the statement tells PHP that the condition is an error. Impossible condition is a string message which is displayed when an error is encountered. rnIf the condition comes out to be true then the following message is displayed:rnrnFatal error: Impossible conditionrnrnE_USER_WARNING or E_USER_NOTICE can be used instead of E_USER_ERROR, to have PHP treat the condition as a warning or notice. Own statements can be written to perform error handling actions such as send a message, log a message or stop the script. rnrnFor example: rnrnrnIf ($height_of_door  $height_of_house){ echo This is impossible br ; exit(); } rnrnrn If $height_of_door is larger than $height_of_house, the message is echoed, and exit() stops the script.  Die statement can be used to display an error message when a function fails. rnrnHow do you escape charactersrnrnSpecial characters are the characters that have some special meaning attached to it. Example is $, #, % etc. A backslash (\) before the special symbol is known as escaping characters. For example, two strings produce the same output:rnrnrn$string = The variable name is $var1 ; $string = The variable name is \$var1 ;   rnrnThe output from either string is the following:rnThe variable name is $var1rnSuppose you want to store a string as follows:rnrnrn$string = _Where is Tom _s house_; echo $string;rnrnrnThe sting can be interpreted by PHP by putting a backslash (\) in front of the single quote. The backslash tells PHP that the single quote does not have any special meaning; it s just an apostrophe. rnrnrn$string = _Where is Tom\ _s house_;rnrnrnHow do you join of two strings in PHP?rnrnTwo strings can be joined together by the use of a process called as concatenation. A dot (.) operator is used for this purpose. Example is as follows:rnrnrn$string1 = _Hello_; $string2 = _World!_; $stringall = $string1.$string2; echo $stringall; rnrnWhat are the different components used in PHP for formatting?rnrnThe components that are used in PHP for formatting are as follows: rnrn1. %: it tells the start of the formatting instruction.rn2. Padding character (pad): is used to fill out the string when the value to be formatted is smaller than the width assigned. Pad can be a space, a 0, or any character preceded by a single quote ( ). rn3. -: A symbol meaning to left-justify the characters. If this is not included, the characters are right-justified.rn4. width: The number of characters to use for the value. If the value doesn t fill the width, the padding character is used to pad the value. For example, if the width is 5, the padding character is 0, and the value is 1, the output is 00001.rn5. dec: The number of decimal places to use for a number. This value is preceded by a decimal point.rn6. type: The type of value. Use s(string) for string, f (float) for numbers that you want to format with decimal places.rnrnWhat is the use of super-global arrays in PHP?rnrnSuper global arrays are the built in arrays that can be used anywhere. They are also called as auto-global as they can be used inside a function as well. The arrays with the longs names such as $HTTP_SERVER_VARS, must be made global before they can be used in an array. This $HTTP_SERVER_VARS check your php.ini setting for long arrays.rnrnWhat is the use of $_Server and $_Env?rnrn$_SERVER and $_ENV arrays contain different information. The information depends on the server and operating system being used. Most of the information can be seen of an array for a particular server and operating system. The syntax is as follows:rnrnrnforeach($_SERVER as $key = $value) { echo Key=$key, Value=$value\n ; } rnrnrnWhat is the difference between $argv and $argc? Give example?rnrnTo pass the information into the script from outside, help can be taken from the PHP CLI (Command line interface) method. Suppose addition of two numbers has to be passed to PHP then it can be passed like this on the command line:rnrnphp add.php 2 3rnrnHere the script name is add.php, and 2 and 3 are the numbers that has to be added by the script. These numbers are available inside the script in an array called rn$argv. This array contains all the information on the command line; the statement is stored as follows:rnrnrn$argv[0]=add.php $argv[1]=2 $argv[2]=3  rnrnSo, $argv always contains at least one element mdash; the script name.rnThen, in your script, you can use the following statements:rnrnrn$sum = $argv[1] + $argv[2]; echo $sum;rnrn$argc is a variable that stores the numbers of elements in $argv. $argc is equal to at least 1, which is saved for the name of the script. rnExample is $argc=3 using the above statements.rnrnHow would you joining of multiple comparisons in PHP?rnrnPHP allows multiple comparisons to be grouped together to determine the condition of the statement. It can be done by using the following syntax:rncomparison1 and|or|xor comparison2 and|or|xor comparison3 and|or|xor. rnrnThe operators that are used with comparisons are as follows:rnrn1. and: result in positive when both comparisons are true.rn2. or: result in positive when one of the comparisons or both of the comparisons are true.rn3. xor: result in positive when one of the comparisons is true but not both of the comparisons.rnrnrn$resCity == Reno or $resState == NV and $name == Sally rnrnHow to create reusable code in PHP?rnrnApplications created in PHP often perform the same task in same script or in different scripts. To create a reusable code functions are used. Functions are group of PHP statements that perform a specific task. rnrnExample: rnA header and footer can be created for all the web pages which has to be used again and again. rnrnrnecho  img src= greenrule.jpg width= 100% height= 7 / address My Great Company  br / 1234 Wonderful Rd.  br / San Diego, CA 92126  /address /font p or send questions to  a href= mailto:sales@company.com sales /a img src= greenrule.jpg width= 100% height= 7 / ;  rnrnInstead of typing header and footer for each page, a function can be created and used to add footer and header in every page. The function can be named as:rnrnrnadd_footer(); add_header();    rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/61</link>
    <description>Adzuna has built a tool to help employees negotiate payrnrnA new app by the job search site Adzuna can tell you how much you are worth just by looking at your CV.rnrnValue My CV looks at over 100 data points in a CV, from education to employers to job skills, and uses that data to calculate a person s market rate. It was created by the same data scientist who worked on Rightmove s house price algorithm.rnrnUsers can then generate a statistical estimate of their salary alongside suggested jobs, CV improvements and career pathways.rnrnAndrew Hunter, who co-founded Adzuna, said that it took them about a year to build the technology.rnrn rnrnrnrn rnrn We think there s a problem matching candidates in the UK, Hunter said. There are a million unemployed and a million jobs, but at the moment people don t realise what s available. We re trying to help solve that problem using new technology. rnrnYou can try the tool here.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/62</link>
    <description>What CSS properties can change dimensions, describe them.rnrnrn	rn	rn		height: Sets a specific heightrn		rn			autorn			lengthrn			%rn			inheritrn		rn		rn		width: Sets a specific widthrn		rn			autorn			lengthrn			%rn			inheritrn		rn		rn		max-height: Sets a maximum heightrn		rn			autorn			lengthrn			%rn			inheritrn		rn		rn		max-width: Sets a maximum widthrn		rn			autorn			lengthrn			%rn			inheritrn		rn		rn		min-height: Sets a minimum heightrn		rn			autorn			lengthrn			%rn			inheritrn		rn		rn		min-width: Sets a minimum widthrn		rn			autorn			lengthrn			%rn			inheritrn		rn		rn	rn	rnrnrnHow do you use a pseudo class?rnrnrn	rn	rn		Pseudo classes are similar to classes, but are not explicitly defined in the markup, and are used to add additional effects to selected HTML elements such as link colors, hover actions, etc.rn		Pseudo classes are defined by first listing the selector, followed by a colon and then pseudo-class element. E.g., a:link{ color: blue }, or a:visited { color: red }rn	rn	rnrnrnrn	rn	rn		rn		rn			Pseudo-class syntax:rn		rn		rn	rn	rnrnrnselector:pseudo-class {rnproperty:value;}rnrnrn	rn	rn		rn		rn			Syntax for using a pseudo class within a CSS class:rn		rn		rn	rn	rnrnrnselector.class:pseudo-class {rnproperty:value;}rnrnHow do you use grouping?rnrne.g.) h1, h2 { font-family: Helvetica; font-size: 20; }rnrnHow do you use shorthand properties ?.rnrne.g.) Code snippet a gets shorthanded into code snippet b by condensing the property values (in order) onto a single line:rnrna)rnrnrnrnb)rnrnrnrnIndicate how to attach style sheets to a web page:rnrnrnrnrnrnrn	rn	rn		:link, :visited, :hover, :active, :first_line are all examples of pseudo classes, used to call a specific action on an element, such as the changing of a link color after it has been visited.rn	rnrn	rn		rn		rn			Grouping allows you to apply the same style to multiple elements with a single declaration. This is done by grouping the selectors into a list, separated by commas.rn		rn		rn	rnrn	How is a class selector used?rnrn	Within an HTML doc:rnrn	rnrn	Within a CSS doc:rnrn	rnrn	rn		rn		rn			Grouping helps memory usage and enhances readability.rn		rnrn		rn			rn			rn				A class can be thought of as a grouped collection of CSS attributes applied to HTML elements. This allows you to apply the same styling to multiple HTML elements by placing them in the same CSS class.rn				Class methods can be called by inserting a class property and name within an HTML element, then calling the class name with a .  in the CSS doc.rn				Class syntax:rn			rn			rn		rnrn		rn			rn			rn				The code listed here identifies the class intro in the HTML doc, then applies the same background-color styling to all paragraphs within that class.rn			rn			rn		rn		rn	rnrn	rn		rn		rn			Using shorthand properties can improve page load times and reduce file size.rn			Can be done with background, font, border, padding, outline, and list-style properties.rn			Shorthanding is accomplished by listing the property values on a single line, in a specific order.rn		rn		rn	rnrn	rn		rn		rn			Inline: Though this method often goes against best practices, it s easily done by inserting a style attribute inside an HTML element:rnrn			rn				e.g.) p style= color:blue Lorem Ipsum /p rn			rn			rn			Embedded/Internal: Done by defining the head of an HTML document by wrapping characteristics in a style tag.rn		rn		rn	rnrn	rn		rn		rn			Linked/External: CSS is placed in an external .css file, and linked to the HTML document with a link tag. This can also be accomplished using the @import , however, this can slow page load time and is generally not advised.rn		rn		rn	rn	rnrnrnHow do you use a ID selector?rnrnrn	rn	rn		IDs are used to identify and apply styling to a single specific HTML element. IDs are defined within the HTML page by inserting an ID selector in the HTML element:rn		rn			eg)rn		rn		rn	rn	rnrnrnrnrnrn	rn	rn		ID selectors are defined within the CSS page by calling a # followed by the name of the ID:rn		rn			eg)rn		rn		rn	rn	rnrnrnrnrnrn	rn	rn		ID selectors are unique and can only be applied to a single element.rn	rn	rnrnrnWhat is the difference between a Class selector and a ID selector?rnrnrn	rn	rn		Class selectors are used to apply style to multiple HTML identified with the same class.rn	rn	rnrnrnrn	rn	rn		rn		rn			Within the HTML doc:rn		rn		rn	rn	rnrnrnrn	rn	rn		rn		rn			rn			rn				e.g.)rn			rn			rn		rn		rn	rn	rnrnrnrnrnrn	rn	rn		Class selectors are called within the CSS document by a . , followed by the class name:rn	rn	rnrnrnrn	rn	rn		rn		rn			Within the CSS doc:rn			rn				e.g.)rn			rn			rn		rn		rn	rn	rnrnrnrnrnrn	rn	rn		The main difference is that the same class selector can be applied to multiple HTML elements, whereas ID selectors are unique..rn	rn	rnrnrnExplain child selectors?rnrnrn	rn	rn		Child selectors are another way to group and style a set of elements that descend from a parent element.rn		A child selector is matched by calling two or more elements, separated by a sign to indicate inheritance.rn	rn	rnrnrne.g.)rnrnrnrnrn	rn	rn		In this example, the same styling would be applied to all paragraphs within the body.rn	rn	rnrnrnHow do you use the float property in CSS?rnrnrn	rn	rn		Floats allow an element to be positioned horizontally, allowing elements below the floated element to flow around it. Several floating elements can be placed together to make a gallery type layout.rn		Floats can only accept a left or right value.rn	rn	rnrnrnrn	rn	rn		rn		rn			e.g.)rn		rn		rn	rn	rnrnrnimg {rnfloat: right;rnwidth: 50px;rnmargin: 5px;rn}rnrnrn	rn	rn		To prevent subsequent elements from flowing around the floated element, pass in the clear property, followed by the side you wish to disable (i.e., left , right , both ).rn	rn	rnrnrnHow do you use the CSS box model? What elements does it include?rnrnrn	rn	rn		CSS box model is made up of margins, borders, padding, and content.rn		Box model provides a structured way to space elements in relationship to each other.rn	rn	rnrnrnrnrnHow to restore the default property value using CSS?rnrnrn	rn	rn		In short, there s no easy way to restore to default values to whatever a browser uses . The closest option is to use the initial property value, which will restore it to the default CSS values, rather than the browser s default styles.rn	rn	rnrnrnHow do you use pseudo-elements?rnrnrn	rn	rn		Pseudo elements are made using a double colon (::) followed by the name of the pseudo element.rn		Pseudo-elements are used to add special effects to some selectors, and can only be applied to block-level elements.rn		Most commonly used pseudo-elements are ::first_line, ::first_letter, ::before, ::afterrn	rn	rnrnrnHow are inline and block elements different from each other?rnrnrn	rn	rn		A block element is an element that takes up the full width available, and has a line break before and after it. h1 , p , li , and div are all examples of block elements.rn		An inline element only takes up as much width as necessary, cannot accept width and height values, and does not force line breaks. a and span are examples of inline elements.rn	rn	rnrnrnHow do you use the z-index property?rnrnrn	rn	rn		The z-index helps specify the stack order of positioned elements that may overlap one another. The z-index default value is zero, and can take on either a positive or negative number.rn		An element with a higher z-index is always stacked above one with a lower index.rn		Z-Index can take the following values:rn	rn	rnrnrnAuto: Sets the stack order equal to its parents.rnrnNumber: Orders the stack order.rnrnInitial: Sets this property to its default value (0).rnrnInherit: Inherits this property from its parent element.rnrnWhat are the advantages and disadvantages of External Style Sheets?rnrnrn	rn	rn		The biggest advantages of external style sheets are that they can be applied to multiple documents while being managed from a single style sheet. This keeps code DRY and improves efficiency and convenience.rn		The disadvantages are that it may decrease loading time in some situations. It may also not be practical if there are not enough styling conditions to justify an external sheet.rn	rn	rnrnrnList the main CSS style sheet properties:rnrnrn	rn	rn		Backgroundrn		Textrn		Fontrn		Borderrn		Outlinern		Marginrn		Paddingrn		Listrn		Tablern	rn	rnrnrnWhich online resources do you refer to when having issues with CSS?rnrnrn	rn	rn		No real correct answer here, save for being able to discuss your favorite online CSS community forums and resources. e.g. Mozilla Developer Network, StackOverflow, etc.rn		This is just your opportunity to discuss larger CSS issues and show how plugged-in you are to the community.rn	rn	rnrnrnWhat are the various techniques for clearing floats?rnrnrn	rn	rn		At some point or another, you will likely experience a collapsed float, which you will need to address.rn		This can be accomplished several ways, including using a clearfix2 by floating the parent element of the collapsed element, or by using an overflow property3.rn	rn	rnrnrn Explain the difference between visibility:hidden and display:nonernrnrn	rn	rn		visibility:hidden simply hides the element, while it will still take up space and affect the layout of the document.rn		display:none also hides the element, but will not take up space and the page will appear as if the element is not present.rn	rn	rnrnrnWhat are some of the new features and properties in CSS3?rnrnrn	rn	rn		Box modelrn		New Web fontsrn		Rounded cornersrn		Border Imagesrn		Box Shadows, Text Shadowsrn		New Color schemes (RGBA)rn		Transform propertyrn		New Pseudo-classesrn		Multi-column layoutrn		New Gradientsrn	rn	rnrnrnWhy shouldn t I use fixed sized fonts ?rnrnrn	rn	rn		Often times, fixed font sizes will show up incorrectly on the user end and will prohibit responsiveness. Using relative sizing will keep fonts proportionate in their relationships to each other and will allow for greater end user flexibility.rn	rn	rnrnrnWhich font names are available on all platforms ?rnrnrn	rn	rn		Only five basic font families( serif, sans-serif, cursive, fantasy, and monsospace) are recognized across platforms, rather than specific fonts.rn		Specific font name recognitions will vary by browser.rn	rn	rnrnrnDo you use grid systems, and if so, what do you prefer?rnrnrn	rn	rn		Again, no correct answer here. Just be able to discuss the pros and cons of different grid systems, mobile-first, fluid and responsive web design issues.rn	rn	rnrnrnWhat are the advantages/disadvantages of using CSS preprocessors? (SASS, Compass, Stylus, LESS)rnrnrn	rn	rn		Here is another opportunity to discuss your personal preferences on use of CSS preprocessors and why.rn		While there s no right or wrong answer here, below are some commonly cited pros and cons of using preprocessors:rn	rn	rnrnrnBenefits: Ability to use nested sytax, define variables and mixins, use of mathematical and operational functions, and the ability to join multiple files into a single one.rnrnDisadvantages: Difficulties tracking file size, maintenance and updating issues, difficulties debugging.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/63</link>
    <description>It it always amazes me that people can be that stupid. Especially if they apply for a position with 5 figures! rnDon t they think that we ll check references, dates, educational institutions?rnrnHere are the top 5 truths people bend on their CV s / resume s:rnrnrn	Attended a college, but never completed. Yes, allot of the time people have attended a college, but for some reason have never got the degree, or qualification. rn	On their CV it will be listed as a degree. - NOT: degree I was AIMING FOR AND MISSED, or NOT FINISHEDrn	Dates: Often in the work history the dates working at various companies will be listed. When you phone the company.rn	a. The person has never worked there!rn	b. The person worked there for 3 weeks (not three years oops!)rn	c. The company simply does not exist.rn	Experience in technologies: I have 5+ experience in MYSQL says the CV. Mean while the person had once glance at a MYSQL book for dummies which was on a friend s coffee table.rn	This is a more difficult one to pin down. Many HR managers won t neccessary need a person to have university or colledge education. The best way to pin this down is: rn	Send them a half and hour SKILLBOOKER SKILLS EVALUATION TEST. It is free and will immediately separate the wheat from the chaff.rn	Is what we touched on in 3. the companies, websites on their CV does not exist. How stupid! A quick Google search or search for the company at HMRC (in the UK) will quickly show if that company ever existed.rn	Phony contact details. I worked for Anna Smith - here s her number . You phone the number and Anna Smith says yes in a Brazilian accent !rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/64</link>
    <description>rnrnMany candidates applying for jobs or positions can show you a six pack . On their CV or Resume they have ticked all the boxes.rnrnThe have the degree (tick), the experience (tick), the right buzz words (tick)rnrnThe main quesions is: rnIs this candidate going to deliver for the company who employs him/her? Will they have the actual stamina to stay at least through their probation period and hopefully another year or two?rnIf they are employed on a contract basis will they be able to deliver the work in the time frame and work quality that is expected?rnrnCan a person with real muscels do 50 sit up - yes I should think so.rnCan a person with a fake six pack do 50 sit ups - nope not a chance.rnrnCan a person with actual skills deliver the work - yes I would hope so.rnCan a person with skills only on paper deliver work - no probably not.rnrnHow do you know the difference? rnThe solution: rnEasy half and hour Skillbooker skill evaluation testrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/65</link>
    <description>rnrnrn	Start with the basics: What is CodeIgniter?rn	Codeigniter is an open source framework for web application. It is used to develop websites on PHP. It is loosely based on MVC pattern, and it is easy to use compare to other PHP framework.rn	 rn	Why is CodeIgniter a smart framework to use - give me 3 reasons?rn	rn		â€‹Small footprint with exceptional performancern		MVC approach to development (although it is very loosely based which allows for flexibility)rn		Generates search engine friendly clean URLsrn		Easily extensiblern		Runs on both PHP 4 (4.3.2+) and 5rn		Support for most major databases including MySQL (4.1+), MySQLi, MS SQL, Postgres, Oracle, SQLite,rn		and ODBC.rn		Application security is a focusrn		Easy caching operationsrn		Many libraries and helpers to help you with complex operations such as email, image manipulation,rn		form validation, file uploading, sessions, multilingual apps and creating apis for your apprn		Most libraries are only loaded when needed which cuts back on resources neededrn		 rn	rn	rn	Explain what are hooks in CodeIgniter?rn	Codeigniter s hooks feature provides a way to change the inner working of the framework without hacking the core files. In other word, hooks allow you to execute a script with a particular path within the Codeigniter. Usually, it is defined in application/config/hooks.php file.rn	 rn	Explain how you will load or add a model in CodeIgniter?rn	Within your controller functions, models will typically be loaded; you will use the functionrn	$this- load- model ( Model_Name );rn	rn	Explain what helpers in CodeIgniter are and how you can load a helper file?rn	In CodeIgniter, helpers are group of function in a particular category that assist you to perform specific functions. In CodeIgniter, you will find many helpers like URL helpers- helping in creating links, Text helpers- perform various text formatting routines, Cookies- helpers set and read cookies. You can load helper file by using command $this- load- helper ( name ) ;rn	rn	rn	rnrnrn rnrn rnrn rnrn rnrnrn	rn	Explain routing in Codeigniter?â€‹rnrn	In CodeIgniter, the way PHP files served is different rather than accessing it directly from the browser. This process is called routing. Routing in CodeIgniter gives you freedom to customize the default URL pattern to use our own URL pattern according to the requirement. So, whenever there is a request made and matches our URL pattern it will automatically direct to the specified controller and function.rn	rn	rn	Why is there a need to configure the URL routes?rn	Changing the URL routes has some benefits likernrn	rn		rn		From SEO point of view, to make URL SEO friendly and get more user visitsrn		rn		rn		Hide some URL element such as a function name, controller name, etc. from the users for security reasonsrn		rn		rn		Provide different functionality to particular parts of a systemrn		rn	rn	rn	rn	Explain Application Flow Chart in CodeIgniter?rnrn	The following graphic illustrates how data flows throughout the system:rn	(Give the following image explain the flow of CodeIgniter)rnrn	rn		rn		The index.php serves as the front controller, initializing the base resources needed to run CodeIgniter.rn		rn		rn		The Router examines the HTTP request to determine what should be done with it.rn		rn		rn		If a cache file exists, it is sent directly to the browser, bypassing the normal system execution.rn		rn		rn		Security. Before the application controller is loaded, the HTTP request and any user submitted data is filtered for security.rn		rn		rn		The Controller loads the model, core libraries, helpers, and any other resources needed to process the specific request.rn		rn		rn		The finalized View is rendered then sent to the web browser to be seen. If caching is enabled, the view is cached first so that on subsequent requests it can be served.rn		rn	rn	rn	rn	How to access config variable in codeigniter?rn	You can access config variable like:rn	 $this- config- item( variable name );rn	rn	rn	How to unset session in codeigniter?rn	We can use unsetuserdata to destroy particular session variablern	$this- session- unset_userdata( somename );rn	We can use sessdestroy to destroy all session:rn	$this- session- sess_destroy();rn	rn	rn	How do you use aliases with autoloading models in CodeIgniter?rn	We can auto load model like this:rn	$autoload[ model ] = array(array( usersmodel , users ), array( newsmodel , news ), categorymodel );rn	rn	rn	List out different types of hook point in CodeIgniter?rn	Different types of hook point in Codeigniter includesrnrn	rn		rn		post_controller_constructorrn		rn		rn		pre_controllerrn		rn		rn		post_sytemrn		rn		rn		pre_systemrn		rn		rn		cache_overridern		rn		rn		display_overridern		rn		rn		post_controllerrn		rn	rn	rn	Mention what are the security parameter for XSS in CodeIgniter?rn	Codeigniter has got a cross-site scripting hack prevention filter. This filter either runs automatically or you can run it as per item basis, to filter all POST and COOKIE data that come across. The XSS filter will target the commonly used methods to trigger JavaScript or other types of code that attempt to hijack cookies or other malicious activity. If it detects any suspicious thing or anything disallowed is encountered, it will convert the data to character entities.rn	Explain how you can link images/CSS/JavaScript from a view in CodeIgniter?rn	In HTML, there is no Codeigniter way, as such it is a PHP server side framework. Just use an absolute path to your resources to link images/CSS/JavaScript from a view in CodeIgniterrn	/css/styles.cssrn	/js/query.phprn	/img/news/566.gpgrn	Explain what is inhibitor in CodeIgniter?rn	For CodeIgniter, inhibitor is an error handler class, using the native PHP functions like set_exception_handler, set_error_handler, register_shutdown_function to handle parse errors, exceptions, and fatal errors.rn	What is the default URL pattern used in Codeigniter framework?rn	Codeigniter framework URL has four main components in default URL pattern. First we have the server name and next we have the controller class name followed by controller function name and function parameters at the end. Codeigniter can be accessed using the URL helper. For example http://servername/controllerName/controllerFunction/parameter1/parameter2.â€‹rn	Explain how you can extend the class in Codeigniter?rn	To extend the native input class in CodeIgniter, you have to build a file named application/core/MY_Input.php and declare your class withrn	Class MY_Input extends CI_Input {}rn	Explain how you can prevent CodeIgniter from CSRF OR XSS?â€‹rn	There are several ways to protect CodeIgniter from CSRF/XSS ( cross-site scripting), one way of doing is to use a hidden field in each form on the website. This hidden field is referred as CSRF token; it is nothing but a random value that alters with each HTTP request sent. As soon as it is inserted in the website forms, it gets saved in the user s session as well. So, when the form is submitted by the users, the website checks whether it is the same as the one saved in the session. If it is same then, the request is legitimate.rn	 How to print SQL statement in codeigniter model?â€‹rn	rn$this- db- last_query();rn	rn	How do you get last insert id in codeigniter ?rn	$this- db- insert_id();â€‹rnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/66</link>
    <description>Artisan rn// Displays help for a given commandrnphp artisan --help OR -hrn// Do not output any messagernphp artisan --quiet OR -qrn// Display this application versionrnphp artisan --version OR -Vrn// Do not ask any interactive questionrnphp artisan --no-interaction OR -nrn// Force ANSI outputrnphp artisan --ansirn// Disable ANSI outputrnphp artisan --no-ansirn// The environment the command should run underrnphp artisan --envrn// -v|vv|vvv Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debugrnphp artisan --verbosernrn// Display the framework change listrnphp artisan changesrn// Remove the compiled class filernphp artisan clear-compiledrn// Put the application into maintenance modernphp artisan downrn// Regenerate framework autoload filesrnphp artisan dump-autoloadrn// Display the current framework environmentrnphp artisan envrn// Displays help for a commandrnphp artisan helprn// Lists commandsrnphp artisan listrnrn// Optimize the framework for better performancernphp artisan optimizern// List all registered routesrnphp artisan routesrn// Serve the application on the PHP development serverrnphp artisan servern// Change the default portrnphp artisan serve --port 8080rn// Get it to work outside localhostrnphp artisan serve --host 0.0.0.0rn// Interact with your applicationrnphp artisan tinkerrn// Bring the application out of maintenance modernphp artisan uprn// Create a new package workbenchrnphp artisan workbenchrnrn// Publish a package's assets to the public directoryrnphp artisan asset:publish [--bench[="vendor/package"]] [--path[="..."]] [package]rn// Create a migration for the password reminders tablernphp artisan auth:reminders-tablern// Flush the application cachernphp artisan cache:clearrn// Create a new Artisan command (L3:task)rnphp artisan command:make name [--command[="..."]] [--path[="..."]] [--namespace[="..."]]rn// Publish a package's configuration to the applicationrnphp artisan config:publishrn// Create a new resourceful controllerrnphp artisan controller:make [--bench="vendor/package"]rn// Seed the database with recordsrnphp artisan db:seed [--class[="..."]] [--database[="..."]]rn// Set the application keyrnphp artisan key:generaternrn// Database migrationsrnphp artisan migrate [--bench="vendor/package"] [--database[="..."]] [--path[="..."]] [--package[="..."]] [--pretend] [--seed]rn// Create the migration repositoryrnphp artisan migrate:install [--database[="..."]]rn// Create a new migration filernphp artisan migrate:make name [--bench="vendor/package"] [--create] [--package[="..."]] [--path[="..."]] [--table[="..."]]rn// Reset and re-run all migrationsrnphp artisan migrate:refresh [--database[="..."]] [--seed]rn// Rollback all database migrationsrnphp artisan migrate:reset [--database[="..."]] [--pretend]rn// Rollback the last database migrationrnphp artisan migrate:rollback [--database[="..."]] [--pretend]rn// Publish a package's migrations to migration directoryrnphp artisan migrate:publish vendor/packagernrn// Listen to a given queuernphp artisan queue:listen [--queue[="..."]] [--delay[="..."]] [--memory[="..."]] [--timeout[="..."]] [connection]rn// Subscribe a URL to an Iron.io push queuernphp artisan queue:subscribe [--type[="..."]] queue urlrn// Process the next job on a queuernphp artisan queue:work [--queue[="..."]] [--delay[="..."]] [--memory[="..."]] [--sleep] [connection]rn// Create a migration for the session database tablernrnphp artisan session:tablern// Publish a package's views to the applicationrnphp artisan view:publish [--path[="..."]] packagernphp artisan tail [--path[="..."]] [--lines[="..."]] [connection]rn  rnrnComposer rn  composer create-project laravel/laravel folder_namerncomposer installrncomposer updaterncomposer dump-autoload [--optimize]rncomposer self-updatern  rn  Configuration rn  Config::get('app.timezone');rn//get with Default valuernConfig::get('app.timezone', 'UTC');rn//set ConfigurationrnConfig::set('database.default', 'sqlite');rn  rnrnrnrn  Routing rn  Route::get('foo', function(){});rnRoute::get('foo', 'ControllerName@function');rnRoute::controller('foo', 'FooController');rn  rnrn  RESTful Controllersrn  Route::resource('posts','PostsController');rn//Specify a subset of actions to handle on the routernRoute::resource('photo', 'PhotoController',['only' = ['index', 'show']]);rnRoute::resource('photo', 'PhotoController',['except' = ['update', 'destroy']]);rn  rnrn  Triggering Errorsrn  App::abort(404);rnApp::missing(function($exception){});rnthrow new NotFoundHttpException;rn  rnrn  Route Parametersrn  Route::get('foo/{bar}', function($bar){});rnRoute::get('foo/{bar?}', function($bar = 'bar'){});rn  rnrn  HTTP Verbsrn  Route::any('foo', function(){});rnRoute::post('foo', function(){});rnRoute::put('foo', function(){});rnRoute::patch('foo', function(){});rnRoute::delete('foo', function(){});rn// RESTful actionsrnRoute::resource('foo', 'FooController');rn  rnrn  Secure Routesrn  Route::get('foo', array('https', function(){}));rnrn  Route Constraintsrn  Route::get('foo/{bar}', function($bar){})rn	- where('bar', '[0-9]+');rnRoute::get('foo/{bar}/{baz}', function($bar, $baz){})rn	- where(array('bar' = '[0-9]+', 'baz' = '[A-Za-z]'))rn  rn  // Set a pattern to be used across routesrn			Route::pattern('bar', '[0-9]+')rn  rn  Filtersrn  // Declare an auth filterrnRoute::filter('auth', function(){});rn// Register a class as a filterrnRoute::filter('foo', 'FooFilter');rnRoute::get('foo', array('before' = 'auth', function(){}));rn// Routes in this group are guarded by the 'auth' filterrnRoute::get('foo', array('before' = 'auth', function(){}));rnRoute::group(array('before' = 'auth'), function(){});rn// Pattern filterrnRoute::when('foo/*', 'foo');rn// HTTP verb patternrnRoute::when('foo/*', 'foo', array('post'));rn  rnrn  Named Routesrn  Route::currentRouteName();rnRoute::get('foo/bar', array('as' = 'foobar', function(){}));rn  rnrn  Route Prefixingrn  // This route group will carry the prefix 'foo'rnRoute::group(array('prefix' = 'foo'), function(){})rn  rnrn  Route Namespacingrn  // This route group will carry the namespace 'Foo\Bar'rnRoute::group(array('namespace' = 'Foo\Bar'), function(){})rn  rn  Sub-Domain Routingrn  // {sub} will be passed to the closurernRoute::group(array('domain' = '{sub}.example.com'), function(){});rn  rnrn  App rn  App::environment();rn// test equal tornApp::environment('local');rnApp::runningInConsole();rnApp::runningUnitTests();rn  rnrn  Log rn  Log::info('info');rnLog::info('info',array('context'= 'additional info'));rnLog::error('error');rnLog::warning('warning');rn// get monolog instancernLog::getMonolog();rn// add listenerrnLog::listen(function($level, $message, $context) {});rn// get all ran queries.rnDB::getQueryLog();rn  rnrn  URLs rn  URL::full();rnURL::current();rnURL::previous();rnURL::to('foo/bar', $parameters, $secure);rnURL::action('FooController@method', $parameters, $absolute);rnURL::route('foo', $parameters, $absolute);rnURL::secure('foo/bar', $parameters);rnURL::asset('css/foo.css', $secure);rnURL::secureAsset('css/foo.css');rnURL::isValidUrl('http://example.com');rnURL::getRequest();rnURL::setRequest($request);rnURL::getGenerator();rnURL::setGenerator($generator);rn  rnrnrn  Events rn  Event::fire('foo.bar', array($bar));rnEvent::listen('foo.bar', function($bar){});rnEvent::listen('foo.*', function($bar){});rnEvent::listen('foo.bar', 'FooHandler', 10);rnEvent::listen('foo.bar', 'BarHandler', 5);rnEvent::listen('foor.bar', function($event){ return false; });rnEvent::queue('foo', array($bar));rnEvent::flusher('foo', function($bar){});rnEvent::flush('foo');rnEvent::forget('foo');rnEvent::subscribe(new FooEventHandler);rn  rnrn  Database rn  DB::connection('connection_name');rnDB::statement('drop table users');rnDB::listen(function($sql, $bindings, $time){ code_here; });rnDB::transaction(function(){ transaction_code_here; });rn// Cache a query for $time minutesrnDB::table('users')- remember($time)- get();rn// Escape raw inputrnDB::raw('sql expression here');rn  rnrn  Selectsrn  DB::table('name')- get();rnDB::table('name')- distinct()- get();rnDB::table('name')- select('column as column_alias')- get();rnDB::table('name')- where('name', '=', 'John')- get();rnDB::table('name')- whereBetween('column', array(1, 100))- get();rnDB::table('name')- whereIn('column', array(1, 2, 3))- get();rnDB::table('name')- whereNotIn('column', array(1, 2, 3))- get();rnDB::table('name')- whereNull('column')- get();rnDB::table('name')- whereNotNull('column')- get();rnDB::table('name')- groupBy('column')- get();rn// Default Eloquent sort is ascendantrnDB::table('name')- orderBy('column')- get();rnDB::table('name')- orderBy('column','desc')- get();rnDB::table('name')- having('count', ' ', 100)- get();rnDB::table('name')- skip(10)- take(5)- get();rnDB::table('name')- first();rnDB::table('name')- pluck('column');rnDB::table('name')- lists('column');rn// JoinsrnDB::table('name')- join('table', 'name.id', '=', 'table.id')rn - select('name.id', 'table.email');rn  rnrn  Inserts, Updates, Deletesrn  DB::table('name')- insert(array('name' = 'John', 'email' = 'john@example.com'));rnDB::table('name')- insertGetId(array('name' = 'John', 'email' = 'john@example.com'));rn// Batch insertrnDB::table('name')- insert(array(rn	array('name' = 'John', 'email' = 'john@example.com'),rn	array('name' = 'James', 'email' = 'james@example.com')rn));rn// Update an entryrnDB::table('name')- where('name', '=', 'John')rn	- update(array('email' = 'john@example2.com'));rn// Delete everything from a tablernDB::table('name')- delete();rn// Delete specific recordsrnDB::table('name')- where('id', ' ', '10')- delete();rnDB::table('name')- truncate();rn  rnrn  Aggregatesrn  DB::table('name')- count();rnDB::table('name')- max('column');rnDB::table('name')- min('column');rnDB::table('name')- avg('column');rnDB::table('name')- sum('column');rnDB::table('name')- increment('column');rnDB::table('name')- increment('column', $amount);rnDB::table('name')- decrement('column');rnDB::table('name')- decrement('column', $amount);rnDB::table('name')- remember(5)- get();rnDB::table('name')- remember(5, 'cache-key-name')- get();rnDB::table('name')- cacheTags('my-key')- remember(5)- get();rnDB::table('name')- cacheTags(array('my-first-key','my-second-key'))- remember(5)- get();rn  rnrn  Raw Expressionsrn  // return rowsrnDB::select('select * from users where id = ?', array('value'));rn// return nr affected rowsrnDB::insert('insert into foo set bar=2');rnDB::update('update foo set bar=2');rnDB::delete('delete from bar');rn// returns voidrnDB::statement('update foo set bar=2');rn// raw expression inside a statementrnDB::table('name')- select(DB::raw('count(*) as count, column2'))- get();rn  rnrn  Eloquent rn  Model::create(array('key' = 'value'));rn// Find first matching record by attributes or creaternModel::firstOrCreate(array('key' = 'value'));rn// Find first record by attributes or instantiaternModel::firstOrNew(array('key' = 'value'));rn// Create or update a record matching attibutes, and fill with valuesrnModel::updateOrCreate(array('search_key' = 'search_value'), array('key' = 'value'));rn// Fill a model with an array of attributes, beware of mass assignment!rnModel::fill($attributes);rnModel::destroy(1);rnModel::all();rnModel::find(1);rn// Find using dual primary keyrnModel::find(array('first', 'last'));rn// Throw an exception if the lookup failsrnModel::findOrFail(1);rn// Find using dual primary key and throw exception if the lookup failsrnModel::findOrFail(array('first', 'last'));rnModel::where('foo', '=', 'bar')- get();rnModel::where('foo', '=', 'bar')- first();rn// dynamicrnModel::whereFoo('bar')- first();rn// Throw an exception if the lookup failsrnModel::where('foo', '=', 'bar')- firstOrFail();rnModel::where('foo', '=', 'bar')- count();rnModel::where('foo', '=', 'bar')- delete();rn//Output raw queryrnModel::where('foo', '=', 'bar')- toSql();rnModel::whereRaw('foo = bar and cars = 2', array(20))- get();rnModel::remember(5)- get();rnModel::remember(5, 'cache-key-name')- get();rnModel::cacheTags('my-tag')- remember(5)- get();rnModel::cacheTags(array('my-first-key','my-second-key'))- remember(5)- get();rnModel::on('connection-name')- find(1);rnModel::with('relation')- get();rnModel::all()- take(10);rnModel::all()- skip(10);rn// Default Eloquent sort is ascendantrnModel::all()- orderBy('column');rnModel::all()- orderBy('column','desc');rn  rnrn  Soft Deletern  Model::withTrashed()- where('cars', 2)- get();rn// Include the soft deleted models in the resultsrnModel::withTrashed()- where('cars', 2)- restore();rnModel::where('cars', 2)- forceDelete();rn// Force the result set to only included soft deletesrnModel::onlyTrashed()- where('cars', 2)- get();rn  rnrn  Eventsrn  Model::creating(function($model){});rnModel::created(function($model){});rnModel::updating(function($model){});rnModel::updated(function($model){});rnModel::saving(function($model){});rnModel::saved(function($model){});rnModel::deleting(function($model){});rnModel::deleted(function($model){});rnModel::observe(new FooObserver);rn  rn  Eloquent Configurationrn  // Disables mass assignment exceptions from being thrown from model inserts and updatesrnEloquent::unguard();rn// Renables any ability to throw mass assignment exceptionsrnEloquent::reguard();rn  rnrn  Pagination rn  // Auto-Magic PaginationrnModel::paginate(15);rnModel::where('cars', 2)- paginate(15);rn// "Next" and "Previous" onlyrnModel::where('cars', 2)- simplePaginate(15);rn// Manual PaginatorrnPaginator::make($items, $totalItems, $perPage);rn// Print page navigators in viewrn$variable- links();rn  rnrn  rnrn  rn  Schema rn  // Indicate that the table needs to be createdrnSchema::create('table', function($table)rn{rn $table- increments('id');rn});rn// Specify a ConnectionrnSchema::connection('foo')- create('table', function($table){});rn// Rename the table to a given namernSchema::rename($from, $to);rn// Indicate that the table should be droppedrnSchema::drop('table');rn// Indicate that the table should be dropped if it existsrnSchema::dropIfExists('table');rn// Determine if the given table existsrnSchema::hasTable('table');rn// Determine if the given table has a given columnrnSchema::hasColumn('table', 'column');rn// Update an existing tablernSchema::table('table', function($table){});rn// Indicate that the given columns should be renamedrn$table- renameColumn('from', 'to');rn// Indicate that the given columns should be droppedrn$table- dropColumn(string|array);rn// The storage engine that should be used for the tablern$table- engine = 'InnoDB';rn// Only work on MySQLrn$table- string('name')- after('email');rn  rnrn  Indexesrn  $table- string('column')- unique();rn$table- primary('column');rn// Creates a dual primary keyrn$table- primary(array('first', 'last'));rn$table- unique('column');rn$table- unique('column', 'key_name');rn// Creates a dual unique indexrn$table- unique(array('first', 'last'));rn$table- unique(array('first', 'last'), 'key_name');rn$table- index('column');rn$table- index('column', 'key_name');rn// Creates a dual indexrn$table- index(array('first', 'last'));rn$table- index(array('first', 'last'), 'key_name');rn$table- dropPrimary('table_column_primary');rn$table- dropUnique('table_column_unique');rn$table- dropIndex('table_column_index');rn  rnrn  Foreign Keysrn  $table- foreign('user_id')- references('id')- on('users');rn$table- foreign('user_id')- references('id')- on('users')- onDelete('cascade'|'restrict'|'set null'|'no action');rn$table- foreign('user_id')- references('id')- on('users')- onUpdate('cascade'|'restrict'|'set null'|'no action');rn$table- dropForeign('posts_user_id_foreign');rn  rnrn  Column Typesrn  // Incrementsrn$table- increments('id');rn$table- bigIncrements('id');rn// Numbersrn$table- integer('votes');rn$table- tinyInteger('votes');rn$table- smallInteger('votes');rn$table- mediumInteger('votes');rn$table- bigInteger('votes');rn$table- float('amount');rn$table- double('column', 15, 8);rn$table- decimal('amount', 5, 2);rnrn//String and Textrn$table- char('name', 4);rn$table- string('email');rn$table- string('name', 100);rn$table- text('description');rn$table- mediumText('description');rn$table- longText('description');rnrn//Date and Timern$table- date('created_at');rn$table- dateTime('created_at');rn$table- time('sunrise');rn$table- timestamp('added_on');rn$table- timestamps();rn// Adds created_at and updated_at columnsrn$table- nullableTimestamps();rnrn// Othersrn$table- binary('data');rn$table- boolean('confirmed');rn$table- softDeletes();rn// Adds deleted_at column for soft deletesrn$table- enum('choices', array('foo', 'bar'));rn$table- rememberToken();rn// Adds remember_token as VARCHAR(100) NULLrn$table- morphs('parent');rn// Adds INTEGER parent_id and STRING parent_typern- nullable()rn- default($value)rn- unsigned()rn  rnrn  Input rn  Input::get('key');rn// Default if the key is missingrnInput::get('key', 'default');rnInput::has('key');rnInput::all();rn// Only retrieve 'foo' and 'bar' when getting inputrnInput::only('foo', 'bar');rn// Disregard 'foo' when getting inputrnInput::except('foo');rnInput::flush();rn  rnrn  Session Input (flash)rn  // Flash input to the sessionrnInput::flash();rn// Flash only some of the input to the sessionrnInput::flashOnly('foo', 'bar');rn// Flash only some of the input to the sessionrnInput::flashExcept('foo', 'baz');rn// Retrieve an old input itemrnInput::old('key','default_value');rn  rnrn  Filesrn  // Use a file that's been uploadedrnInput::file('filename');rn// Determine if a file was uploadedrnInput::hasFile('filename');rn// Access file propertiesrnInput::file('name')- getRealPath();rnInput::file('name')- getClientOriginalName();rnInput::file('name')- getClientOriginalExtension();rnInput::file('name')- getSize();rnInput::file('name')- getMimeType();rn// Move an uploaded filernInput::file('name')- move($destinationPath);rn// Move an uploaded filernInput::file('name')- move($destinationPath, $fileName);rn  rnrn  Cache rn  Cache::put('key', 'value', $minutes);rnCache::add('key', 'value', $minutes);rnCache::forever('key', 'value');rnCache::remember('key', $minutes, function(){ return 'value' });rnCache::rememberForever('key', function(){ return 'value' });rnCache::forget('key');rnCache::has('key');rnCache::get('key');rnCache::get('key', 'default');rnCache::get('key', function(){ return 'default'; });rnCache::tags('my-tag')- put('key','value', $minutes);rnCache::tags('my-tag')- has('key');rnCache::tags('my-tag')- get('key');rnCache::tags('my-tag')- forget('key');rnCache::tags('my-tag')- flush();rnCache::increment('key');rnCache::increment('key', $amount);rnCache::decrement('key');rnCache::decrement('key', $amount);rnCache::section('group')- put('key', $value);rnCache::section('group')- get('key');rnCache::section('group')- flush();rn  rnrn  Cookies rn  Cookie::get('key');rnCookie::get('key', 'default');rn// Create a cookie that lasts for everrnCookie::forever('key', 'value');rn// Create a cookie that lasts N minutesrnCookie::make('key', 'value', 'minutes');rn// Set a cookie before a response has been createdrnCookie::queue('key', 'value', 'minutes');rn// Forget cookiernCookie::forget('key');rn// Send a cookie with a responsern$response = Response::make('Hello World');rn// Add a cookie to the responsern$response- withCookie(Cookie::make('name', 'value', $minutes));rn  rnrn  Sessions rn  Session::get('key');rn// Returns an item from the sessionrnSession::get('key', 'default');rnSession::get('key', function(){ return 'default'; });rn// Get the session IDrnSession::getId();rn// Put a key / value pair in the sessionrnSession::put('key', 'value');rn// Push a value into an array in the sessionrnSession::push('foo.bar','value');rn// Returns all items from the sessionrnSession::all();rn// Checks if an item is definedrnSession::has('key');rn// Remove an item from the sessionrnSession::forget('key');rn// Remove all of the items from the sessionrnSession::flush();rn// Generate a new session identifierrnSession::regenerate();rn// Flash a key / value pair to the sessionrnSession::flash('key', 'value');rn// Reflash all of the session flash datarnSession::reflash();rn// Reflash a subset of the current flash datarnSession::keep(array('key1', 'key2'));rn  rnrn  Requests rn  // url: http://xx.com/aa/bbrnRequest::url();rn// path: /aa/bbrnRequest::path();rn// getRequestUri: /aa/bb/?c=drnRequest::getRequestUri();rn// Returns user's IPrnRequest::getClientIp();rn// getUri: http://xx.com/aa/bb/?c=drnRequest::getUri();rn// getQueryString: c=drnRequest::getQueryString();rn// Get the port scheme of the request (e.g., 80, 443, etc.)rnRequest::getPort();rn// Determine if the current request URI matches a patternrnRequest::is('foo/*');rn// Get a segment from the URI (1 based index)rnRequest::segment(1);rn// Retrieve a header from the requestrnRequest::header('Content-Type');rn// Retrieve a server variable from the requestrnRequest::server('PATH_INFO');rn// Determine if the request is the result of an AJAX callrnRequest::ajax();rn// Determine if the request is over HTTPSrnRequest::secure();rn// Get the request methodrnRequest::method();rn// Checks if the request method is of specified typernRequest::isMethod('post');rn// Get raw POST datarnRequest::instance()- getContent();rn// Get requested response formatrnRequest::format();rn// true if HTTP Content-Type header contains */jsonrnRequest::isJson();rn// true if HTTP Accept header is application/jsonrnRequest::wantsJson();rnrn  rnrn  Responses rn  return Response::make($contents);rnreturn Response::make($contents, 200);rnreturn Response::json(array('key' = 'value'));rnreturn Response::json(array('key' = 'value'))rn	- setCallback(Input::get('callback'));rnreturn Response::download($filepath);rnreturn Response::download($filepath, $filename, $headers);rn// Create a response and modify a header valuern$response = Response::make($contents, 200);rn$response- header('Content-Type', 'application/json');rnreturn $response;rn// Attach a cookie to a responsernreturn Response::make($content)rn	- withCookie(Cookie::make('key', 'value'));rn  rnrn  Redirects rn  return Redirect::to('foo/bar');rnreturn Redirect::to('foo/bar')- with('key', 'value');rnreturn Redirect::to('foo/bar')- withInput(Input::get());rnreturn Redirect::to('foo/bar')- withInput(Input::except('password'));rnreturn Redirect::to('foo/bar')- withErrors($validator);rn// Create a new redirect response to the previous locationrnreturn Redirect::back();rn// Create a new redirect response to a named routernreturn Redirect::route('foobar');rnreturn Redirect::route('foobar', array('value'));rnreturn Redirect::route('foobar', array('key' = 'value'));rn// Create a new redirect response to a controller actionrnreturn Redirect::action('FooController@index');rnreturn Redirect::action('FooController@baz', array('value'));rnreturn Redirect::action('FooController@baz', array('key' = 'value'));rn// If intended redirect is not defined, defaults to foo/bar.rnreturn Redirect::intended('foo/bar');rn  rnrn  IoC rn  App::bind('foo', function($app){ return new Foo; });rnApp::make('foo');rn// If this class exists, it's returnedrnApp::make('FooBar');rn// Register a shared binding in the containerrnApp::singleton('foo', function(){ return new Foo; });rn// Register an existing instance as shared in the containerrnApp::instance('foo', new Foo);rn// Register a binding with the containerrnApp::bind('FooRepositoryInterface', 'BarRepository');rn// Register a service provider with the applicationrnApp::register('FooServiceProvider');rn// Listen for object resolutionrnApp::resolving(function($object){});rn  rnrn  Security rn  Passwordsrn  Hash::make('secretpassword');rnHash::check('secretpassword', $hashedPassword);rnHash::needsRehash($hashedPassword);rn  rn  Authrn  // Determine if the current user is authenticatedrnAuth::check();rn// Get the currently authenticated userrnAuth::user();rn// Get the ID of the currently authenticated userrnAuth::id();rn// Attempt to authenticate a user using the given credentialsrnAuth::attempt(array('email' = $email, 'password' = $password));rn// 'Remember me' by passing true to Auth::attempt()rnAuth::attempt($credentials, true);rn// Log in for a single requestrnAuth::once($credentials);rn// Log a user into the applicationrnAuth::login(User::find(1));rn// Log the given user ID into the applicationrnAuth::loginUsingId(1);rn// Log the user out of the applicationrnAuth::logout();rn// Validate a user's credentialsrnAuth::validate($credentials);rn// Attempt to authenticate using HTTP Basic AuthrnAuth::basic('username');rn// Perform a stateless HTTP Basic login attemptrnAuth::onceBasic();rn// Send a password reminder to a userrnPassword::remind($credentials, function($message, $user){});rn  rnrn  Encryptionrn  Crypt::encrypt('secretstring');rnCrypt::decrypt($encryptedString);rnCrypt::setMode('ctr');rnCrypt::setCipher($cipher);rn  rnrn  Mail rn  Mail::send('email.view', $data, function($message){});rnMail::send(array('html.view', 'text.view'), $data, $callback);rnMail::queue('email.view', $data, function($message){});rnMail::queueOn('queue-name', 'email.view', $data, $callback);rnMail::later(5, 'email.view', $data, function($message){});rn// Write all email to logs instead of sendingrnMail::pretend();rn  rnrn  Messagesrn  // These can be used on the $message instance passed into Mail::send() or Mail::queue()rn$message- from('email@example.com', 'Mr. Example');rn$message- sender('email@example.com', 'Mr. Example');rn$message- returnPath('email@example.com');rn$message- to('email@example.com', 'Mr. Example');rn$message- cc('email@example.com', 'Mr. Example');rn$message- bcc('email@example.com', 'Mr. Example');rn$message- replyTo('email@example.com', 'Mr. Example');rn$message- subject('Welcome to the Jungle');rn$message- priority(2);rn$message- attach('foo\bar.txt', $options);rn// This uses in-memory data as attachmentsrn$message- attachData('bar', 'Data Name', $options);rn// Embed a file in the message and get the CIDrn$message- embed('foo\bar.txt');rn$message- embedData('foo', 'Data Name', $options);rn// Get the underlying Swift Message instancern$message- getSwiftMessage();rn  rnrn  Queues rn  Queue::push('SendMail', array('message' = $message));rnQueue::push('SendEmail@send', array('message' = $message));rnQueue::push(function($job) use $id {});rn// Same payload to multiple workersrnQueue::bulk(array('SendEmail', 'NotifyUser'), $payload);rn// Starting the queue listenerrnphp artisan queue:listenrnphp artisan queue:listen connectionrnphp artisan queue:listen --timeout=60rn// Process only the first job on the queuernphp artisan queue:workrn// Start a queue worker in daemon modernphp artisan queue:work --daemonrn// Create migration file for failed jobsrnphp artisan queue:failed-tablern// Listing failed jobsrnphp artisan queue:failedrn// Delete failed job by idrnphp artisan queue:forget 5rn// Delete all failed jobsrnphp artisan queue:flushrn  rnrn  Validation rn  Validator::make(rn	array('key' = 'Foo'),rn	array('key' = 'required|in:Foo')rn);rnValidator::extend('foo', function($attribute, $value, $params){});rnValidator::extend('foo', 'FooValidator@validate');rnValidator::resolver(function($translator, $data, $rules, $msgs)rn{rn	return new FooValidator($translator, $data, $rules, $msgs);rn});rn  rnrn  Rulesrn  acceptedrnactive_urlrnafter:YYYY-MM-DDrnbefore:YYYY-MM-DDrnalpharnalpha_dashrnalpha_numrnarrayrnbetween:1,10rnconfirmedrndaterndate_format:YYYY-MM-DDrndifferent:fieldnamerndigits:valuerndigits_between:min,maxrnbooleanrnemailrnexists:table,columnrnimagernin:foo,bar,...rnnot_in:foo,bar,...rnintegerrnnumericrniprnmax:valuernmin:valuernmimes:jpeg,pngrnregex:[0-9]rnrequiredrnrequired_if:field,valuernrequired_with:foo,bar,...rnrequired_with_all:foo,bar,...rnrequired_without:foo,bar,...rnrequired_without_all:foo,bar,...rnsometimes|required|fieldrnsame:fieldrnsize:valuerntimezonernunique:table,column,except,idColumnrnurlrnrn  rnrn  rn  rn  Views rn  View::make('path/to/view');rnView::make('foo/bar')- with('key', 'value');rnView::make('foo/bar')- withKey('value');rnView::make('foo/bar', array('key' = 'value'));rnView::exists('foo/bar');rn// Share a value across all viewsrnView::share('key', 'value');rn// Nesting viewsrnView::make('foo/bar')- nest('name', 'foo/baz', $data);rn// Register a view composerrnView::composer('viewname', function($view){});rn//Register multiple views to a composerrnView::composer(array('view1', 'view2'), function($view){});rn// Register a composer classrnView::composer('viewname', 'FooComposer');rnView::creator('viewname', function($view){});rn  rnrn  Blade Templates rn  @extends('layout.name')rn// Begin a sectionrn@section('name')rn// End a sectionrn@stoprn// End a section and yieldrn@showrn@parentrn// Show a section in a templatern@yield('name')rn@include('view.name')rn@include('view.name', array('key' = 'value'));rn@lang('messages.name')rn@choice('messages.name', 1);rn@ifrn@elsern@elseifrn@endifrn@unlessrn@endunlessrn@forrn@endforrn@foreachrn@endforeachrn@whilern@endwhilern//forelse 4.2 featurern@forelse($users as $user)rn@emptyrn@endforelsern// Echo contentrn{{ $var }}rn// Echo escaped contentrn{{{ $var }}}rn{{-- Blade Comment --}}rn// Echoing Data After Checking For Existencern{{{ $name or 'Default' }}}rn// Displaying Raw Text With Curly Bracesrn@{{ This will not be processed by Blade }}rn  rnrn  Forms rn  Form::open(array('url' = 'foo/bar', 'method' = 'PUT'));rnForm::open(array('route' = 'foo.bar'));rnForm::open(array('route' = array('foo.bar', $parameter)));rnForm::open(array('action' = 'FooController@method'));rnForm::open(array('action' = array('FooController@method', $parameter)));rnForm::open(array('url' = 'foo/bar', 'files' = true));rnForm::close();rnForm::token();rnForm::model($foo, array('route' = array('foo.bar', $foo- bar)));rnrn  rnrn  Form Elementsrn  Form::label('id', 'Description');rnForm::label('id', 'Description', array('class' = 'foo'));rnForm::text('name');rnForm::text('name', $value);rnForm::text('name', $value, array('class' = 'name'));rnForm::textarea('name');rnForm::textarea('name', $value);rnForm::textarea('name', $value, array('class' = 'name'));rnForm::hidden('foo', $value);rnForm::password('password');rnForm::password('password', array('placeholder' = 'Password'));rnForm::email('name', $value, array());rnForm::file('name', array('class' = 'name'));rnForm::checkbox('name', 'value');rn// Generating a checkbox that is checkedrnForm::checkbox('name', 'value', true, array('class' = 'name'));rnForm::radio('name', 'value');rn// Generating a radio input that is selectedrnForm::radio('name', 'value', true, array('class' = 'name'));rnForm::select('name', array('key' = 'value'));rnForm::select('name', array('key' = 'value'), 'key', array('class' = 'name'));rnForm::selectRange('range', 1, 10);rnForm::selectYear('year', 2011, 2015);rnForm::selectMonth('month');rnForm::submit('Submit!', array('class' = 'name'));rnForm::button('name', array('class' = 'name'));rnForm::macro('fooField', function()rn{rn	return ' input type="custom"/ ';rn});rnForm::fooField();rn  rnrn  HTML Builderrn  HTML::macro('name', function(){});rn// Convert an HTML string to entitiesrnHTML::entities($value);rn// Convert entities to HTML charactersrnHTML::decode($value);rn// Generate a link to a JavaScript filernHTML::script($url, $attributes);rn// Generate a link to a CSS filernHTML::style($url, $attributes);rn// Generate an HTML image elementrnHTML::image($url, $alt, $attributes);rn// Generate a HTML linkrnHTML::link($url, 'title', $attributes, $secure);rn// Generate a HTTPS HTML linkrnHTML::secureLink($url, 'title', $attributes);rn// Generate a HTML link to an assetrnHTML::linkAsset($url, 'title', $attributes, $secure);rn// Generate a HTTPS HTML link to an assetrnHTML::linkSecureAsset($url, 'title', $attributes);rn// Generate a HTML link to a named routernHTML::linkRoute($name, 'title', $parameters, $attributes);rn// Generate a HTML link to a controller actionrnHTML::linkAction($action, 'title', $parameters, $attributes);rn// Generate a HTML link to an email addressrnHTML::mailto($email, 'title', $attributes);rn// Obfuscate an e-mail address to prevent spam-bots from sniffing itrnHTML::email($email);rn// Generate an ordered list of itemsrnHTML::ol($list, $attributes);rn// Generate an un-ordered list of itemsrnHTML::ul($list, $attributes);rn// Create a listing HTML elementrnHTML::listing($type, $list, $attributes);rn// Create the HTML for a listing elementrnHTML::listingElement($key, $type, $value);rn// Create the HTML for a nested listing attributernHTML::nestedListing($key, $type, $value);rn// Build an HTML attribute string from an arrayrnHTML::attributes($attributes);rn// Build a single attribute elementrnHTML::attributeElement($key, $value);rn// Obfuscate a string to prevent spam-bots from sniffing itrnHTML::obfuscate($value);rn  rnrn  Strings rn  // Transliterate a UTF-8 value to ASCIIrnStr::ascii($value)rnStr::camel($value)rnStr::contains($haystack, $needle)rnStr::endsWith($haystack, $needles)rn// Cap a string with a single instance of a given value.rnStr::finish($value, $cap)rnStr::is($pattern, $value)rnStr::length($value)rnStr::limit($value, $limit = 100, $end = '...')rnStr::lower($value)rnStr::words($value, $words = 100, $end = '...')rnStr::plural($value, $count = 2)rn// Generate a more truly "random" alpha-numeric string.rnStr::random($length = 16)rn// Generate a "random" alpha-numeric string.rnStr::quickRandom($length = 16)rnStr::upper($value)rnStr::title($value)rnStr::singular($value)rnStr::slug($title, $separator = '-')rnStr::snake($value, $delimiter = '_')rnStr::startsWith($haystack, $needles)rn// Convert a value to studly caps case.rnStr::studly($value)rnStr::macro($name, $macro)rn  rnrn  Localization rn  App::setLocale('en');rnLang::get('messages.welcome');rnLang::get('messages.welcome', array('foo' = 'Bar'));rnLang::has('messages.welcome');rnLang::choice('messages.apples', 10);rn// Lang::get aliasrntrans('messages.welcome');rn  rnrn  Files rn  File::exists('path');rnFile::get('path');rnFile::getRemote('path');rn// Get a file's contents by requiring itrnFile::getRequire('path');rn// Require the given file oncernFile::requireOnce('path');rn// Write the contents of a filernFile::put('path', 'contents');rn// Append to a filernFile::append('path', 'data');rn// Delete the file at a given pathrnFile::delete('path');rn// Move a file to a new locationrnFile::move('path', 'target');rn// Copy a file to a new locationrnFile::copy('path', 'target');rn// Extract the file extension from a file pathrnFile::extension('path');rn// Get the file type of a given filernFile::type('path');rn// Get the file size of a given filernFile::size('path');rn// Get the file's last modification timernFile::lastModified('path');rn// Determine if the given path is a directoryrnFile::isDirectory('directory');rn// Determine if the given path is writablernFile::isWritable('path');rn// Determine if the given path is a filernFile::isFile('file');rn// Find path names matching a given pattern.rnFile::glob($patterns, $flag);rn// Get an array of all files in a directory.rnFile::files('directory');rn// Get all of the files from the given directory (recursive).rnFile::allFiles('directory');rn// Get all of the directories within a given directory.rnFile::directories('directory');rn// Create a directoryrnFile::makeDirectory('path', $mode = 0777, $recursive = false);rn// Copy a directory from one location to anotherrnFile::copyDirectory('directory', 'destination', $options = null);rn// Recursively delete a directoryrnFile::deleteDirectory('directory', $preserve = false);rn// Empty the specified directory of all files and foldersrnFile::cleanDirectory('directory');rn  rnrnrn  Helpers rn  Arraysrn  array_add($array, 'key', 'value');rn// Build a new array using a callbackrnarray_build($array, function(){});rn// Divide an array into two arrays. One with keys and the other with valuesrnarray_divide($array);rn// Flatten a multi-dimensional associative array with dotsrnarray_dot($array);rn// Get all of the given array except for a specified array of itemsrnarray_except($array, array('key'));rn// Fetch a flattened array of a nested array elementrnarray_fetch($array, 'key');rn// Return the first element in an array passing a given truth testrnarray_first($array, function($key, $value){}, $default);rn// Strips keys from the arrayrnarray_flatten($array);rn// Remove one or many array items from a given array using "dot" notationrnarray_forget($array, 'foo');rn// Dot notationrnarray_forget($array, 'foo.bar');rn// Get an item from an array using "dot" notationrnarray_get($array, 'foo', 'default');rnarray_get($array, 'foo.bar', 'default');rn// Get a subset of the items from the given arrayrnarray_only($array, array('key'));rn// Return array of key = valuesrnarray_pluck($array, 'key');rn// Return and remove 'key' from arrayrnarray_pull($array, 'key');rn// Set an array item to a given value using "dot" notationrnarray_set($array, 'key', 'value');rn// Dot notationrnarray_set($array, 'key.subkey', 'value');rnarray_sort($array, function(){});rn// First element of an arrayrnhead($array);rn// Last element of an arrayrnlast($array);rn  rn  Pathsrn  app_path();rn// Get the path to the public folderrnpublic_path();rn// App root pathrnbase_path();rn// Get the path to the storage folderrnstorage_path();rn  rn  Stringsrn  // Convert a value to camel caserncamel_case($value);rn// Get the class "basename" of the given object / classrnclass_basename($class);rn// Escape a stringrne(' html ');rn// Determine if a given string starts with a given substringrnstarts_with('Foo bar.', 'Foo');rn// Determine if a given string ends with a given substringrnends_with('Foo bar.', 'bar.');rn// Convert a string to snake casernsnake_case('fooBar');rn// Determine if a given string contains a given substringrnstr_contains('Hello foo bar.', 'foo');rn// Result: foo/bar/rnstr_finish('foo/bar', '/');rnstr_is('foo*', 'foobar');rnstr_plural('car');rnstr_random(25);rnstr_limit($value, $limit = 100, $end = '...')rnstr_singular('cars');rn// Result: FooBarrnstudly_case('foo_bar');rntrans('foo.bar');rntrans_choice('foo.bar', $count);rn  rn  URLs and Linksrn  action('FooController@method', $parameters);rnlink_to('foo/bar', $title, $attributes, $secure);rnlink_to_asset('img/foo.jpg', $title, $attributes, $secure);rnlink_to_route('route.name', $title, $parameters, $attributes);rnlink_to_action('FooController@method', $title, $params, $attrs);rn// HTML Linkrnasset('img/photo.jpg', $title, $attributes);rn// HTTPS linkrnsecure_asset('img/photo.jpg', $title, $attributes);rnsecure_url('path', $parameters);rnroute($route, $parameters, $absolute = true);rnurl('path', $parameters = array(), $secure = null);rn  rn  Miscellaneousrn  csrf_token();rndd($value);rnvalue(function(){ return 'bar'; });rnwith(new Foo)- chainedMethod();rn  rnrn  Unit testing rn  Install and runrn  // add to composer and update:rn"phpunit/phpunit": "4.0.*"rn// run tests (from project root)rn./vendor/bin/phpunitrn  rn  Assertsrn  $this- assertTrue(true);rn$this- assertEquals('foo', $bar);rn$this- assertCount(1,$times);rn$this- assertResponseOk();rn$this- assertResponseStatus(403);rn$this- assertRedirectedTo('foo');rn$this- assertRedirectedToRoute('route.name');rn$this- assertRedirectedToAction('Controller@method');rn$this- assertViewHas('name');rn$this- assertViewHas('age', $value);rn$this- assertSessionHasErrors();rn// Asserting the session has errors for a given key...rn$this- assertSessionHasErrors('name');rn// Asserting the session has errors for several keys...rn$this- assertSessionHasErrors(array('name', 'age'));rn$this- assertHasOldInput();rn  rn  Calling routesrn  $response = $this- call($method, $uri, $parameters, $files, $server, $content);rn$response = $this- callSecure('GET', 'foo/bar');rn$this- session(['foo' = 'bar']);rn$this- flushSession();rn$this- seed();rn$this- seed($connection);rn  rnrn  SSH rn  rn  Executing Commandsrn  SSH::run(array $commands);rnSSH::into($remote)- run(array $commands); // specify remote, otherwise assumes defaultrnSSH::run(array $commands, function($line)rn{rn	echo $line.PHP_EOL;rn});rn  rnrn  Tasksrn  SSH::define($taskName, array $commands); // definernSSH::task($taskName, function($line) // executern{rn	echo $line.PHP_EOL;rn});rn  rnrn  SFTP Uploadsrn  SSH::put($localFile, $remotePath);rnSSH::putString($string, $remotePath);rn  rnrn  Filesystem/Cloud Storagern  Storage::disk('s3');rnStorage::disk('local')- put('file.txt', 'Contents');rnStorage::disk('local')- get('file.jpg');rnStorage::disk('s3')- exists('file.jpg');rnStorage::get('file.jpg');rnStorage::put('file.jpg', $contents);rnStorage::size('file1.jpg');rnStorage::lastModified('file1.jpg');rnStorage::copy('old/file1.jpg', 'new/file1.jpg');rnStorage::move('old/file1.jpg', 'new/file1.jpg');rnStorage::prepend('file.log', 'Prepended Text');rnStorage::append('file.log', 'Appended Text');rnStorage::delete(['file1.jpg', 'file2.jpg']);rnStorage::files($directory);rnStorage::allFiles($directory);rnStorage::directories($directory);rnStorage::allDirectories($directory);rnStorage::makeDirectory($directory);rnStorage::deleteDirectory($directory);rn  </description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/67</link>
    <description>Skillbooker's CRM has the capability to test and assess and compare different candidatesrnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/68</link>
    <description>Add rnrn$this- autoRender = false;rnrnTo your function inside your controllerrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/69</link>
    <description>At first it was a huge problem to me, use Composer someone said. What s that? Where do I start. But once I used it I realise it was easy peasy.rnrnBefore you start do the following.rnrnPlease ensure following things are enabled and installed on your machine.rnrnrn	Install Xampprn	You must have PHP 5.4.16 or above installed on your machine.rn	Go to php.ini and activate the intl plugin - do this BEFORE you go on.rn	mbstring extension and intl extension must be enabled to install CakePHP 3 on your machine.rnrnrnNext Install Composer. For windows users it s very easy just download installer file from composer site.rnrnHere is the .exe installer link to download Composer-Setup.exernrnMETHOD 1: Once You installed composer successfully. Go to Start then type in cmd then by using change directory (cd ../) navigate to the location on your PC (normally in C:/xampp/htdocs/ ) where you want to install the CakePHP3. Then run following command in terminal window.rnrn(METHOD 2: also works install git bash, once installed you can right click in the folder where you want to run composer, so you don t need to cd into that folder using comand line)rnrnrncomposer create-project --prefer-dist cakephp/app cquizrnrnVoila, now give Cakephp write access to the temp folder by typing in Y rnrnrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/129</link>
    <description>There is two ways to re-use functionality in CakePHP. One way it by place your code in a component and then reference the component. This is probably more correct, but I find the component does not have access to the Cakephp elements like sessions, save(), find() etc. So to keep it simple I prefer to place the functionality I need in a controller and reference the function in the controller with $this- myfunction(); then I can also use it in another controller like thisrnrnrnApp::import('Controller', 'Nameofcontroller');rn$calledcontroller = new NameofcontrollerController;rn$calledcontroller- functionIwantToAccess();rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/126</link>
    <description>If you use windows command line go to start type in cmd, in the command line cd into the to your cake php app. Then cd into the bin folder. Then interface paste in (right click paste) rnrnrncomposer require --dev cakephp/debug_kit "~3.0"rnrnthen activate the plugin by rnrnrncake plugin load DebugKitrnrnvoila !rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/132</link>
    <description>Migrations in Laravel 5 comes as standard in CakePHP3 it is a plugin which you mention in your composer file then run the command in you command line rnrnrncomposer require cakephp/migrations:~1.0 rnrnrnBasically what migrations do is: they have the database table name and structure in your code. So from you code you can build your database tables.rnrnWith Cake Bake and Laravel Artisan you can do it the other way around. You can build your code (ie controller, views and models) (CRUD statements) with your database as reference.rnrnHope this helps a newbie!rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/140</link>
    <description>This is the best way I have found to test if jQuery works. A simple colour change. Place this in your header before the body tagsrnrnrn  script rn$(function(){rn $("button").mouseover(function(){rn var $p = $("#P44");rn $p.stop()rn  .css("background-color","yellow")rn  .hide(1500, function() {rn  $p.css("background-color","red")rn  .show(1500);rn  });rn });rn});rn /script rnrnplace this in the body tags:rnrn button Test /button rnrn p id= P44  class= test  rn Testing...rn /p rnrn rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/70</link>
    <description>In your controller use this to go back to the previous page:rnrn$this- redirect($this- referer());rnor use the referer s parameters like this:rn$this- redirect($this- referer(array( action = index ), true));rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/71</link>
    <description>This probably works like most thing once you done it once you ll realise it is extremely easy. Once you have set up Cakephp with Composer (see our little tutorial  How to install CakePHP 3 on Xampp  ) All you have to do is the following.rnrnBefore you start with Cakebake. Cakebake Bakes a database, so you will need a database schema, either you have to build the database yourself in PHPMyAdmin or download on.rnCrucially every table needs an PRIMARY KEY. So each one of my tables starts with an ID which is a PRIMARY KEY and also is set to AUTO_INCREMENTrnrnEXAMPLE:rnrnTABLE: USERSrnid, user_name, user_email.rnrnTABLE ORDERSrnid, users_id, order_namernrnSo that if you have dependencies between id s that they use the correct format for CakeBake to read.rnYour database is your MOST CRUCIAL STEP IN THIS WHOLE PROCESS. So make sure it is as close to perfect as you can get it spend proper time on this.rnrnNow, configure your CakePHP3 installation tell it which database to use. In the core.php file, update the HOST, USER, PASSWORD, DATABASErnrnSo for a local Xampp or Wamp installation it will be host (localhost or 127.0.0.1) user (root), password ( ), database ( yourdatabase )rnrnrn	In windows click start, type in cmd this will open the command prompt.rn	navigate using cd ../ or cd foldername to get to the following location in xampp C:/xampp/htdocs/app/binrn	To view all CakeBake commands type in cake bakern	To view all tables that can be baked type in cake bake allrn	To bake all models in one go type in cake bake model allrn	To bake all controllers in one go cake bake controller allrn	To bake all views  in cake bake type in cake bake template allrn	To bake a specific controller/view/model type in cake bake controller/view/model table namernrnrn rnrnPlease feel free to email me or comment if you have any questionsrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/72</link>
    <description>We aim to keep our videos short and to the point. Here is a list of quick How to do it videos that might answer some questions.rnrnrnView it on Fullscreen</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/76</link>
    <description>Step1: Create Folder Modules inside app/ rnStep2: In Modules folder create your Module (Module1( suppose admin Module))rn Inside admin module : create the following folder rnrn 1. Controllers (here will your controller files)rn 2. Views (here will your View files)rn 3. Models (here will your Model files)rn 4. routes.php (here will your route code in this file)rnrnSimilarly, You can create another modulernrnModule2( suppose API )rn-Controllersrn-Viewsrn-Modelsrn-routes.phprnSimilarly, you can create multiple modulesrnrnStep3 : Create ModuleServiceProvider.php inside app/Providers/ FolderrnrnStep4 : Paste following code inside ModuleServiceProvider.phprnrnrnnamespace App\Providers;rnrnuse Illuminate\Support\ServiceProvider;rnrnclass ModuleServiceProvider extends ServiceProviderrn{rn /**rn * Will make sure that the required modules have been fully loadedrn * @return voidrn */rn public function boot()rn {rn // For each of the registered modules, include their routes and Viewsrn $modules = config("module.modules");rnrn while (list(,$module) = each($modules)) {rn  rn  // Load the routes for each of the modulesrn  if(file_exists(base_path('app/Modules/'.$module.'/routes.php'))) {rn  include base_path('app/Modules/'.$module.'/routes.php');rn  }rnrn  // Load the views       rn  if(is_dir(base_path('app/Modules/'.$module.'/Views'))) {rn  $this- loadViewsFrom(base_path('app/Modules/'.$module.'/Views'), $module);rn  }rn }rn }rnrn public function register() {}rn}rnrnrnStep5 : Add following line inside config/app.php filernrnApp\Providers\ModuleServiceProvider::class,rnrnStep6 : Create module.php file inside config folderrnrnStep7 : Add following code inside module.php (path =  config/module.php )rnrnrnreturn [rnrn modules = [rnrn  User ,rn  Theme , rn ],rnrn];rnrnrn rnrnNote : You can add your module name whichever you have created. Here there are modules.rnrnStep8 : Run this commandrncomposer dump-autoload - for updatingrnrnWe will add more information here so stay tuned...rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/75</link>
    <description>Expanding your marketing capabilities, target a very specific audience by combining LinkedIn contacts and Skillbooker contact sorting - a bit of working importing and exporting but if you have thousands of contacts in LinkedIn - it could make your life so much easierrnrnrnrnrn	Sign into LinkedInrn	In LinkedIn click on My Network -  Connections rn	Click on the little gear cock to the right, which will bring you to https://www.linkedin.com/connected/manage_sources rn	Click on Export LinkedIn Connections rn	Select Microsoft Outlook.CSV - download the file to your local computer.rn	Sign into Skillbooker.comrn	Click on Contacts -  Import contacts rn	Import your downloaded file.rn	Now you can sort your LinkedIn Connections by sorting them into different categoriesrn	Go to Contacts -  Contact Categories rn	Create a categoryrn	Click on Add Contact next to the category createdrn	In the search box search for the job title you want to filter inrn	Click the radio boxes for the ones you like to include or the all radio boxrn	Click submit rn	Now your connections are sorted into categories and are ready to use in your email program to target a specific audiencern	The next step would be to export to CSV and import into an email program like MailChimprnrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/77</link>
    <description>Let s compare the Employee and the ContractorrnrnIf you are a permanent employee you are paid 40,000 or so a year. Taking into account the employers NI that is being paid by the employer, the gross earnings are 44,785. This is the gross earnings for the worker before tax.rnrnOnce the 4,474 NI tax is paid by the employer further taxes of 10,933 are paid in PAYE and employees NI, leaving the worker 29,067.rnrnA contractor receives 36,372 on the same payment.rnrnThe Contractor takes home  7,305 more than the employeernrnHere s how it works for the contractor:rnrnThe contractor charges 44,474 for their services and takes the necessary steps to ensure they are outside IR35. The cost to the company is the same.rnrnTaxrnrnThe contractor pays themselves a small salary of 6,000 per year which incurs employers NI ( 122), employees NI ( 105), and PAYE ( 97). The rest is company profit which is subject to corporation tax ( 7287). This all leaves a distributable company profit of 31,065 which is declared as a dividend and will be subject to a further tax on dividends ( 491).rnrnThe contractors net income after taxes is 36,372, which is 82% of their earnings. This means they need a 22% return on their money if invested to get back to where they started before the government took their cut.rnrnSuffice it to say, being a contractor and working via a limited company has significant tax advantages. And that s not all hellip;rnrnbeing a contractor and working via a limited company has significant tax advantagesrnrnExpensesrnrnEveryone who works incurs expenses. You have to eat lunch. You have to take the Tube, whatever.rnrnThese expenses are wholly and exclusively due to the nature of your work, to cite the definition the Revenue givesrnrnWhen the permanent employee eats lunch, it comes out of his or her own pocket. Not so the contractor.rnrnThe contractor pays for their lunch out of pre-tax expenses. This makes a considerable difference.rnrnFor example, lets assume a cost of 100 per week in expenses. This costs the permanent employee the full 100 from their net income. However, the contractor can claim these expenses resulting in only a 61 drop in their net income.rnrnAnd the contractor can claim expenses for all of their work-related equipment, things like laptops, mobile phones, office equipment, broadband connections and so on.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/78</link>
    <description>Here is our top laravel tutorials from beginners to expert. It consist of 25 videos at the end of the 25 videos if you are registered with Skillbooker.com please email us and we will send you a link to test your knowledge of Laravel. This will appear on your ONLINE CV / RESUME. So let s start here is the first video.rnrnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/103</link>
    <description>Installation of Laravel 5.3 is a breeze. IF you know how and you can do it in 5 minutes if you local development enviroment is set up.rnrnrn	Set up your local develpment enviroment like Xampprn	Go to Github and search for Laravel 5.3 - download it, unzip it and paste the code in your local domain where you want the site to be run.rn	If you set up a local domain ( HERE is HOW ) make sure it points to the public folder.rn	Rename the file .env.example to .env and change the values basically the main one is the database connection - I find this does not work well in notepad so try another ide I use a free IDE (PSPAD). I will past my .env contents below.rn	Download Git Bash (https://github.com/msysgit/msysgit/releases/) or use any other command line interface you like.rn	With Git bash installed you can right click with in the folder where your app folder and files of your site resides. Then select Git Bash Here - this means you will automatically install things in the right location and you don t have to change directory ( /cd) as with other commandline interfaces.rnrnrnNo is the easy part.rnrnrn	Copy . php artisan make:auth right click on Git Bash or commandline and paste run it.rn	(this will automatically install the controllers, views and models to handel all login, registration and email verification services)rn	Copy . php artisan migrate right click on Git Bash or commandline and paste run it.rn	(This will install all the databases tables you need, your database connection in the .env file is crucial here) rn	Now if you like you can install a debugger to help you in development (https://laravel-news.com/2015/02/laravel-debugbar/ )rn	You have to run: composer require barryvdh/laravel-debugbar in your command linernrnrnHappy days ! And that all for now folks, if it does not work for some reason or I missed somethings else please leave a comment below and I will adjust the instructions.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/79</link>
    <description>Here is some instruction how to setup a spesific domain name on Xampp using a Windows 7 machine. Routes might change contact us if you stuggle.rnrnFirst make sure you have downloaded and installed XampprnrnTake Notepad or your favourite IDE and go to C:/xampp/apache/conf/extra/httpd-vhosts.confrnOpen this file and at the bottom of this file paste:rnrn VirtualHost *:80 rn ServerAdmin my-new-domainrn DocumentRoot  C:/xampp/htdocs/my-new-domain rn ServerName my-new-domainrn ErrorLog  logs/dummy-host2.example.com-error.log rn CustomLog  logs/dummy-host2.example.com-access.log  commonrn /VirtualHost rnrnNow in your start button, right click right on Notepad, select run as administrator , in Notepad go File- Open navigate to C:/Windows/System32/drivers/etc/hosts open up hostsrnrnCopy the line rn127.0.0.1  localhostrnrnpaste and change to rnrn127.0.0.1  my-new-domainrnrn(add as many as you like or have defined in your apache vhost file)rnrnRestart Apache rnrnVoila ! Happy daysrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/116</link>
    <description>Laravel gives you the option to have default values on drop down boxes. When doing form elements in Laravel you can use normal HTML or the Form helper which generates the HTML. With a multi select drop down list. You can use the jquery select2 or Selectator which can make pretty up your normal multi select drop down into selectable and unselectable little buttons.rnrnIn Laravel, the Form helper does not support default values for this. Here you have two options you can either use Javascript to do this for you as described in this youtube tutorial or you can do it in PHP in the controller then display it in the view.rnrnHere we are going to explain to you PHP way to do it.rnFirstly let s say you want to add tags from a multi select drop down list to a post.rnrnSo you have three tables, the post table, the tag table and the post_tag many to many table.rnrnSo in the post controller in the edit function I will place the following code:rnrnrn$post = Posts::where('slug',$slug)- first();rn// get the post valuesrnrnrn		$poststags = PostsTag::all()- where('posts_id', '=', $post- id);rn		$poststags = $poststags- toArray();rnrn// get the selected tags from the many to many post_tablernrn		$selectedtags = array();rn		foreach($poststags as $key = $value){rn			$selectedtags[$key] = $value['tag_id'];rn		}rnrn// take the array which you get from the toArray(); function and manipulate it even morern		rn		$tags = Tag::all();rn		$tags2 = array();rn		foreach($tags as $tag){rn			if (in_array($tag- id, $selectedtags)) {rn			 $tags2[$tag- id] =' option value="'.$tag- id.'" selected="selected" '.$tag- name.' /option ';rn			 } else {rn			 $tags2[$tag- id] =' option value="'.$tag- id.'" '.$tag- name.' /option ';	rn			 }	rn		}rnrn// loop through the array and insert the html with the selected=selected for the once which was inserted previouslyrnrn select multiple size="6" class="form-control select2-multi" name="tags[]" rn  @foreach($tags as $ktag = $vtag)rn {!! $vtag !!}rn  @endforeachrn /select rnrn// display it in the viewrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/123</link>
    <description>Here is how you install cakephp 3 on xampp or wamp without composerrnrnrn	First download the latest version cakephp 3 file zip from here rn	Second Unzip this file into example  (xampp/htdocs/NewCakeProject) rn	Thirdly create your database into mysql locate to the localhost/phpmyadmin and create a new database with name like (ex - NewCakeProject)rn	Then go to local disk c:/xampp/htdocs/NewCakeProject/config/app.phprn	Edit your username password and dbnamernrnrnex - username =  root , //username is always root for localhostrn  password = ,  //password is always blank for localhostrn  database =  NewCakeProject ,rnrnThis might be online 228rnrnOpen your broswer and navigate to localhost/NewCakeProject to view the Cakephp default pagernrn rnrnNOTE: it is better to use composer as it will give you the option to add dependencies later when you need them.rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/164</link>
    <description>In the appController in Cakephp 3 you can do the following:rnrnrn $site = $this- Sitesettings- get('1');rn rn $sitename = $site- site;rn $this- set('sitedefaultname', $sitedefaultname);rn rn $sitedescription = $site- description;rn $this- set('sitedefaultdescription', $sitedefaultdescription);rn rn $sitekeywords = $site- keywords;rn $this- set('sitedefaultkeywords', $sitedefaultkeywords);rn rn $sitedefaultcountryid = $site- country_id;rn $this- set('sitedefaultcountryid', $sitedefaultcountryid);rn rn $sitedefaultstateid = $site- state_id;rn $this- set('sitedefaultstateid', $sitedefaultstateid);rnrnTHENrnrnIn the controller you want to use:rnrnrn  public function index()rn {rn $sitedefaultcountryid = $this- viewVars['sitedefaultcountryid'];rn $states = $this- paginate($this- States, ['conditions' = ['States.country_id' = $sitedefaultcountryid]]);rnrn $this- set(compact('states'));rn $this- set('_serialize', ['states']);rn }rnrnAlso you can use it an a view by just using the variable like $sitedefaultcountryid;rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/171</link>
    <description>SKILLBOOKER Standard Terms of Business for the Introduction of Permanent Positionsrnrn(TO BE DIRECTLY EMPLOYED BY THE CLIENT)rnrn1.DEFINITIONSrnIn these Terms of Business the following definitions apply:rnrn Applicant means the person introduced by the Agency to the Client for an Engagement including any officer or employee of the Applicant if the Applicant is a limited company, or a member of the Agency s own staff;rnrn Client means the person; firm or corporate body together with any subsidiary or associated Company as defined by the Companies Act 1985 to which the Applicant is introduced;rnrn Agency means Skillbooker Ltdrnrn Engagement means the engagement, employment or use of the Applicant by the Client or any third party onrna permanent or temporary basis, whether under a contract of service or for services; under an agency, licence, franchise or partnership agreement; or any other engagement; directly or through a limited company of which the Applicant is an officer or employeernrn Introduction means (i) the Client s interview of an Applicant in person or by telephone, following the Client s instruction to the Agency to search for an Applicant; or (ii) the passing to the Client of a curriculum vit aelig; or information which identifies the Applicant; and which leads to an Engagement of that Applicant;rnrn Remuneration includes base salary or fees, guaranteed and/or anticipated bonus and commission earnings, allowances, inducement payments, the benefit of a company car and all other payments and taxable (and, where applicable, non-taxable) emoluments payable to or receivable by the Applicant for services rendered to or on behalf of the Client. Where the Client provides a company car, a notional amount of 5,000 will be added to the salary in order to calculate the Agency s fee.rnrnrn2. THE CONTRACTrn2.1 These Terms constitute the contract between the Agency and the Client and are deemed to be accepted by the Client by virtue of an Introduction to, or the Engagement of an Applicant or the passing of any information about the Applicant to any third party following an Introduction.rnrn2.2 These terms contain the entire agreement between the parties and unless otherwise agreed in writing by a director of the Agency, these Terms of Business prevail over any other terms of business or purchase conditions put forward by the Client.rnrn2.3 No variation or alteration to these Terms shall be valid unless the details of such variation are agreed between the Agency and the Client and are set out in writing and a copy of the varied terms is given to the Client stating the date on or after which such varied terms shall apply.rnrn3. NOTIFICATION AND FEESrn3.1 The Client agrees:rna) To notify the Agency immediately of any offer of an Engagement which it makes to the Applicant;rnb) To notify the Agency immediately that its offer of an Engagement to the Applicant has been accepted and to provide details of the Remuneration to the Agency; andrnc) To pay the Agency s fees within 30 days from the date of invoice.rn3.2 Except in the circumstances set out in clause 5.1, no fee is incurred by the Client until the Applicant commences the Engagement when the Agency will render an invoice to the Client for its fees.rnrn3.3 The Agency reserves the right to charge interest on invoiced amounts unpaid by the due date in accordance with The Late Payment of Commercial Debt (interest) ACT 1998 .rnrn3.4 The fee payable to the Agency by the Client for an Introduction resulting in an Engagement is 10% of the first year s remuneration. VAT will be charged on the fee if applicable.rnrn3.5 In the event that the Engagement is for a fixed term of less than 12 months, the fee in clause 3.4 will apply pro-rata. If the Engagement is extended beyond the initial fixed term or if the Client re-engages the Applicant within 6 calendar months from the date of termination of the first Engagement the Client shall be liable to pay a further fee based on the additional Remuneration applicable for the period of Engagement following the initial fixed term up to the termination of the second Engagement or the first anniversary of its commencement, whichever is the sooner.rnrn3.6 If the Client subsequently engages or re-engages the Applicant within the period of 6 calendar months from the date of termination of the Engagement or withdrawal of the offer, a full fee calculated in accordance with clause 3.4 above becomes payable.rnrn4. DISCOUNT GUARANTEErnIn order to qualify for the Discount Guarantee;-rnrnThe Client must pay the Agency s fee within the credit terms of the invoice.rnThe Engagement is terminated by the Applicant or by the Applicant s death or by the Client within 12 weeks from the date of EngagementrnThe Client must notify the Agency in writing of the termination of the Engagement within 7 days of its termination and, if applicable, supply a copy of the Applicant s letter of termination.rnNeither the Client nor any subsidiary nor associated company nor person shall engage the Applicant within 12 months of the termination of the EngagementrnThe termination is not due to redundancy and the Client does not owe any other overdue sums to the AgencyrnProvided there is qualification to the Discount Guarantee then:-rnrnThe Discount Guarantee Details:-rnrnThe Agency guarantees to discount a proportion of the next invoice as followsrnTermination 0 to 4 weeks from date of Engagement = 100% less a 50 administration charge.rnTermination 5 to 8 weeks from date of Engagement = 50%rnTermination 9 to 12 weeks from date of Engagement = 25%rnthereafter - no discountrnrnThis Discount Guarantee is applicable only to full permanent placements and not to fixed term appointments. The Discount Guarantee is only given where the Agency has replaced the terminated Applicant and charged at the Standard Fee rate. The Agency will only apply the discount to the next invoice for the replacement Applicant.rnrnrn5. CANCELLATION FEErn5.1 If, after an offer of Engagement has been made to the Applicant, the Client decides for any reason to withdraw it, the Client shall be liable to pay the Agency a minimum fee of 3,000.rnrn6. INTRODUCTIONSrn6.1 Introductions of Applicants are confidential. The disclosure by the Client to a third party of any details regarding an Applicant introduced by the Agency which results in an Engagement with that third party within 12 months of the Introduction renders the Client liable to payment of the Agency s fee as set out in clause 3.4 with no entitlement to any refund.rnrn6.2 An introduction fee calculated in accordance with clause 3.4 will be charged in relation to any Applicant engaged as a consequence of or resulting from an introduction by or through the Agency, whether direct or indirect, within 6 months from the date of the Agency s Introduction.rnrn6.3 Where the amount of the actual Remuneration is not known the Agency will charge a fee calculated in accordance with clause 3.4 on the minimum level of remuneration applicable for the position in which the Applicant has been engaged with regard to any information supplied to the Agency by the Client and/or comparable positions in the market generally for such positions.rnrn6.4 In the event that any employee of the Agency with whom the Client has had personal dealings accepts an Engagement with the Client within 6 months of leaving the Agency s employment, the Client shall be liable to pay an introduction fee to the Agency in accordance with clause 3.4.rnrn7. APPLICANT SUITABILITY AND REFERENCESrn7.1 The Agency confirms that it undertakes rigorous checks on all Applicants to Home Office standards on the eligibility to work in the UK prior to an Applicant accepting an offer of Engagement. Where practical references are requested from previous employers. Where an Engagement requires specific skills, experience, authorisation required by law or any professional body, the Agency undertakes to take all reasonable steps to ensure an Applicant is so qualified.rnrn7.2 At the same time as proposing an Applicant to the Client the Agency shall inform the Client of such matters in clause 7.1 as they have obtained confirmation of. Where such information is not given in paper form or by electronic means it shall be confirmed by such means by the end of the third business day (excluding Saturday, Sunday and any public or Bank holiday) following, save where the Applicant is being proposed for a position which is the same as one in which the Applicant has worked within the previous five business days and such information has already been given to the Client.rnrn7.3 The Agency endeavours to take all such steps as are reasonably practicable to ensure that the Client and Applicant are aware of any requirements imposed by law or any professional body to enable the Applicant to work in the position which the Client seeks to fill.rnrn7.4 The Agency endeavours to take all such steps as are reasonably practicable to ensure that it would not be detrimental to the interests of either the Client or the Applicant for the Applicant to work in the position which the Client seeks to fill.rnrn7.5 Notwithstanding clauses 7.1, 7.2, 7.3 and 7.4 above the Client shall satisfy itself as to the suitability of the Applicant and the Client shall take up any references provided by the Applicant to it or the Agency before engaging such Applicant. The Client is responsible for obtaining work permits and/or such other permission to work as may be required, for the arrangement of medical examinations and/or investigations into the medical history of any Applicant, and satisfying any medical and other requirements, qualifications or permission required by law of the country in which the Applicant is engaged to work.rnrn7.6 To enable the Agency to comply with its obligations under clauses 7.1, 7.2, 7.3 and 7.4 above, the Client undertakes to provide to the Agency details of the position which the Client seeks to fill, including the type of work that the Applicant would be required to do; the location and hours of work; the experience, training, qualifications and any authorisation which the Client considers necessary or which are required by law or any professional body for the Applicant to possess in order to work in the position; and any risks to health or safety known to the Client and what steps the Client has taken to prevent or control such risks. In addition the Client shall provide details of the date the Client requires the Applicant to commence, the duration or likely duration of the work; the minimum rate of remuneration, expenses and any other benefits that would be offered; the intervals of payment of remuneration and the length of notice that the Applicant would be entitled to give and receive to terminate the employment with the Client.rnrn8. SPECIAL SITUATIONSrn8.1 Where the Applicant is required by law, or any professional body to have any qualifications or authorisations to work in the position which the Client seeks to fill; or the work involves caring for or attending one or more persons under the age of eighteen, or any person who by reason of age, infirmity or who is otherwise in need of care or attention, the Agency will take all reasonably practicable steps to obtain and offer to provide copies of any relevant qualifications or authorisations of the Applicant, two references from persons not related to the Applicant who have agreed that the references they provide may be disclosed to the Client and has taken all reasonably practicable steps to confirm that the Applicant is suitable for the position. If the Agency is unable to do any of the above it shall inform the Client of the steps it has taken to obtain this information in any event.rnrn9. LIABILITYrn9.1 The Agency shall not be liable under any circumstances for any loss, expense, damage, delay, costs or compensation (whether direct, indirect or consequential) which may be suffered or incurred by the Client arising from or in any way connected with the Agency seeking an Applicant for the Client or from the Introduction to or Engagement of any Applicant by the Client or from the failure of the Agency to introduce any Applicant. For the avoidance of doubt, the Agency does not exclude liability for death or personal injury arising from its own negligence.rnrn10. LAWrn10.1 These Terms are governed by the law of England  Wales and are subject to the exclusive jurisdiction of the Courts of England  Walesrnrn rnrnSigned on behalf of the Client: _____________________________________________rnrnrnPrint Name: ____________________________________________________________rnrnrnDate: _________________________________________________________________rnrn rnrnSigned on behalf of the Agency: ____________________________________________rnrnrnPrint Name: ____________________________________________________________rnrnrnDate: _________________________________________________________________rn rnrn: _________________________________________________________________rnrn rnrnThis contracts is provided by Skillbooker LTDrnrnrnCopyright (c) 2016 SKILLBOOKER LTD.rnAll rights reserved.rnrnRedistribution and use in source and binary forms are permittedrnprovided that the above copyright notice and this paragraph arernduplicated in all such forms and that any documentation,rnadvertising materials, and other materials related to suchrndistribution and use acknowledge that the software was developedrnby the organization . The name of thern organization may not be used to endorse or promote products derivedrnfrom this software without specific prior written permission.rnTHIS SOFTWARE IS PROVIDED ``AS IS  AND WITHOUT ANY EXPRESS ORrnIMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIEDrnWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/172</link>
    <description>This graph will basically show recruiters the process for checking candidates applications for positions:rnrnPre-employment checksrnrnrn	Academic referencesrn	Non-academic referencesrn	Right to workrn	Satisfactory health assessmentrn	Proof of identityrn	Gaps in employmentrn	Right to returnrn	DBS checksrn	Additional checksrn	Proof of QualificationsrnrnrnPre-employment stagesrnrnrn	Applicationrn	Shortlistingrn	Interviewrn	Verbal offerrn	Conditional offerrn	1st day - two monthsrnrnrn rnrnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/173</link>
    <description>Here is a quick Tutorial for an Image Component for Cakephp 3 ( we have one for 2 - email us if you need it).rnrnFirstly in the view you have to have these two bits:rnrnrn ?= $this- Form- create($user, ['enctype' = 'multipart/form-data']) ? rnrnThis is to create the form with the multipart enctypernalso your rnrnrnÂ  Â  echo $this- Form- input('avatar', ['class'= 'form-control', 'label' = 'Profile Avatar', 'type' = 'file']);rnrnIn your usercontroller - or what ever controller you use..rnrnWe are going to say, if the image gets posted then take it and engage the image component.rnrnLike so:rnrnrn  if (!empty($this- request- data['avatar']['name'])) {rn  rn  $this- loadComponent('Image');rn  $location = WWW_ROOT . '/img/avatars/';rn  $image = $this- Image- uploadimage($location, $this- request- data['avatar']); rn rn   if(!empty($image)){rn  rn   $this- Image- load($location.$image);rn   $this- Image- resizeToWidth(140);rn   $this- Image- save($location.$image);rn   $user- avatar = $image;rn   rn   } else {rn   $this- Flash- error(__('Avatar has te be jpg, jpeg, gif or png'));rn   return $this- redirect(['action' = 'index']);rn   }rn rn  } rnrnAll that you have to do now is to load the ImageComponent in the Controllers/Component folder.. HERE is the code.rnrnrn ?phprnrnnamespace App\Controller\Component;rnrnuse Cake\Controller\Component;rnrnclass ImageComponent extends Componentrn{rn  rn  var $image;rn  var $image_type;rn  var $location;rn rn  function load($filename) {rn  $image_info = getimagesize($filename);rn  $this- image_type = $image_info[2];rn  if( $this- image_type == IMAGETYPE_JPEG ) {rn  $this- image = imagecreatefromjpeg($filename);rn  } elseif( $this- image_type == IMAGETYPE_GIF ) {rn  $this- image = imagecreatefromgif($filename);rn  } elseif( $this- image_type == IMAGETYPE_PNG ) {rn  $this- image = imagecreatefrompng($filename);rn  }rn  }rn  rnrn  rn  function save($filename, $image_type=IMAGETYPE_JPEG, $compression=75, $permissions=null) {rn  if( $image_type == IMAGETYPE_JPEG ) {rn  imagejpeg($this- image,$filename,$compression);rn  } elseif( $image_type == IMAGETYPE_GIF ) { rn  rn  imagegif($this- image,$filename);  rn  } elseif( $image_type == IMAGETYPE_PNG ) {rn  imagepng($this- image,$filename);rn  }  rn  if( $permissions != null) {rn  chmod($filename,$permissions);rn  }rn  }rn  rn  function output($image_type=IMAGETYPE_JPEG) {rn  if( $image_type == IMAGETYPE_JPEG ) {rn  imagejpeg($this- image);rn  } elseif( $image_type == IMAGETYPE_GIF ) {rn  imagegif($this- image);  rn  } elseif( $image_type == IMAGETYPE_PNG ) {rn  imagepng($this- image);rn  }  rn  }rn  function getWidth() {rn  return imagesx($this- image);rn  }rn  function getHeight() {rn  return imagesy($this- image);rn  }rn  function resizeToHeight($height) {rn  $ratio = $height / $this- getHeight();rn  $width = $this- getWidth() * $ratio;rn  $this- resize($width,$height);rn  }rn  function resizeToWidth($width) {rn  $ratio = $width / $this- getWidth();rn  $height = $this- getheight() * $ratio;rn  $this- resize($width,$height);rn  }rn  function scale($scale) {rn  $width = $this- getWidth() * $scale/100;rn  $height = $this- getheight() * $scale/100; rn  $this- resize($width,$height);rn  }rn  function resize($width,$height) {rn  $new_image = imagecreatetruecolor($width, $height);rn  $color = imagecolorallocatealpha($new_image, 255, 255, 255, 127);rn  imagefill($new_image, 0, 0, $color);rn  imagesavealpha($new_image, TRUE);rn  imagecopyresampled($new_image, $this- image, 0, 0, 0, 0, $width, $height, $this- getWidth(), $this- getHeight());rn  $this- image = $new_image;  rn  }rn  rn//// own stuff added 14/06/2010rn  rn function getType($filetype) {rn  if( $filetype == 'image/jpg' ) {rn  $ext = 'jpg';rn  } elseif( $filetype == 'image/jpeg' ) {rn  $ext = 'jpg';rn  } elseif( $filetype == 'image/gif' ) {rn  $ext = 'gif';rn  } elseif( $filetype == 'image/png' ) {rn  $ext = 'png';rn  }rn  return $ext;rn  }rn  rn  rn  function randomise(){rn  rn 	// Get a random set of 3 chars which we will append to the filename to prevent duplicate file names.rn	$keychars = "abcdefghijklmnopqrstuvwxyz0123456789";rn	$length = 3;rn	$randkey = "";rn	for ($i=0;$i $length;$i++) $randkey .= substr($keychars, rand(1, strlen($keychars) ), 1); rnrn	// Set the name of the file (current time + the random value + . + the file extension)rn	$filename = time().$randkey;rn	rn	return $filename;rn rn //another way $filename = time() . "_" . rand(000000, 999999);rn rn  }rnrn  rn  function uploadimage($location, $upload) {rn rn	  $ext = $this- getType($upload['type']);rn	  $newfilename = $this- randomise();rnrn			if($ext ""){rnrn $file = $newfilename.".".$ext;rn				$uploadfile = $location.$file;rn  rn 				if (move_uploaded_file($upload["tmp_name"], $uploadfile)){rn 				 return $file;rn 				}				rn		 }				rn	  rn }  rn}rn? rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/195</link>
    <description>rn rnrnFor the first time user especially trying to setup and configure and amazon instance is daunting and can be quite confusing as rnthere are no clear step by step instructions to tell you how to. Amazon does cover a lot but not all. Once the Amazon Instance is configured we are going to configure Cakephp 3 aswell. Developed on a local xampp server. Questions are welcomernrnThe first time I did this Ubuntu on Amazon used PHP5 the second time I did this it was upgraded to PHP7 I have inserted the settings for PHP7 which is slighly different.rnrnSo here is our step by step instructions tailored for the absolute beginning.rnrnrn	Create and Amazon account, rn	Click on Launch instance select the type of instance you like, we select Ubunturn	Once you have launched you instance, alter the security, the make the outbound available to all and also the INBOUNDrn	While launching the instance it will ask you to download the file with extention .pemrn	Download and install download WINSCP which come bundled with Putty or just download putty on it s ownrn	Use Putty KeyGen and generate a private key to use when loggin into your instance - for testing I did not use the generate option in the key gen but simply imported the PEM file and saved in to the PPK equivalent in keygenrn	If you are not familiar with Putty, read a tutorial how to use it, once you have done it once it is easy. You need to use the private file you generated as a password to SSH you Amazon instance - techno speak for access you Amazon Cloud server.rn	sudo apt-get updatern	sudo apt-get dist-upgradern	sudo apt-get install apache2rn	sudo nano /etc/apache2/apache2.confrn	change var/www to AllowOverride All rn	change user/var to AllowOverride All rn	CTRL + X savern	sudo a2enmod rewritern	sudo apt-get install libapache2-mod-php5rn	sudo service apache2 restartrn	View you in browser on your ip addressrn	Create a .htaccess file that point to index.php with phpinfo() in it. - for testingrn	sudo apt-get install mysql-server l - remember your passwordrn	sudo apt-get install php5-mysq FOR PHP7 (php -v) you need sudo apt-get install php7.0-fpm php7.0-mysqlrn	sudo apt-get install phpmyadminrn	sudo nano /etc/apache2/apache2.confrn	Go back insert the following Include /etc/phpmyadmin/apache.conf (ctl + o = save)rn	Installing cakephp 3 extentions sudo apt-get install php5-intl FOR PHP sudo apt-get install php7.0-intlrn	Fpr Paypal you need Curl --- sudo apt-get install php-curlrn	sudo service apache2 restartrn	show extentions: php -mrn	sudo apt-get install php5-sqlite FOR PHP7 use sudo apt-get install php-sqlite3rn	sudo service apache2 restartrn	change permissions to tmp, logs and img folders recursivleyrn	If you stuggle with permissions in SSH make yourself root by sudo -irn	change file permissions like sudo chmod -R o+rw /var/wwwrnrn	In PHP7 version I get a sql_mode=only_full_group_by error: to fix it I did:rn	sudo nano /etc/mysql/my.cnfrn	edit at bottom of file: rn	rn[mysqld] rnsql_mode =  STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION rn	rnrnrn rnrnsudo service mysql restartrnrnhttps://help.ubuntu.com/community/phpMyAdminrnhttp://archive.gregk.me/2011/installing-pdo-sqlite3-support-on-ubuntu/rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/228</link>
    <description>This is a Rackspace class that has functions in to connect, upload, delete, show and list files and images on rackspace. It consist of the base class - with also have a class that extends the base class and deals with all the actions required. There might be functions in here that deal with updating the model and database of the application it comes from. Please note: this is for relative advanced developers.rnrnRackspace Base classrnrnrn ?phprnrnnamespace Rackspace\Component;rn// in a framework you will need to adjust the namespace herernrnclass Rackspacern{rn //Scoped Variablesrn const USERNAME = " "; // usernamern const KEY = " "; // api keyrn const CONTAINER = " "; // Pinpoint Containerrn const HANDSET_CACHE_CONTAINER = " ";rn const HANDSET_CACHE_DEV_CONTAINER = " ";rn const HANDSET_SECURE_URL = "https://... ....rackcdn.com/";rn const HANDSET_SECURE_DEV_URL = "https://... ....rackcdn.com/";rn const URL = "https://... ....rackcdn.com/";rn const SECURE_URL = "https://... ....rackcdn.com/";rnrnrn public static function determineHandsetContainer()rn {rn if (false === getenv('FORCE_DEV_CDN')) {rn  return Rackspace::CACHE_CONTAINER;rn }rnrn return Rackspace::CACHE_DEV_CONTAINER;rn }rnrn public static function determineHandsetURL()rn {rn if (false === getenv('FORCE_DEV_CDN')) {rn  return Rackspace::RACKSPACE_SECURE_URL;rn }rnrn return Rackspace::RACKSPACE_SECURE_DEV_URL;rn }rnrn public function listFiles()rn {rn $container = $this- connect();rn return $container- list_objects();rn }rnrn public function findFileByName($fileName)rn {rn $url = null;rnrn $files = $this- listFiles();rnrn if (is_array($files)) {rn  $pos = strpos(implode('|', $files), $fileName);rn  if ($pos  0) {rn  $url = self::URL . '/' . $fileName;rn  }rn }rnrn return $url;rn }rnrn public function uploadRawFileData($fileData, $filename)rn {rn $container = $this- connect();rnrn // upload file data to Rackspacern $object = $container- create_object($filename);rnrn //Prevent attempted md5 checksum of file datarn $object- set_etag(null);rnrn //Prevent attempt to determine mime type based on non-existent extensionrn $object- content_type = "image/png";rn $uploadToRackspace = $object- write($fileData, (float)strlen($fileData));rnrn return $uploadToRackspace;rn }rnrn /**rn * @return bool|stringrn */rn private function connect()rn {rn $auth = new \CF_Authentication(self::USERNAME, self::KEY);rn $auth- authenticate();rn $conn = new \CF_Connection($auth);rn return $conn- get_container(self::CONTAINER);rn }rnrn public function uploadFile($localFile, $filename)rn {rn $container = $this- connect();rnrn $object = $container- create_object($filename);rnrn if (!$object- content_type (string)is_file($localFile) function_exists("mime_content_type")) {rn  $object- content_type = @mime_content_type($filename);rnrn } else {rn  $extension = end(explode('.', $filename));rn  $object- content_type = $this- getMimeTypeFromExtension($extension) ;rnrn }rnrn $extension = end(explode('.', $filename));rn $this- allowExtension($extension);rnrn return $object- load_from_filename($localFile);rnrn }rnrn private function allowExtension($extension, $extentionlist=null)rn{rn $extentionlist = array("jpg", "jpeg", "jpe", "png");rn if ((in_array($extension, $extentionlist))) {rnrn } else {rn die ("File extention is not on our list.");rn }rn}rnrn private function getMimeTypeFromExtension($extension)rn {rn switch ($extension) {rn  case "js":rn  return "application/x-javascript";rnrn  case "json":rn  return "application/json";rnrn  case "jpg":rn  case "jpeg":rn  case "jpe":rn  return "image/jpg";rnrn  case "png":rn  case "gif":rn  case "bmp":rn  case "tiff":rn  return "image/" . $extension;rnrn  case "css":rn  return "text/css";rnrn  case "xml":rn  return "application/xml";rnrn  case "doc":rn  case "docx":rn  return "application/msword";rnrn  case "xls":rn  case "xlt":rn  case "xlm":rn  case "xld":rn  case "xla":rn  case "xlc":rn  case "xlw":rn  case "xll":rn  return "application/vnd.ms-excel";rnrn  case "ppt":rn  case "pps":rn  return "application/vnd.ms-powerpoint";rnrn  case "rtf":rn  return "application/rtf";rnrn  case "pdf":rn  return "application/pdf";rnrn  case "html":rn  case "htm":rn  case "php":rn  return "text/html";rnrn  case "txt":rn  return "text/plain";rnrn  case "mpeg":rn  case "mpg":rn  case "mpe":rn  return "video/mpeg";rnrn  case "mp3":rn  return "audio/mpeg3";rnrn  case "wav":rn  return "audio/wav";rnrn  case "aiff":rn  case "aif":rn  return "audio/aiff";rnrn  case "avi":rn  return "video/msvideo";rnrn  case "wmv":rn  return "video/x-ms-wmv";rnrn  case "mov":rn  return "video/quicktime";rnrn  case "zip":rn  return "application/zip";rnrn  case "tar":rn  return "application/x-tar";rnrn  case "swf":rn  return "application/x-shockwave-flash";rnrn  default:rn  if (function_exists("mime_content_type")) {rn   $extension = mime_content_type($extension);rn  }rnrn  return "unknown/" . trim($extension, ".");rn }rn }rnrnrn /**rn * @param $filenamern * @return bool|stringrn */rn public function deleteFile($filename)rn {rn $container = $this- connect();rnrn try {rn  $container- delete_object($filename);rn } catch (\Exception $e) {rn  return $e- getMessage();rn }rn return true;rn }rnrn}rnrnrnRackspace base class extended wrapperrnrnrn ?phprnrnnamespace Rackspace\Component;rn// in a framework you will need to adjust the namespace herernrnrnclass RackspaceFileHandler extends Rackspacern{rn protected $isLive;rn protected $fileSizeLimit;rn protected $fileImgMaxWidth;rn protected $fileImgMaxHeight;rn protected $exactSize;rnrn public function __construct(rn $isLive = true,rn $fileSizeLimit = 5,rn $fileImgMaxWidth = null,rn $fileImgMaxHeight = null,rn $exactSize = falsern ) {rn $this- isLive = $isLive;rn $this- fileSizeLimit = $fileSizeLimit;rn $this- fileImgMaxWidth = $fileImgMaxWidth;rn $this- fileImgMaxHeight = $fileImgMaxHeight;rn $this- exactSize = $exactSize;rn }rnrn public function uploadToRackspaceImage($fileKey, $fileDirectory, $filename, $fileIndex = null)rn {rn $cloudFileKey = $this- createCloudFileKey($fileKey, $fileDirectory, $filename, $fileIndex);rnrn if ($cloudFileKey !== null) {rn  $resultData = $this- uploadImageWithCloudKey($fileKey, $cloudFileKey, $fileIndex);rnrn  if ($resultData['success'] === true) {rn  $resultData['cloudFileKey'] = $cloudFileKey;rn  }rn  return $resultData;rn }rn }rnrnrn public function deleteFileFromRackspace($cloudFileKey)rn {rn if (!empty($cloudFileKey)) {rn  return $this- deleteFile($cloudFileKey);rn }rn $result['error'][] = "File could not be deleted.";rn }rnrn public function showFileFromRackspace($cloudFileKey)rn {rn if (!empty($cloudFileKey)) {rn  return $this- findFileByName($cloudFileKey);rn } else {rn  $result['error'][] = "Image could not be displayed.";rn }rn }rnrn protected function createCloudFileKey($fileKey, $fileDirectory, $filename, $fileIndex = null)rn {rn if (!is_null($fileIndex)) {rn  $tmpName = $_FILES[$fileKey]['tmp_name'][$fileIndex];rn  $fileType = $_FILES[$fileKey]['type'][$fileIndex];rn } else {rn  $tmpName = $_FILES[$fileKey]['tmp_name'];rn  $fileType = $_FILES[$fileKey]['type'];rn }rnrn if (empty($tmpName) === false) {rn  $fileMd5 = md5_file($tmpName);rn  $filename = preg_replace("/[^a-z0-9]/", '', strtolower($filename));rn  $fileExt = end(explode('/', $fileType));rn  return $fileDirectory . $fileMd5 . '_' . $filename . '.' . $fileExt;rn }rn return null;rn }rnrn protected function uploadImageWithCloudKey($fileKey, $cloudFileKey, $fileIndex = null)rn {rn $result = array('success' = false);rnrn if ($fileIndex !== null) {rn  $fileName = $_FILES[$fileKey]['name'][$fileIndex];rn  $fileTmpName = $_FILES[$fileKey]['tmp_name'][$fileIndex];rn  $fileType = $_FILES[$fileKey]['type'][$fileIndex];rn  $fileSize = $_FILES[$fileKey]['size'][$fileIndex];rn  $fileError = $_FILES[$fileKey]['error'][$fileIndex];rn } else {rn  $fileName = $_FILES[$fileKey]['name'];rn  $fileTmpName = $_FILES[$fileKey]['tmp_name'];rn  $fileType = $_FILES[$fileKey]['type'];rn  $fileSize = $_FILES[$fileKey]['size'];rn  $fileError = $_FILES[$fileKey]['error'];rn }rnrn if (empty($fileName)) {rn  return array('success' = false);rn }rnrn try {rn  if ($fileSize / 1024 / 1024  $this- fileSizeLimit) {rn  $result['error'][] = "Image size exceeds " . $this- fileSizeLimit . " MB";rn  }rnrn  if ($this- fileImgMaxWidth || $this- fileImgMaxHeight) {rn  $imageData = getimagesize($fileTmpName);rn  if (empty($imageData) === false) {rn   $imageWidth = $imageData[0];rn   $imageHeight = $imageData[1];rnrn   if (!$this- exactSize) {rn   if ($this- fileImgMaxWidth $imageWidth  $this- fileImgMaxWidth) {rn    $result['error'][] = "Image width exceeds max value of " . $this- fileImgMaxWidth . "px";rn   }rn   if ($this- fileImgMaxHeight $imageHeight  $this- fileImgMaxHeight) {rn    $result['error'][] = "Image height exceeds " . $this- fileImgMaxHeight . " px";rn   }rn   } else {rn   if ($this- fileImgMaxWidth $imageWidth !== $this- fileImgMaxWidth) {rn    $result['error'][] = "Image width must be " . $this- fileImgMaxWidth . "px";rn   }rn   if ($this- fileImgMaxHeight $imageHeight !== $this- fileImgMaxHeight) {rn    $result['error'][] = "Image height must be " . $this- fileImgMaxHeight . " px";rn   }rn   }rn  }rn  }rnrn  if ($fileError  0) {rn  switch ($fileError) {rn   case UPLOAD_ERR_INI_SIZE:rn   $message = "The uploaded file exceeds the upload_max_filesize directive in php.ini";rn   break;rn   case UPLOAD_ERR_FORM_SIZE:rn   $message = "The uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the HTML form";rn   break;rn   case UPLOAD_ERR_PARTIAL:rn   $message = "The uploaded file was only partially uploaded";rn   break;rn   case UPLOAD_ERR_NO_FILE:rn   $message = "No file was uploaded";rn   break;rn   case UPLOAD_ERR_NO_TMP_DIR:rn   $message = "Missing a temporary folder";rn   break;rn   case UPLOAD_ERR_CANT_WRITE:rn   $message = "Failed to write file to disk";rn   break;rn   case UPLOAD_ERR_EXTENSION:rn   $message = "File upload stopped by extension";rn   break;rnrn   default:rn   $message = "Unknown upload error";rn   break;rn  }rn  $result['error'][] = "Error(s) uploading file '$fileName': br $message br ";rn  }rnrn  if (count($result['error'])  0) {rn  return $result;rn  }rnrn  if ($this- isLive === true) {rn  $isUploaded = $this- uploadFile($fileTmpName, $cloudFileKey);rn  } else {rn  $isUploaded = $this- uploadToLocal($fileKey, $cloudFileKey);rn  }rnrn  if (!$isUploaded) {rn  $result['error'][] = "Error uploading image to cloud.";rn  } else {rn  $result['success'] = true;rn  }rn } catch (\Exception $e) {rn  $result['error'][] = "Error uploading file to cloud. See error log for details.";rn  error_log($e);rn }rnrn return $result;rn }rnrn protected function uploadToLocal($fileKey, $cloudFileKey)rn {rn $uploadDir = __DIR__ . '/../tests/uploads';rnrn if (!file_exists($uploadDir)) {rn  mkdir($uploadDir, 0755, true);rn }rnrn $fileDirectories = $uploadDir . '/' . dirname($cloudFileKey);rnrn if (file_exists($fileDirectories) === false) {rn  mkdir($fileDirectories, 0755, true);rn }rnrn $uploadFilePath = $uploadDir . '/' . $cloudFileKey;rnrn return move_uploaded_file($_FILES[$fileKey]["tmp_name"], $uploadFilePath);rn }rn}rnrnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/227</link>
    <description>Here is a simple annual yearly php calendar script. I got it from the internet ( www.gaijin.at/en/scrphpcalj.php ) , then I updated it into a function and removing the layout part from tables to bootstrap 3. You can use the function in your controller then you echo $calendar in your view. I display the code twice once as a simple calendar and the second time I get values from my events in my database then insert it into an array then if it is there I have a a href link that click through to the event.rnrn rnrnrnpublic function calendar()rn{ rnrn$month=date('n');rn$year=date('Y');rn$day=date('d');rn$months=array('January','February','March','April','May','June','July','August','September','October','November','December');rnrnrn$calendar = ' span align=center style="font-family:Verdana; font-size:18pt; color:#ff9900;" '.$year.' /span ';rn$calendar .= ' div class="row" ';rnrnfor ($line=1; $line =3; $line++) {rn	$calendar .= ' div class="col-md-12" div class="row" ';rn	for ($column=1; $column =4; $column++) {rn		$this_month=($line-1)*4+$column;rn		$first=date('w',mktime(0,0,0,$this_month,1,$year));rn		$total=date('t',mktime(0,0,0,$this_month,1,$year));rn		if ($first==0) $first=7;rn		$calendar .= ' div class="col-md-3" ';rn		$calendar .= ' table border=0 align=center style="font-size:8pt; font-family:Verdana" ';rn		$calendar .= ' th colspan=7 align=center style="font-size:12pt; font-family:Arial; color:#666699;" '.$months[$this_month-1].' /th ';rn		$calendar .= ' tr td style="color:#666666" b Mon /b /td td style="color:#666666" b Tue /b /td ';rn		$calendar .= ' td style="color:#666666" b Wed /b /td td style="color:#666666" b Thu /b /td ';rn		$calendar .= ' td style="color:#666666" b Fri /b /td td style="color:#0000cc" b Sat /b /td ';rn		$calendar .= ' td style="color:#cc0000" b Sun /b /td /tr ';rn		$calendar .= ' tr br ';rn		$i=1;rn		while ($i $first) {rn			$calendar .= ' td  /td ';rn			$i++;rn		}rn		$i=1;rn		while ($i =$total) {rn			$rest=($i+$first-1)%7;rn			if (($i==$day) ($this_month==$month)) {rn				$calendar .= ' td style="font-size:8pt; font-family:Verdana; background:#ff0000;" align=center ';rn			} else {rn				$calendar .= ' td style="font-size:8pt; font-family:Verdana" align=center ';rn			}rn	if (($i==$day) ($this_month==$month)) {  rn rn  	$calendar .= ' span style="color:#ffffff;" '.$i.' /span ';rnrn			}	else if ($rest==6) {rnrn				$calendar .= ' span style="color:#0000cc" '.$i.' /span ';rn  rn  } else if ($rest==0) {rn  rn  $calendar .= ' span style="color:#cc0000" '.$i.' /span ';rn  rn  } else {rn				$calendar .= $i;rn			}rn  rn			$calendar .= " /td \n";rn			if ($rest==0) $calendar .= " /tr \n tr \n";rn			$i++;rn		}rn		$calendar .= ' /tr ';rn		$calendar .= ' /table ';rn		$calendar .= ' /div ';rn	}rn	$calendar .= ' /div /div ';rn}rnrn$calendar .= ' /div ';rn$this- set('calendar' , $calendar );rn$this- set('calevents' , $calevents );rnrn}rnrn rnrnThe second part is where I am queried each day to see if there is an event for that day. I am sure there are much better ways to do this but I had a time constraint so did what I could in a short time.rnrn rnrnrn public function calenar()rn {rn rn if(is_null($this- Auth- user('id'))){rn $this- Flash- success(__('Please login to access this page.'));rn return $this- redirect(['controller' = 'users', 'action' = 'login']);rn } rn rn  rn  $this- loadModel('Posts');rn  $events = $this- Posts- find('all', [rn  'fields' = ['Posts.slug', 'Posts.startdate', ],rn  'conditions' = ['`Posts`.`contenttype_id` = 14 AND Posts.status_id = 1']   rn ]);rnrn $calevents = array();rn foreach($events as $event){rn  $startdate = $event- startdate;rn  $newdate = $startdate- year.'-'.$startdate- month.'-'.$startdate- day;rn  $calevents[$newdate] = $newdate;rn }rn rn rn //return debug($calevents);rnrn$month=date('n');rn$year=date('Y');rn$day=date('d');rn$months=array('January','February','March','April','May','June','July','August','September','October','November','December');rnrnrn$calendar = ' span align=center style="font-family:Verdana; font-size:18pt; color:#ff9900;" '.$year.' /span ';rn$calendar .= ' BR span style="color:#0000cc;" Events are Blue /span BR ';rn$calendar .= ' div class="row" ';rnrnfor ($line=1; $line =3; $line++) {rn	$calendar .= ' div class="col-md-12" div class="row" ';rn	for ($column=1; $column =4; $column++) {rn		$this_month=($line-1)*4+$column;rn		$first=date('w',mktime(0,0,0,$this_month,1,$year));rn		$total=date('t',mktime(0,0,0,$this_month,1,$year));rn		if ($first==0) $first=7;rn		$calendar .= ' div class="col-md-3" ';rn		$calendar .= ' table border=0 align=center style="font-size:8pt; font-family:Verdana;" ';rn		$calendar .= ' th colspan=7 align=center style="font-size:12pt; font-family:Arial; color:#666699;" '.$months[$this_month-1].' /th ';rn		$calendar .= ' tr td style="color:#666666" b Mon /b /td td style="color:#666666" b Tue /b /td ';rn		$calendar .= ' td style="color:#666666" b Wed /b /td td style="color:#666666" b Thu /b /td ';rn		$calendar .= ' td style="color:#666666" b Fri /b /td td style="color:#0000cc" b Sat /b /td ';rn		$calendar .= ' td style="color:#cc0000" b Sun /b /td /tr ';rn		$calendar .= ' tr br ';rn		$i=1;rn		while ($i $first) {rn			$calendar .= ' td  /td ';rn			$i++;rn		}rn		$i=1;rn		while ($i =$total) {rn			$rest=($i+$first-1)%7;rn  rn  $dayid = $year.'-'.$this_month.'-'.$i;rn  rn			if (($i==$day) ($this_month==$month)) {rn  rn  if (in_array($dayid, $calevents)) { rn				$calendar .= ' td style="font-size:8pt; font-family:Verdana; background:#0000cc;" align=center ';rn  } else {rn				$calendar .= ' td style="font-size:8pt; font-family:Verdana; background:#ff0000;" align=center ';rn  }rn  rnrn			} else {rn  rn  if (in_array($dayid, $calevents)) { rn				$calendar .= ' td style="font-size:8pt; font-family:Verdana; background:#0000cc;" align=center ';rn  } else {rn				$calendar .= ' td style="font-size:8pt; font-family:Verdana" align=center ';rn  }rn  rnrn			}rn  rn			if (($i==$day) ($this_month==$month)) {rn  rn  rn  if (in_array($dayid, $calevents)) { rn $calendar .= ' a href="/events?date='.$dayid.'" style="color:#fff;" '.$i.' /a ';rn  } else {rn  	$calendar .= ' span style="color:#fff;" '.$i.' /span ';rn  }rnrn			}	else if ($rest==6) {rn  rn  if (in_array($dayid, $calevents)) { rn $calendar .= ' a href="/events?date='.$dayid.'" style="color:#fff;" '.$i.' /a ';rn  } else {rn				$calendar .= ' span style="color:#0000cc" '.$i.' /span ';rn  }rn    rnrn			} else if ($rest==0) {rn  rnrn  if (in_array($dayid, $calevents)) { rn $calendar .= ' a href="/events?date='.$dayid.'" style="color:#fff;" '.$i.' /a ';rn  } else {rn				$calendar .= ' span style="color:#cc0000" '.$i.' /span ';rn  }rn  rnrn			} else {rn  rn if (in_array($dayid, $calevents)) { rn $calendar .= ' a href="/events?date='.$dayid.'" style="color:#fff;" '.$i.' /a ';rn  } else {rn $calendar .= $i;rn  }rnrn			}rn  rn			$calendar .= " /td \n";rn			if ($rest==0) $calendar .= " /tr \n tr \n";rn			$i++;rn		}rn		$calendar .= ' /tr ';rn		$calendar .= ' /table ';rn		$calendar .= ' /div ';rn	}rn	$calendar .= ' /div /div ';rn}rnrn$calendar .= ' /div ';rnrn$this- set('calendar' , $calendar );rnrn}rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/224</link>
    <description>This is a simple php script which I used in a custom frame work basen on a old version of cakephp. I thought it might be good to keep as it is so simple but works so well.rnrnIn controllerrnrnrn// do a count query on mysql databasern// example: SELECT count(*) as Count FROM users WHERE is_active = 1 GROUP BY idrn// for example purposes I have simplified the queries, they might be in a model in a php frame work if you use onernrnÂ  Â  Â  Â  $offset = 0;rnÂ  Â  Â  Â  $currentpage = $_GET['page'];rnÂ  Â  Â  Â  if(!empty($currentpage)) {rnÂ  Â  Â  Â  Â  Â  if($currentpage  1) {rnÂ  Â  Â  Â  Â  Â  Â  Â  $offset = ($currentpage - 1) * 10;rnÂ  Â  Â  Â  Â  Â  }rnÂ  Â  Â  Â  }rnrnÂ  Â  Â  Â  $pages = $count / 10;rnÂ  Â  Â  Â  $pages = ceil($pages);rnrnÂ  Â  Â  Â  if($currentpage  3) { $startpage = $currentpage - 3; } else { Â $startpage = 1; }rnÂ  Â  Â  Â  if($currentpage  ($pages - 3)) { $endpage = $currentpage + 2; } else { $endpage = $pages; }rnrn// if you are in a framework like cakephp, laravel etc you want to pass the values to your viewrn// like so:rnrnÂ  Â  Â  Â  $this- set('startpage', $startpage);rnÂ  Â  Â  Â  $this- set('endpage', $endpage);rnÂ  Â  Â  Â  $this- set('currentpage', $currentpage);rnÂ  Â  Â  Â  $this- set('count', $count);rnrnrn// query mysql insert '$offset' into the query.rn// example: $query = 'SELECT * FROM users WHERE is_active = 1 GROUP BY id ORDER BY id LIMIT '.$offset.',10;rnrnIn viewrnrnrn style rnÂ  Â  .pagination {rnÂ  Â  Â  Â  display: inline-block;rnÂ  Â  Â  Â  padding-left: 0;rnÂ  Â  Â  Â  margin-top: 10px;rnÂ  Â  Â  Â  border-radius: 4px;rnÂ  Â  Â  Â  margin-bottom: 1px;rnÂ  Â  }rnÂ  Â  .pagination  li {rnÂ  Â  Â  Â  display: inline;rnÂ  Â  }rnÂ  Â  .pagination  li  a, .pagination  li  span {rnÂ  Â  Â  Â  position: relative;rnÂ  Â  Â  Â  float: left;rnÂ  Â  Â  Â  padding: 6px 12px;rnÂ  Â  Â  Â  margin-left: -1px;rnÂ  Â  Â  Â  line-height: 1.42857143;rnÂ  Â  Â  Â  color: #428bca;rnÂ  Â  Â  Â  text-decoration: none;rnÂ  Â  Â  Â  background-color: #fff;rnÂ  Â  Â  Â  border: 1px solid #ddd;rnÂ  Â  }rnÂ  Â  .pagination  .active  a {rnÂ  Â  Â  Â  z-index: 2;rnÂ  Â  Â  Â  color: #fff;rnÂ  Â  Â  Â  cursor: default;rnÂ  Â  Â  Â  background-color: #00214E;rnÂ  Â  Â  Â  border-color: #00214E;rnÂ  Â  }rn /style rnrn div class='pull-left' rn ?php if($count  10){ ? rn ul class="pagination" rn li a href="/cwsinsurance/imagemanager/'" First /a /li rn ?phprnÂ  Â  for ($i = $startpage; $i = $endpage; $i++) {rnrnÂ  Â  Â  Â  echo ' li class=';rnÂ  Â  Â  Â  if( $currentpage == $i){ echo ' "active" '; }rnÂ  Â  Â  Â  echo ' a href="/cwsinsurance/imagemanager/?page='.$i.'" '.$i.' /a /li ';rnÂ  Â  }rn? rn li a href="/cwsinsurance/imagemanager/?page= ?= $pages ? " Last /a /li rn /ul rn ?php } ? rn /div rnÂ  div class='pull-right' rnTotal gadgets: Â  ?= $count ? rn /div rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/231</link>
    <description>Modal boxesrnrnAs far as modal boxes are concerned - they have taken website by storm and rightly so, they make sites more user friendly with the advantage that they look good and that they help the UI interaction and usability. They keep the user on the main page while performing actions related to it.rnrnThere are 3 types of modal boxes:rnrnrn	Modal boxes that has static HTML in it.rn	Modal boxes that generate information that are passed to it via JQUERYrn	And modal boxes that interacts with a programming language like PHP that operate via AJAX and display information from the database on it.rnrnrnThe HTML modal box is easy, you just hide it and display it when the box is activated via a link. All the modal boxes we are displaying here are in conjunction with Bootstrap 3, bootstrap 3 is the easiest and way to integrate modal boxes into your site. If you don t want to use the whole bootstrap style sheet - the bootstrap site has the option to just download the modal aspect and not the whole stylesheet.rnrnSo first we are going to deal with JQUERY modal boxesrnrnJQuery Modal boxrnrnHERE is the Jquery modal boxes: We have to uploadimage and deleteimage - we are going to have a list of users, each user might or might not have an image connected to it. Our user list page can be generated by a PHP or in a Framework like Symfony, Cakephp, Laravel etc. On our user list page can either just paste in our modal boxes our use PHP to include them. We are including them, have a look at our user list page rnrnrn h1 Users list /h1 rn div data-table-filter class="pull-right" rn  input class="form-control" type="text" placeholder="Filter results here" rn /div rn br br rn table class="table table-bordered table-paginated table-sortable table-filterable" rn thead rn  th Name /th rn  th  /th rn /thead rn tbody rn ?php if(!empty($users)) { ? rn ?php foreach($users as $user) { ? rn tr rn  td ?php echo $user- name; ? /td rn  td rn  ?php if(!empty($user- image)) { ? rnrn   arn   href="#deleteimage"rn   role="button"rn   class="btn btn-danger pull-right"rn   data-toggle="modal"rn   data-target="#deleteimage"rn   data-id=" ?php echo $user- id; ? "rn   rn   i class="icon-trash" /i rn   /a rnrn   arn   href="#viewimage"rn   role="button"rn   class="btn btn-success pull-right viewimg"rn   data-toggle="modal"rn   data-target="#viewimage"rn   data-id=" ?php echo $user- id; ? "rn   rn   i class="icon-eye-open" /i rn   /a rnrn   ?php } else { ? rn   arn   href="#uploadimage"rn   role="button"rn   class="btn btn-primary pull-right"rn   data-toggle="modal"rn   data-target="#uploadimage"rn   data-id=" ?php echo $user- id; ? "rn   rn   i class="icon-upload" /i rn   /a rn   ?php } ? rnrn  /td rn /tr rn?php } ? rn?php } ? rn /tbody rn /table rn ?php include('deleteimage_modal.php'); ? rn ?php include('viewimage_modal.php'); ? rn ?php include('uploadimage_modal.php'); ? rnrnNow have a look at the two files we included, which feeds information to it via JQUERY, ( obviously you need to include or link to jquery somewhere on your page )rnrndeleteimage_modal pagernrnrn div class="modal fade" id="deleteimage" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" rn div class="modal-dialog" role="document" rn  div class="modal-content" rn  div class="modal-header" rn   button type="button" class="close" data-dismiss="modal" aria-label="Close" span aria-hidden="true" times; /span /button rn   h4 class="modal-title" id="myModalLabel" Are you sure? /h4 rn  /div rn   div class="modal-body" rn   p Are you sure that you wish to delete this image? /p rn   p strong This action cannot be undone! /strong /p rn   /div rn  div class="modal-footer" rn   button class="btn pull-left" data-dismiss="modal" aria-hidden="true" Cancel /button rn   form method="POST" action="/users/deleteimage" accept-charset="utf-8" rn   input type="hidden" id="deletevalue" value="" name="id" rn   button type="submit" class="btn btn-primary pull-right" Yes, I am sure /button rn   /form rn  /div rn  /div rn /div rn /div rnrnin the userlist page , the #deleteimage will activate this modal box (if you have your links to bootstrap 3 in place)rnThe same for the #uploadimage it will activate the uploadimage_modal.php window.rnrnCan you see this hidden field in the deleteimage_modal.php page?rn rnrnrn input type="hidden" id="deletevalue" value="" name="id" rnrnWe are going to pass the id via JQuery to this field, then when you submit this page it will post to that function and perform the action - in this case delete the image. They way we do this is by including a javascript file. Like thisrnrnrn $('#deleteimage').on('show.bs.modal', function(event) {rn $("#deletevalue").val($(event.relatedTarget).data('id'));rn });rnrnThe id is in the list in data-id=  ?php echo $user- id; ? then it gets send to the jquery file that inserts into the modal, which does the rest. rnrnThe same for the viewimage modalrn rnrnrn $('#uploadimage').on('show.bs.modal', function(event) {rn console.log($(event.relatedTarget).data('id'));rn $("#uploadvalue").val($(event.relatedTarget).data('id'));rn});rnrnUploadimage_modal pagernrnrn div class="modal fade" id="uploadimage" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" rn div class="modal-dialog" role="document" rn  div class="modal-content" rn  div class="modal-header" rn   button type="button" class="close" data-dismiss="modal" aria-label="Close" span aria-hidden="true" times; /span /button rn   h4 class="modal-title" id="myModalLabel" Upload an Image /h4 rn  /div rn  form method="POST" action="/uploadimage" enctype="multipart/form-data" accept-charset="utf-8" rn   div class="modal-body" rn   fieldset rn    input type="file" name="fileuploads" id="fileuploads" rn    input type="hidden" id="uploadvalue" value="" name="id" rn   /fieldset rn   /div rn   div class="modal-footer" rn   button type="submit" class="btn btn-primary pull-right" Submit /button rn   /div rn  /form rn  /div rn /div rn /div rnrn rnrnWhen you click submit on the deleteimage it will do the action on the deleteimage() function and the same for the uploadimage() function.rnrnHere is an example of how the controller with these functions in might look like, below once we have dealt the how AJAX work, I will post the whole javascript file aswell.rnrnrn ?phprnrnclass UserimagesController extends Controllerrn{rnrn public function imageManager()rn {rn $this- jsfiles[] = $this- link('/js/imagemanager.js');rn $this- stylesheets[] = "/css/font-awesome.min.css";rnrn  // $results =rn  // Query database here and get results to display in listrn $this- set('results', $results);rnrn }rnrnrn  public function upLoadImage()rn {rn if ($_POST) {rnrn  // do some validation to see if you get the values you expectrnrn  if (empty($_POST['id'])) {rn  $this- flash("You have to select an image, please try again", "error");rn  $this- redirect('/imagemanager');rn  } else {rn  $id = htmlspecialchars($_POST['id']); // do some escaping to make your site securern  }rnrn  if (empty($_FILES['fileuploads']['name'])) {rn  $this- flash("You have to select an Image, please try again", "error");rn  $this- redirect('uploadimage/' . $id);rn  }rnrn  // here I will load the function that deals with image uploads, rename, resize etcrnrn }rnrn }rnrn public function deleteImage($id)rn {rn  if ($_POST) {rnrn  // do some validation to see if you get the values you expectrnrn  if (empty($_POST['id'])) {rn   $this- flash("You have to select an image, please try again", "error");rn   $this- redirect('/imagemanager');rn  } else {rn   $id = htmlspecialchars($_POST['id']); // do some escaping to make your site securern  }rnrn  // access a function here that help you retrieve the image name based on the idrnrn  $image = $result['image_name'];rnrn  if ($image === true) {rn   // delete your image here and update the database function can be accessed herern   $this- flash("The image has been deleted", "success");rn   $this- redirect('/imagemanager');rn  } else {rn   $this- flash("Sorry, the image was not deleted", "error");rn   $this- redirect('/imagemanager');rn  }rnrn  $this- layout = null;rn  }rn }rnrn public function displayImage($id)rn {rn if (!$this- isAjax()) {rn  return $this- requestBadRequest400();rn }rnrn if (empty($id)) {rn  $this- flash("Please select and image to view", "error");rn  $this- redirect('imagemanager');rn }rnrn $id = htmlspecialchars($id); // some escapingrnrn // access a function here that help you retrieve the image name based on the idrnrn $image = $result['image_name'];rnrn $values['id'] = $result['id'];rn $values['name'] = $result['user'];rn $values['image'] = ' img src="'.$image.'" alt="'.$result['user'].' style="max-width:400px;" ';rnrn $this- sendJsonResponse($values);rnrn }rnrnrn private function requestBadRequest400()rn {rn header("HTTP/1.0 400 Bad Request");rn echo 'Bad request.';rn exit;rn }rnrn /**rn * @param $data mixedrn */rn private function sendJsonResponse($data)rn {rn $json = json_encode($data);rn header("HTTP/1.1 200 OK");rn header('Content-type: application/json');rn echo $json;rn exit;rn }rnrn}rnrnrnThe is all we need to have the JQUERY - Bootstrap modal boxes workrnrnAjax - bootstrap modal boxesrnrnLet s start backwards with the ajax way of doing this, the end result is we want to hit the displayimage() function and then display that in our modal. As you see in the displayimage() function - we tell it it is 1. Ajax, 2. We output the values we get from the database then 3. Json_encode them.rnrnWe are using the javascript below to display the values from our function to our modal box..rnrnrn $(".viewimg").on("click",function () {rn var dataID = $(this).data('id');rnrn $.ajax({rn  url: '/users/viewImage/' + dataID,rn  type:'GET',rn  dataType: 'json',rn  context: this,rn  success: function(values)rn  {rn  $('.id').html(values.id);rn  $('.user').html(values.make);rn  $('.image').html(values.image);rn  // log all values to the javascript console in your browserrn  console.log(values);rn  $(".loader").hide();rn  },rn  fail: function () {rn  modal.find('.modal-body').append(' div class="alert alert-error" Oops! something went wrong /div ');rn  $(".loader").hide();rn  }rn });rn });rnrnIn the javascript we tie the values we get from the function in php to the javascript console then we ll display them, once they are loaded we tell the imageloader to stop displaying.rnrnViewimage_modal pagernrnrn div class="modal fade" id="viewimage" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" rn div class="modal-dialog" role="document" rn  div class="modal-content" rn  div class="modal-header" rn   button type="button" class="close" data-dismiss="modal" aria-label="Close" span aria-hidden="true" times; /span /button rn   h4 class="modal-title" id="myModalLabel" span class="user"  /span /h4 rn  /div rn  div class="modal-body" style="text-align:center;" rn   div class="loader" id="loader" img src="/img/progress.gif"/ span Loading, please wait... /span /div rn   span class="image"  /span rn  /div rn  div class="modal-footer" rn  /div rn  /div rn /div rn /div rnrnhere are the complete javascript file for both the ajax and jquery modal boxes together..rnrnrn$(document).ready(function() {rnrn $(".viewimg").on("click",function () {rn var dataID = $(this).data('id');rnrn $.ajax({rn  url: '/viewImage/' + dataID,rn  type:'GET',rn  dataType: 'json',rn  context: this,rn  success: function(values)rn  {rn  $('.id').html(values.id);rn  $('.user').html(values.make);rn  $('.image').html(values.image);rn  // log all values to the javascript console in your browserrn  console.log(values);rn  $(".loader").hide();rn  },rn  fail: function () {rn  modal.find('.modal-body').append(' div class="alert alert-error" Oops! something went wrong /div ');rn  $(".loader").hide();rn  }rn });rn });rnrn $('#uploadimage').on('show.bs.modal', function(event) {rn console.log($(event.relatedTarget).data('id'));rn $("#uploadvalue").val($(event.relatedTarget).data('id'));rn});rnrn $('#deleteimage').on('show.bs.modal', function(event) {rn $("#deletevalue").val($(event.relatedTarget).data('id'));rn });rnrn});rnrnrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/233</link>
    <description>There are multiple ways to do validation:rnrnrn	Server side validationJquery is very robust but it depends often on the page reloading or submitting before you can see if an field validate or notrn	Client side you can validate with Jquery, Javaascript or Html5.rn	The advantage of doing jquery validation above Html 5 validation is that is cross browser and it just works whichrnrnrnJquery validation is easy peasy as you will see.rnrnFirst you need to include JQuery on your page plust the jQuery validation scripts. No need downloading them just reference them. Like so.rnrnrn script src="https://code.jquery.com/jquery-2.2.4.min.js" integrity="sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=" crossorigin="anonymous" /script rn script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.16.0/jquery.validate.min.js" /script rn script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.16.0/additional-methods.js" /script rnrnJQuery Validate an image size and filetypernrnThe formrn rnrnrn form method="POST" action="/uploadimage" id="loadimage" enctype="multipart/form-data" accept-charset="utf-8" rn   div class="modal-body" rn   fieldset rn    input type="file" name="fileuploads" id="fileuploads" rn    input type="hidden" id="uploadvalue" value="" name="plu" rn   /fieldset rn   /div rn   div class="modal-footer" rn   small u Max size /u : 5mb, u File types: /u jpg, jpeg, jpe, png, gif, bmp, tiff /small rn   button type="submit" class="btn btn-primary pull-right" Submit /button rn   /div rn  /form rnrnthe jqueryrn rnrnrn$(document).ready(function () {rn rnjQuery(function ($) {rn "use strict";rn $('#loadimage').validate({ //  the id of the form you are submittingrn  rules: {rn  fileuploads: { //  the name of the file you are submittingrn   required: true,rn   extension: "jpg,jpeg,jpe,png,gif,bmp,tiff",rn   filesize: 5,rn  }rn  },rn });rn });rnrn});rnrn rnrnvalidating other form ffields..rnthe formrn rnrnrn form id="myform" rn input type="text" name="field1" / rn input type="text" name="field2" / rn input type="submit" / rn /form rnrnthe jqueryrn rnrnrn$(document).ready(function () {rnrn $('#myform').validate({ // initialize the pluginrn rules: {rn  field1: {rn  required: true,rn  email: truern  },rn  field2: {rn  required: true,rn  minlength: 5rn  }rn }rn });rnrn});rnrnother jquery methods available for validatingrnrnmaxWordsrnminWordsrnrangeWordsrnletterswithbasicpuncrnalphanumericrnlettersonlyrnnowhitespacernziprangernzipcodeUSrnintegerrnvinUSrndateITArndateNLrntimerntime12hrnphoneUSrnphoneUKrnmobileUKrnphonesUKrnpostcodeUKrnstrippedminlengthrnemail2 (optional TLD)rnurl2 (optional TLD)rncreditcardtypesrnipv4rnipv6rnpatternrnrequire_from_grouprnskip_or_fill_minimumrnacceptrnextensionrnrnJavascript validationrnrnJavascript validation is more work but lighter..rn rnrnrn$(document).ready(function(){rnrn$('.submit').click(function(){rn validateForm();  rn});rnrnfunction validateForm(){rnrnrn var nameReg = /^[A-Za-z]+$/;rn var numberReg = /^[0-9]+$/;rn var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;rnrn var names = $('#nameInput').val();rn var company = $('#companyInput').val();rn var email = $('#emailInput').val();rn var telephone = $('#telInput').val();rn var message = $('#messageInput').val();rnrn var inputVal = new Array(names, company, email, telephone, message);rnrn var inputMessage = new Array("name", "company", "email address", "telephone number", "message");rnrn $('.error').hide();rnrn if(inputVal[0] == ""){rn  $('#nameLabel').after(' span class="error" Please enter your ' + inputMessage[0] + ' /span ');rn }rn else if(!nameReg.test(names)){rn  $('#nameLabel').after(' span class="error" Letters only /span ');rn }rnrn if(inputVal[1] == ""){rn  $('#companyLabel').after(' span class="error" Please enter your ' + inputMessage[1] + ' /span ');rn }rnrn if(inputVal[2] == ""){rn  $('#emailLabel').after(' span class="error" Please enter your ' + inputMessage[2] + ' /span ');rn }rn else if(!emailReg.test(email)){rn  $('#emailLabel').after(' span class="error" Please enter a valid email address /span ');rn }rnrn if(inputVal[3] == ""){rn  $('#telephoneLabel').after(' span class="error" Please enter your ' + inputMessage[3] + ' /span ');rn }rn else if(!numberReg.test(telephone)){rn  $('#telephoneLabel').after(' span class="error" Numbers only /span ');rn }rnrn if(inputVal[4] == ""){rn  $('#messageLabel').after(' span class="error" Please enter your ' + inputMessage[4] + ' /span ');rn }  rn}  rnrn});rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/234</link>
    <description>There are different types of joins available in SQL:rnrnINNER JOIN: returns rows when there is a match in both tables.rnrnLEFT JOIN: returns all rows from the left table, even if there are no matches in the right table.rnrnRIGHT JOIN: returns all rows from the right table, even if there are no matches in the left table.rnrnFULL JOIN: returns rows when there is a match in one of the tables.rnrnSELF JOIN: is used to join a table to itself as if the table were two tables, temporarily renaming at least one table in the SQL statement.rnrnCARTESIAN JOIN: returns the Cartesian product of the sets of records from the two or more joined tables.rnrnrnrnWE can take each first four joins in Details :rnrnWe have two tables with the following values.rnrnrnTableArnrnrnrnid firstName   lastNamern.......................................rn1  arun   prasanth   rn2  ann    antony    rn3  sruthy    abc    rn6  new    abc       rnrnrnTableBrnrnrnrnid2 age Placern................rn1  24 keralarn2  24 usarn3  25 ekmrn5  24 chennairnrn....................................................................rnrnINNER JOINrnrnNote :it gives the intersection of the two tables, i.e. rows they have common in TableA and TableBrnrnSyntaxrnrnrnSELECT table1.column1, table2.column2...rnFROM table1rnINNER JOIN table2rnON table1.common_field = table2.common_field;rnrnApply it in our sample table :rnrnrnSELECT TableA.firstName,TableA.lastName,TableB.age,TableB.PlacernFROM TableArnINNER JOIN TableBrnON TableA.id = TableB.id2;rnrnResult Will BernrnrnfirstName  lastName  age Placern..............................................rnarun  prasanth 24 keralarnann  antony  24 usarnsruthy  abc  25 ekmrnrnLEFT JOINrnrnNote : will give all selected rows in TableA, plus any common selected rows in TableB.rnrnSyntaxrnrnrnSELECT table1.column1, table2.column2...rnFROM table1rnLEFT JOIN table2rnON table1.common_field = table2.common_field;rnrnApply it in our sample table :rnrnrnSELECT TableA.firstName,TableA.lastName,TableB.age,TableB.PlacernFROM TableArnLEFT JOIN TableBrnON TableA.id = TableB.id2;rnrnResultrnrnrnfirstName    lastName   age  Placern...............................................................................rnarun   prasanth   24 keralarnann    antony    24 usarnsruthy    abc    25 ekmrnnew    abc    NULL NULLrnrnRIGHT JOINrnrnNote : will give all selected rows in TableB, plus any common selected rows in TableA.rnrnSyntaxrnrnrnSELECT table1.column1, table2.column2...rnFROM table1rnRIGHT JOIN table2rnON table1.common_field = table2.common_field;rnrnApply it in our sample table :rnrnrnSELECT TableA.firstName,TableA.lastName,TableB.age,TableB.PlacernFROM TableArnRIGHT JOIN TableBrnON TableA.id = TableB.id2;rnrnResultrnrnrnfirstName    lastName   age Placern...............................................................................rnarun   prasanth   24 keralarnann    antony    24 usarnsruthy    abc    25 ekmrnNULL   NULL   24 chennairnrnFULL JOINrnrnNote : It is same as union operation, it will return all selected values from both tables.rnrnSyntaxrnrnrnSELECT table1.column1, table2.column2...rnFROM table1rnFULL JOIN table2rnON table1.common_field = table2.common_field;rnrnApply it in our sample table :rnrnrnSELECT TableA.firstName,TableA.lastName,TableB.age,TableB.PlacernFROM TableArnFULL JOIN TableBrnON TableA.id = TableB.id2;rnrnResultrnrnrnfirstName    lastName   age Placern...............................................................................rnarun   prasanth   24 keralarnann    antony    24 usarnsruthy    abc    25 ekmrnnew    abc    NULL NULLrnNULL   NULL   24 chennairnrnrnInteresting FactrnrnrnFor INNER joins the order doesn t matterrnrnFor (LEFT, RIGHT or FULL) OUTER joins,the order matterrn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/266</link>
    <description>Google Login APIrnrnWe are going to login to our Cakephp 2 website (which does not use composer) with a Google api. We are going to update our Social user s table and our normal users table. Basically if a user exist we are going to update other wise add the user.rnrnOur first table is:rnrnrnCREATE TABLE IF NOT EXISTS `user_socials` (rn `id` int(11) NOT NULL,rn `oauth_provider` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `oauth_uid` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `link` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `picture` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `created` datetime NOT NULL,rn `modified` datetime NOT NULLrn) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;rnrnOur users table is:rnrnrnCREATE TABLE IF NOT EXISTS `users` (rn `id` int(11) NOT NULL,rn `user_role_id` int(1) NOT NULL,rn `firstname` varchar(100) NOT NULL,rn `lastname` varchar(100) NOT NULL,rn `google_id` varchar(255) DEFAULT NULL,rn `facebook_id` varchar(255) DEFAULT NULL,rn `linkedin_id` varchar(255) DEFAULT NULL,rn `email` varchar(100) NOT NULL,rn `password` varchar(100) NOT NULL,rn `created` date NOT NULL,rn `modified` date NOT NULLrn) ENGINE=MyISAM AUTO_INCREMENT=1334 DEFAULT CHARSET=latin1;rnrnwe have optained the google api files at https://github.com/Skillbooker/google_oauthrnrnThe Google functionrnrnThis google function has to go in your controller.rnrnrnpublic function google() {rn	rnif(!session_id()) {rn	session_start();rn}rnrnrndefine("SITEURL", "http://www.skillbooker.com/"); rndefine("GOOGLE_KEY", "0000000000000000");rn//your google keyrndefine("GOOGLE_SECRET", "000000000000000");rn//your google secret keyrndefine("GOOGLE_REROUTE", "social/google");rn	rnrequire_once(APP . 'Vendor' . DS . 'googlelogin' . DS . 'Google_Client.php');rnrequire_once(APP . 'Vendor' . DS . 'googlelogin' . DS . 'contrib' . DS . 'Google_Oauth2Service.php'); rnrn######### edit details ##########rn$clientId = GOOGLE_KEY;rn$clientSecret = GOOGLE_SECRET;rn$redirectUrl = SITEURL.GOOGLE_REROUTE;rnrnrn$gClient = new Google_Client();rn$gClient- setApplicationName('Login to Skillbooker.com');rn$gClient- setClientId($clientId);rn$gClient- setClientSecret($clientSecret);rn$gClient- setRedirectUri($redirectUrl);rn rn$google_oauthV2 = new Google_Oauth2Service($gClient);rnrnif(isset($_GET['code'])){rn $gClient- authenticate($_GET['code']);rn $_SESSION['token'] = $gClient- getAccessToken();rn}rnrnif (isset($_SESSION['token'])) {rn $gClient- setAccessToken($_SESSION['token']);rn}rnrnif ($gClient- getAccessToken()) {rn //Get user profile data from googlern $userProfile = $google_oauthV2- userinfo- get();rn	  rn			//$_SESSION['google_profile'] = $userProfile;rn  rn			$social['oauth_provider'] = 'google'; rn			$social['oauth_uid'] = $userProfile['id']; rn  $social['picture'] = $userProfile['picture'];rn  $social['link'] = $userProfile['link'];rn  rn  $user['lastname'] = $userProfile['family_name'];rn  $user['firstname'] = $userProfile['given_name'];rn  $user['username'] = $userProfile['name'];rn			$user['email'] = $userProfile['email'];rn			$user['user_role_id'] = $role;rnrn  $email = $userProfile['email'];rn  rn  $this- socialcheck($social, $user, $email);rn	rn	rn	} else {rn	rn	$authUrl = $gClient- createAuthUrl();rn	header('Location: ' . $authUrl);rn	rn	}rnrn}rnrnnow the function that updates our social users tables and users tablesrnrnthis function will be used for our facebook, google, linkedin, twitter and all other one click social login systemsrnrnrnfunction socialcheck($social, $user, $email) {rn	rn	$this- loadModel('UserSocial');rn	$options = array('conditions' = array('UserSocial.oauth_uid' = $social['oauth_uid']));rn	$findsocialuser = $this- UserSocial- find('first',$options);rn	rn	if(!empty($findsocialuser)){rn	rn		$userdata['id']	=	$findsocialuser['UserSocial']['id'];rn		$userdata['modified']	=	date("Y-m-d H:i:s");rn		rn		$this- UserSocial- save($userdata,false);rn		$social_id = $findsocialuser['UserSocial']['id'];rn	rn	} else {rn		rn		$userdata = $social;	rn		$userdata['created']	=	date("Y-m-d H:i:s");rn		$userdata['modified']	=	date("Y-m-d H:i:s");rn		rn		$this- UserSocial- save($userdata,false);  rnrn	}rn rn		$this- loadModel('User');rn		rn		$options = array('conditions' = array('User.email' = $email));rn		$finduser = $this- User- find('first',$options);rn		rn		if($social['oauth_provider'] == 'google') { $data['google_id'] = $social['oauth_uid']; }rn		if($social['oauth_provider'] == 'facebook') { $data['facebook_id'] = $social['oauth_uid']; }rn		if($social['oauth_provider'] == 'linkedin') { $data['linkedin_id'] = $social['oauth_uid']; }rn rn	if(!empty($finduser)){rn		rn		$data['id']	=	$finduser['User']['id'];rn		$data['modified']	=	date("Y-m-d H:i:s");rn	rn		$this- User- save($data,false);rn		rn	} else {rn			rn		$data = $user;rn		// setting data to the user data that will contain the first names email addresses ectrn		rn		$data['password']	=	AuthComponent::password($user['firstname']);rn		// creating a password for the user in our database -- this can be emailed to the userrn	rn		$this- User- save($data, false);rn	rn	}rn}rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/264</link>
    <description>We are going to login to our Cakephp 2 website (which does not use composer) with a Facebook api. We are going to update our Social user s table and our normal users table. Basically if a user exist we are going to update other wise add the user.rnrnOur first table is:rnrnrnCREATE TABLE IF NOT EXISTS `user_socials` (rnÂ  `id` int(11) NOT NULL,rnÂ  `oauth_provider` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rnÂ  `oauth_uid` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rnÂ  `link` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rnÂ  `picture` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rnÂ  `created` datetime NOT NULL,rnÂ  `modified` datetime NOT NULLrn) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;rnrnOur users table is:rnrnrnCREATE TABLE IF NOT EXISTS `users` (rnÂ  `id` int(11) NOT NULL,rnÂ  `user_role_id` int(1) NOT NULL,rnÂ  `firstname` varchar(100) NOT NULL,rnÂ  `lastname` varchar(100) NOT NULL,rnÂ  `google_id` varchar(255) DEFAULT NULL,rnÂ  `facebook_id` varchar(255) DEFAULT NULL,rnÂ  `linkedin_id` varchar(255) DEFAULT NULL,rnÂ  `email` varchar(100) NOT NULL,rnÂ  `password` varchar(100) NOT NULL,rnÂ  `created` date NOT NULL,rnÂ  `modified` date NOT NULLrn) ENGINE=MyISAM AUTO_INCREMENT=1334 DEFAULT CHARSET=latin1;rnrnwe have optained the facbook api files at https://github.com/Skillbooker/facebook_oauthrnrnThe facebook functionrnrnThis facebook function has to go in your controller.rnrnrnpublic function facebook() {rnrndefine("SITEURL", "http://www.skillbooker.com/");Â Â  Â rndefine("FACEBOOK_KEY", "0000000000000000");rn//your facebook keyrndefine("FACEBOOK_SECRET", "000000000000000");rn//your facebook secret keyrndefine("FACEBOOK_REROUTE", "social/facebook");rnrnÂ Â  Â rnÂ Â  Â if(!session_id()) {rnÂ  Â  Â Â  Â session_start();rnÂ Â  Â }rnÂ Â  Â rnÂ Â  Â require_once(APP . 'Vendor' . DS . 'facebooker' . DS . 'src' . DS . 'Facebook' . DS . 'autoload.php');rnrnÂ  Â  $fb = new Facebook\Facebook([rnÂ  Â  Â  Â  'app_id' = FACEBOOK_KEY,rnÂ  Â  Â  Â  'app_secret' = FACEBOOK_SECRET,rnÂ  Â  Â  Â  'default_graph_version' = 'v2.4',rnÂ  Â  Â  ]);rnrnÂ  Â  $helper = $fb- getRedirectLoginHelper();rnrnÂ  Â  $permissions = ['email']; // optionalrnÂ  Â  Â  Â Â rnÂ  Â  try {rnÂ  Â  Â  Â  if (isset($_SESSION['token'])) {rnÂ  Â  Â  Â  Â  Â  $accessToken = $_SESSION['token'];rnÂ  Â  Â  Â  } else {rnÂ  Â  Â  Â  Â  Â  $accessToken = $helper- getAccessToken();rnÂ  Â  Â  Â  }rnÂ  Â  } catch(Facebook\Exceptions\FacebookResponseException $e) {rnÂ  Â  Â  Â  // When Graph returns an errorrnÂ Â  Â Â Â  Â $error = 'Graph returned an error: ' . $e- getMessage();rnÂ Â  Â Â Â  Â $this- Session- setFlash($error,'error');rnÂ  Â  Â  Â  exit;rnÂ  Â  } catch(Facebook\Exceptions\FacebookSDKException $e) {rnÂ  Â  Â  Â  // When validation fails or other local issuesrnÂ  Â  Â  Â  $error = 'Facebook SDK returned an error: ' . $e- getMessage();rnÂ Â  Â Â Â  Â $this- Session- setFlash($error,'error');rnÂ  Â  Â  Â  exit;rnÂ  Â  Â }rnÂ Â  Â Â rnrnÂ  Â  if (isset($accessToken)) {rnÂ Â  Â Â Â  Â rnÂ  Â  Â  Â  if (isset($_SESSION['token'])) {rnÂ  Â  Â  Â  Â  Â  $fb- setDefaultAccessToken($_SESSION['token']);rnÂ  Â  Â  Â  } else {rnÂ  Â  Â  Â  Â  Â  // getting short-lived access tokenrnÂ  Â  Â  Â  Â  Â  $_SESSION['token'] = (string) $accessToken;rnrnÂ  Â  Â  Â  Â  Â  // OAuth 2.0 client handlerrnÂ  Â  Â  Â  Â  Â  $oAuth2Client = $fb- getOAuth2Client();rnrnÂ  Â  Â  Â  Â  Â  // Exchanges a short-lived access token for a long-lived onernÂ  Â  Â  Â  Â  Â  $longLivedAccessToken = $oAuth2Client- getLongLivedAccessToken($_SESSION['token']);rnrnÂ  Â  Â  Â  Â  Â  $_SESSION['token'] = (string) $longLivedAccessToken;rnrnÂ  Â  Â  Â  Â  Â  // setting default access token to be used in scriptrnÂ  Â  Â  Â  Â  Â  $fb- setDefaultAccessToken($_SESSION['token']);rnÂ  Â  Â  Â  }rnrnÂ  Â  Â  Â  // redirect the user back to the same page if it has "code" GET variablernÂ  Â  Â  Â  if (isset($_GET['code'])) {rnÂ  Â  Â  Â  Â  Â  header('Location: ./');rnÂ  Â  Â  Â  }rnrnÂ  Â  Â  Â  // getting basic info about userrnÂ  Â  Â  Â  try {rnÂ  Â  Â  Â  Â  Â  $profile_request = $fb- get('/me?fields=name,first_name,last_name,email,link');rnÂ  Â  Â  Â  Â  Â  $userProfile = $profile_request- getGraphNode()- asArray();rnÂ  Â  Â  Â  } catch(Facebook\Exceptions\FacebookResponseException $e) {rnÂ  Â  Â  Â  Â  Â  // When Graph returns an errorrnÂ Â  Â Â Â  Â Â Â  Â $error = 'Graph returned an error: ' . $e- getMessage();rnÂ Â  Â Â Â  Â Â Â  Â $this- Session- setFlash($error,'error');rnÂ  Â  Â  Â  Â  Â  session_destroy();rnÂ  Â  Â  Â  Â  Â  // redirecting user back to app login pagernÂ  Â  Â  Â  Â  Â  header("Location: ./");rnÂ  Â  Â  Â  Â  Â  exit;rnÂ  Â  Â  Â  } catch(Facebook\Exceptions\FacebookSDKException $e) {rnÂ  Â  Â  Â  Â  Â  // When validation fails or other local issuesrnÂ  Â  Â  Â  Â  Â  $error = 'Facebook SDK returned an error: ' . $e- getMessage();rnÂ Â  Â Â Â  Â Â Â  Â $this- Session- setFlash($error,'error');rnÂ  Â  Â  Â  Â  Â  exit;rnÂ  Â  Â  Â  }rnÂ  Â  Â  Â Â rnÂ  Â  Â  Â  // printing $profile array on the screen which holds the basic info about userrnÂ  Â  Â  Â  //$_SESSION['facebook_profile'] = $userProfile;rnÂ Â  Â Â Â  Â Â Â  Â  Â  Â  Â  Â  Â Â rnÂ Â  Â Â Â  Â $social['oauth_provider'] = 'facebook';Â rnÂ Â  Â Â Â  Â $social['oauth_uid'] = $userProfile['id']; Â  Â  Â  Â rnÂ Â  Â  Â  Â $picture = 'http://graph.facebook.com/'.$userProfile['id'].'/picture';rnÂ  Â  Â  Â  $social['picture'] Â = $picture;rnÂ Â  Â Â Â  Â $social['link'] Â = $userProfile['link'];rnÂ Â  Â Â Â  Â rnÂ Â  Â Â Â  Â $user['lastname'] = $userProfile['last_name'];rnÂ Â  Â Â Â  Â $user['firstname'] = $userProfile['first_name'];rnÂ Â  Â Â Â  Â $user['email'] Â = $userProfile['email'];rnrnÂ Â  Â Â Â  Â $email Â = $userProfile['email'];rnrnÂ  Â  Â  Â  Â $this- socialcheck($social, $user, $email);rnÂ Â  Â Â Â  Â Â rnÂ  Â  } else {rnÂ  Â  Â  Â  // replace your website URL same as added in the developers.facebook.com/apps e.g. if you used http instead of https and you used non-www version or www version of your website then you must add the same herernÂ  Â  Â  Â  $loginUrl = $helper- getLoginUrl(SITEURL.FACEBOOK_REROUTE.'/'.$permissions);rnÂ  Â  Â  Â  $login = Â ' a href="' . $loginUrl . '" Log in with Facebook! /a ';rnÂ Â  Â Â Â  Â $this- set('login',$login);rnÂ  Â  }rn}rnrnnow the function that updates our social users tables and users tablesrnrnthis function will be used for our facebook, google, linkedin, twitter and all other one click social login systemsrnrnrnfunction socialcheck($social, $user, $email) {rn	rn	$this- loadModel('UserSocial');rn	$options = array('conditions' = array('UserSocial.oauth_uid' = $social['oauth_uid']));rn	$findsocialuser = $this- UserSocial- find('first',$options);rn	rn	if(!empty($findsocialuser)){rn	rn		$userdata['id']	=	$findsocialuser['UserSocial']['id'];rn		$userdata['modified']	=	date("Y-m-d H:i:s");rn		rn		$this- UserSocial- save($userdata,false);rn		$social_id = $findsocialuser['UserSocial']['id'];rn	rn	} else {rn		rn		$userdata = $social;	rn		$userdata['created']	=	date("Y-m-d H:i:s");rn		$userdata['modified']	=	date("Y-m-d H:i:s");rn		rn		$this- UserSocial- save($userdata,false);  rnrn	}rn rn		$this- loadModel('User');rn		rn		$options = array('conditions' = array('User.email' = $email));rn		$finduser = $this- User- find('first',$options);rn		rn		if($social['oauth_provider'] == 'google') { $data['google_id'] = $social['oauth_uid']; }rn		if($social['oauth_provider'] == 'facebook') { $data['facebook_id'] = $social['oauth_uid']; }rn		if($social['oauth_provider'] == 'linkedin') { $data['linkedin_id'] = $social['oauth_uid']; }rn rn	if(!empty($finduser)){rn		rn		$data['id']	=	$finduser['User']['id'];rn		$data['modified']	=	date("Y-m-d H:i:s");rn	rn		$this- User- save($data,false);rn		rn	} else {rn			rn		$data = $user;rn		// setting data to the user data that will contain the first names email addresses ectrn		rn		$data['password']	=	AuthComponent::password($user['firstname']);rn		// creating a password for the user in our database -- this can be emailed to the userrn	rn		$this- User- save($data, false);rn	rn	}rn}rnrn rn</description>
  </item>
  <item>
    <title></title>
    <link>http://www.skillbooker.com/jobboard/jobs/view/265</link>
    <description>LinkedIn Login APIrnrnWe are going to login to our Cakephp 2 website (which does not use composer) with a LinkedIn api. We are going to update our Social user s table and our normal users table. Basically if a user exist we are going to update other wise add the user.rnrnOur first table is:rnrnrnCREATE TABLE IF NOT EXISTS `user_socials` (rn `id` int(11) NOT NULL,rn `oauth_provider` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `oauth_uid` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `link` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `picture` varchar(255) COLLATE utf8_unicode_ci NOT NULL,rn `created` datetime NOT NULL,rn `modified` datetime NOT NULLrn) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;rnrnOur users table is:rnrnrnCREATE TABLE IF NOT EXISTS `users` (rn `id` int(11) NOT NULL,rn `user_role_id` int(1) NOT NULL,rn `firstname` varchar(100) NOT NULL,rn `lastname` varchar(100) NOT NULL,rn `google_id` varchar(255) DEFAULT NULL,rn `facebook_id` varchar(255) DEFAULT NULL,rn `linkedin_id` varchar(255) DEFAULT NULL,rn `email` varchar(100) NOT NULL,rn `password` varchar(100) NOT NULL,rn `created` date NOT NULL,rn `modified` date NOT NULLrn) ENGINE=MyISAM AUTO_INCREMENT=1334 DEFAULT CHARSET=latin1;rnrnwe have optained the linkedin api files at https://github.com/Skillbooker/linkedin_oauthrnrnThe linkedin functionrnrnThis linkedin function has to go in your controller.rnrnrnpublic function linkedin() {rnrndefine("SITEURL", "http://www.skillbooker.com/"); rndefine("LINKEDIN_KEY", "0000000000000000");rn//your linkedin keyrndefine("LINKEDIN_SECRET", "000000000000000");rn//your linkedin secret keyrndefine("LINKEDIN_REROUTE", "social/linkedin");rnrn$callbackURL = SITEURL.LINKEDIN_REROUTE;rn$linkedinApiKey = LINKEDIN_KEY;rn$linkedinApiSecret = LINKEDIN_SECRET;rn$linkedinScope = ;rnrnrequire_once(APP . 'Vendor' . DS . 'linkedin' . DS . 'http.php');rnrequire_once(APP . 'Vendor' . DS . 'linkedin' . DS . 'oauth_client.php');  rnrnif (isset($_GET["oauth_problem"]) $_GET["oauth_problem"] "") {rn // in case if user cancel the login. redirect back to home page.rnrn $this- Session- setFlash($_GET["oauth_problem"],'error');rn $this- redirect(array('plugin'= false, 'controller'= 'social', 'action' = 'linkedin'));rn}rnrn$client = new oauth_client_class;rnrn$client- debug = false;rn$client- debug_http = true;rn$client- redirect_uri = $callbackURL;rnrn$client- client_id = $linkedinApiKey;rn$application_line = __LINE__;rn$client- client_secret = $linkedinApiSecret;rnrnif (strlen($client- client_id) == 0 || strlen($client- client_secret) == 0)rn die('Please go to LinkedIn Apps page https://www.linkedin.com/secure/developer?newapp= , '.rn			'create an application, and in the line '.$application_line.rn			' set the client_id to Consumer key and client_secret with Consumer secret. '.rn			'The Callback URL must be '.$client- redirect_uri).' Make sure you enable the '.rn			'necessary permissions to execute the API calls your application needs.';rnrn/* API permissionsrn */rn$client- scope = 'r_basicprofile r_emailaddress';rnif (($success = $client- Initialize())) {rn if (($success = $client- Process())) {rn if (strlen($client- authorization_error)) {rn  $client- error = $client- authorization_error;rn  $success = false;rn } elseif (strlen($client- access_token)) {rn  $success = $client- CallAPI(rn					'http://api.linkedin.com/v1/people/~:(id,email-address,first-name,last-name,location,picture-url,public-profile-url,formatted-name)', rn					'GET', array(rn						'format'= 'json'rn					), array('FailOnAccessError'= true), $userProfile);rn }rn }rn $success = $client- Finalize($success);rn}rnif ($client- exit) exit;rnif ($success) { rn			   rn		$social['oauth_provider'] = 'linkedin'; rn		$social['oauth_uid'] = $userProfile- id; rn $social['picture'] = $userProfile- pictureUrl;rn		$social['link'] = $userProfile- publicProfileUrl;rn				rn		$user['last_name'] = $userProfile- lastName;rn		$user['first_name'] = $userProfile- firstName;rn		$user['email'] = $userProfile- emailAddress;rnrn		$email = $userProfile- emailAddress;rnrn $this- socialcheck($social, $user, $email);		 rn		 rn} else {rn  $this- Session- setFlash($client- error,'error');rn}rnrn$this- redirect(array('plugin'= false, 'controller'= 'social', 'action' = 'linkedin'));rnrn}rnrnrnnow the function that updates our social users tables and users tablesrnrnthis function will be used for our facebook, google, linkedin, twitter and all other one click social login systemsrnrnrnfunction socialcheck($social, $user, $email) {rn	rn	$this- loadModel('UserSocial');rn	$options = array('conditions' = array('UserSocial.oauth_uid' = $social['oauth_uid']));rn	$findsocialuser = $this- UserSocial- find('first',$options);rn	rn	if(!empty($findsocialuser)){rn	rn		$userdata['id']	=	$findsocialuser['UserSocial']['id'];rn		$userdata['modified']	=	date("Y-m-d H:i:s");rn		rn		$this- UserSocial- save($userdata,false);rn		$social_id = $findsocialuser['UserSocial']['id'];rn	rn	} else {rn		rn		$userdata = $social;	rn		$userdata['created']	=	date("Y-m-d H:i:s");rn		$userdata['modified']	=	date("Y-m-d H:i:s");rn		rn		$this- UserSocial- save($userdata,false);  rnrn	}rn rn		$this- loadModel('User');rn		rn		$options = array('conditions' = array('User.email' = $email));rn		$finduser = $this- User- find('first',$options);rn		rn		if($social['oauth_provider'] == 'google') { $data['google_id'] = $social['oauth_uid']; }rn		if($social['oauth_provider'] == 'facebook') { $data['facebook_id'] = $social['oauth_uid']; }rn		if($social['oauth_provider'] == 'linkedin') { $data['linkedin_id'] = $social['oauth_uid']; }rn rn	if(!empty($finduser)){rn		rn		$data['id']	=	$finduser['User']['id'];rn		$data['modified']	=	date("Y-m-d H:i:s");rn	rn		$this- User- save($data,false);rn		rn	} else {rn			rn		$data = $user;rn		// setting data to the user data that will contain the first names email addresses ectrn		rn		$data['password']	=	AuthComponent::password($user['firstname']);rn		// creating a password for the user in our database -- this can be emailed to the userrn	rn		$this- User- save($data, false);rn	rn	}rn}rnrn rn</description>
  </item>
</channel>
</rss>