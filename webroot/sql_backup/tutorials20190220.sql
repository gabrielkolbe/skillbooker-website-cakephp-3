 TRUNCATE tutorials;  INSERT INTO tutorials VALUES('1' , 'How do I set a default value in an input field with CakePHP?' , 'how-do-i-set-a-default-value-in-an-input-field-with-cakephp-' , '1' , '20' , '1' , 'setting a default input value in an input field in cakephp' , '<p>You add it in the array like so:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>echo $form-&gt;input(&#39;email&#39;,array(&#39;default&#39;=&gt;&#39;enter your email address&#39;));</code></pre>\r\n</blockquote>\r\n' , 'gabriel kolbe' , '2' , '306' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('2' , 'How do I check if an array in empty in php?' , 'how-do-i-check-if-an-array-in-empty-in-php-' , '3' , '20' , '1' , 'How do I check if an array in empty in php?' , '<p>Even if an array seems empty like this</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>if($thisisarray[&#39;something&#39;] == &#39;&#39;) {} </code></pre>\r\n</blockquote>\r\n\r\n<p><code>it might not seems empty enough! as there might be 0&#39;s</code></p>\r\n\r\n<p><code>to do a check do it like this:</code><br />\r\n<code>remove all 0&#39;s and &#39;&#39; then check for empty</code></p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$errors = array_filter($thisisarray);\r\nif (!empty($thisisarray)) { echo &#39;do something&#39;; }</code></pre>\r\n</blockquote>\r\n\r\n<p><code>array_filter()</code>&nbsp;function&#39;s default behavior will remove all values from array which are equal to&nbsp;<code>null</code>,&nbsp;<code>0</code>,&nbsp;<code>&#39;&#39;</code>&nbsp;or&nbsp;<code>false</code>.</p>\r\n' , 'Gabriel Kolbe' , '2' , '239' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('5' , 'Another box model hack alternative' , 'another-box-model-hack-alternative' , '2' , '20' , '1' , '' , '<p>The&nbsp;<a href=\"http://tantek.com/CSS/Examples/boxmodelhack.html\">box model hack</a>&nbsp;is used to fix a rendering problem in pre-IE&nbsp;6 browsers on&nbsp;PC, where by the border and padding are&nbsp;<em>included</em>&nbsp;in the width of an element, as opposed to&nbsp;<em>added on</em>. A number ofCSS-based solutions have been put forward to remedy this, so here&#39;s another one which we really like:</p>\r\n\r\n<p><code>padding: 2em;<br />\r\nborder: 1em solid green;<br />\r\nwidth: 20em;<br />\r\nwidth/**/:/**/ 14em;</code></p>\r\n\r\n<p>The first width command is read by all browsers; the second by all browsers&nbsp;<em>except</em>&nbsp;IE5.x on&nbsp;PC. Because the&nbsp;<strong>second command comes second it takes precedence over the first</strong>&nbsp;- any command that comes second will always override a preceding command. So, how does all this work?</p>\r\n\r\n<p>By placing empty comment tags (/**/) before the colons,&nbsp;IE5.0 will ignore the command. Likewise, by placing these empty comment tags after the colon,&nbsp;IE5.5 will ignore the command. By using these two rules in conjunction with each other, we can hide the command from all of&nbsp;IE5.x.</p>\r\n' , '' , '1' , '190' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('4' , 'Block vs. inline level elements' , 'block-vs-inline-level-elements' , '2' , '20' , '1' , '' , '<p>Almost all&nbsp;HTML&nbsp;elements are either block or inline elements. The&nbsp;<strong>characteristics of block elements&nbsp;</strong>include:</p>\r\n\r\n<ul>\r\n	<li>Always begin on a new line</li>\r\n	<li>Height, line-height and top and bottom margins can be manipulated</li>\r\n	<li>Width defaults to 100% of their containing element, unless a width is specified</li>\r\n</ul>\r\n\r\n<p>Examples of block elements include&nbsp;<code>&lt;div&gt;</code>,&nbsp;<code>&lt;p&gt;</code>,&nbsp;<code>&lt;h1&gt;</code>,&nbsp;<code>&lt;form&gt;</code>,&nbsp;<code>&lt;ul&gt;</code>&nbsp;and&nbsp;<code>&lt;li&gt;</code>.&nbsp;<strong>Inline elements</strong>&nbsp;on the other hand have the&nbsp;<strong>opposite characteristics</strong>:</p>\r\n\r\n<ul>\r\n	<li>Begin on the same line</li>\r\n	<li>Height, line-height and top and bottom margins can&#39;t be changed</li>\r\n	<li>Width is as long as the text/image and can&#39;t be manipulated</li>\r\n</ul>\r\n\r\n<p>Examples of inline elements include&nbsp;<code>&lt;span&gt;</code>,&nbsp;<code>&lt;a&gt;</code>,&nbsp;<code>&lt;label&gt;</code>,&nbsp;<code>&lt;input&gt;</code>,&nbsp;<code>&lt;img&gt;</code>,&nbsp;<code>&lt;strong&gt;</code>&nbsp;and<code>&lt;em&gt;</code>.</p>\r\n\r\n<p>To change an element&#39;s status you can use&nbsp;<code>display: inline</code>&nbsp;or&nbsp;<code>display: block</code>. But what&#39;s the point of changing an element from being block to inline, or vice-versa? Well, at first it may seem like you might hardly ever use this, but in actual fact this is a very powerful technique, which you can use any time you want to:</p>\r\n\r\n<ul>\r\n	<li>Have an inline element start on a new line</li>\r\n	<li>Have a block element start on the same line</li>\r\n	<li>Control the width of an inline element (particularly useful for navigation links)</li>\r\n	<li>Manipulate the height of an inline element</li>\r\n	<li>Set a background colour as wide as the text for block elements, without having to specify a width</li>\r\n</ul>\r\n' , '' , '1' , '190' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('6' , 'Minimum width for a page' , 'minimum-width-for-a-page' , '2' , '20' , '1' , '' , '<p>It is not every day that things get handed to you to help you along, one of those is the&nbsp;&nbsp;CSS&nbsp;command that exists is the&nbsp;<code>min-width</code>&nbsp;command, whereby you can specify a minimum width for any element. This can be particularly useful for specifying a minimum width for a page.</p>\r\n\r\n<p>Unfortunately,&nbsp;IE&nbsp;doesn&#39;t understand this command, so we&#39;ll need to come up with a new way of making this work in this browser. First, we&#39;ll insert a&nbsp;<code>&lt;div&gt;</code>&nbsp;under the&nbsp;<code>&lt;body&gt;</code>&nbsp;tag, as we&nbsp;<strong>can&#39;t assign a minimum width to the&nbsp;<code>&lt;body&gt;</code></strong>:</p>\r\n\r\n<p><code>&lt;body&gt;<br />\r\n&lt;div id=&quot;container&quot;&gt;</code></p>\r\n\r\n<p>Next we create our&nbsp;CSS&nbsp;commands, so as to create a minimum width of 600px:</p>\r\n\r\n<p><code>#container<br />\r\n{<br />\r\nmin-width: 600px;<br />\r\nwidth:expression(document.body.clientWidth &lt; 600? &quot;600px&quot;: &quot;auto&quot; );<br />\r\n}</code></p>\r\n\r\n<p>The first command is the regular minimum width command; the second is a short JavaScript command that only&nbsp;IE&nbsp;understands. Do note though, this command will cause your&nbsp;CSS&nbsp;document to invalidate so you may prefer to insert it into the head of each&nbsp;HTML&nbsp;document to get round this.</p>\r\n\r\n<p>You might also want to combine this minimum width with a maximum width:</p>\r\n\r\n<p><code>#container<br />\r\n{<br />\r\nmin-width: 600px;<br />\r\nmax-width: 1200px;<br />\r\nwidth:expression(document.body.clientWidth &lt; 600? &quot;600px&quot; : document.body.clientWidth &gt; 1200? &quot;1200px&quot; : &quot;auto&quot;);<br />\r\n}</code></p>\r\n' , '' , '1' , '213' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('7' , 'IE and width & height issues' , 'ie-and-width-height-issues' , '2' , '20' , '1' , '' , '<p>E&nbsp;has a rather strange way of doing things. It doesn&#39;t understand the&nbsp;<code>min-width</code>&nbsp;and&nbsp;<code>min-height</code>&nbsp;commands, but instead interprets&nbsp;<code>width</code>&nbsp;and&nbsp;<code>height</code>&nbsp;as&nbsp;<code>min-width</code>&nbsp;and&nbsp;<code>min-height</code>- go figure!</p>\r\n\r\n<p>This can cause problems, because we may need boxes to be resizable should more text need to go in them or should the user resize text. If we only use the&nbsp;<code>width</code>&nbsp;and&nbsp;<code>height</code>&nbsp;commands on a box then non-IE&nbsp;browsers won&#39;t allow the box to resize. If we only use the&nbsp;<code>min-width</code>&nbsp;and&nbsp;<code>min-height</code>&nbsp;commands though then we can&#39;t control the width or height in&nbsp;IE!</p>\r\n\r\n<p>This can be especially problematic when using&nbsp;<strong>background images</strong>. If you&#39;re using a background image that&#39;s 80px wide and 35px high, then you&#39;ll want to make sure that the default size for a box using this image is exactly 80 x 35px. However, if users resize the text then the box size will need to expand gracefully.</p>\r\n\r\n<p>To&nbsp;<strong>resolve this problem</strong>, you can use the following code for a box with&nbsp;<code>class=&quot;box&quot;</code>:</p>\r\n\r\n<p><code>.box<br />\r\n{<br />\r\nwidth: 80px;<br />\r\nheight: 35px;<br />\r\n}<br />\r\n<br />\r\nhtml&gt;body .box<br />\r\n{<br />\r\nwidth: auto;<br />\r\nheight: auto;<br />\r\nmin-width: 80px;<br />\r\nmin-height: 35px;<br />\r\n}</code></p>\r\n\r\n<p>All browsers will read through the first&nbsp;CSS&nbsp;rule but&nbsp;IE&nbsp;will ignore the second rule because it makes use of the&nbsp;<a href=\"http://meyerweb.com/eric/articles/webrev/200006b.html\">child selector command</a>. Non-IE&nbsp;browsers will read through the second one and will override the values from the first rule because this&nbsp;CSS&nbsp;rule is more specific, and&nbsp;<strong>CSS&nbsp;rules that are more specific always override those that are less specific</strong>.</p>\r\n' , '' , '1' , '158' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('8' , 'Text-transform command' , 'text-transform-command' , '2' , '20' , '1' , '' , '<p>One of the lesser known, but really useful&nbsp;CSS&nbsp;commands is the&nbsp;<code>text-transform</code>&nbsp;command. Three of the more common values for this rule are:&nbsp;<code>text-transform: uppercase</code>,&nbsp;<code>text-transform: lowercase</code>&nbsp;and&nbsp;<code>text-transform: capitalize</code>. The first rule turns all characters into capital letters, the second turns them all into small letters, and the third makes the first letter of each word capitals.</p>\r\n\r\n<p>This command is incredibly useful to help&nbsp;<strong>ensure consistency in style across an entire website</strong>, particularly if there a number of content editors. Say for example your style guide dictates that words in headings must always begin with capital letters. To ensure that this is always the case, use&nbsp;<code>text-transform: capitalize</code>. Even if site editors forget about the capitalisation, their mistake won&#39;t show up on the website.</p>\r\n\r\n<p>It&#39;s also preferable to&nbsp;<strong>use&nbsp;<code>text-transform: uppercase</code>&nbsp;to capitalise words</strong>, as screen readers may pronounce shorter words in capital letters as acronyms. A great example of this is &lsquo;CONTACT US&rsquo;, which is pronounced as &lsquo;contact U S&rsquo; by some screen readers.</p>\r\n' , '' , '1' , '218' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('9' , 'Disappearing text or images in IE?' , 'disappearing-text-or-images-in-ie-' , '2' , '20' , '1' , '' , '<p>E&nbsp;has a very strange bug where text or background images sometimes disappears from sight. These items are still actually there, and if you highlight everything on screen or hit refresh they&#39;ll often re-appear. Kind of strange, huh?</p>\r\n\r\n<p>This problem mostly occurs on background images and on text next to a floated element. To&nbsp;<strong>remedy the problem</strong>, simply insert&nbsp;<code>position: relative</code>&nbsp;into the CSS command for the disappearing element, and for some bizarre reason that&#39;ll usually fix the problem. If this doesn&#39;t work (it sometimes doesn&#39;t), assign a width to the offending element in the CSS and that should fix the problem.</p>\r\n' , '' , '1' , '149' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('13' , 'Invisible text' , 'invisible-text' , '2' , '20' , '1' , '' , '<p>Sometime you may actually want to make text invisible. Invisible text can be especially&nbsp;<strong>useful for screen reader users</strong>, perhaps to assign a label to a form item or insert a heading ahead of a section. Don&#39;t want to change the visual appearance by inserting these? Make them invisible and no one using a visual browser knows that they&#39;re there.</p>\r\n\r\n<p>You may also want to make text invisible if using a&nbsp;<strong>print or handheld&nbsp;CSS</strong>&nbsp;file, as some information may not need to be displayed on either of these mediums (see below for more on this).</p>\r\n\r\n<p>To make text invisible you can use&nbsp;<code>display: none</code>&nbsp;- easy! This works fine for hiding text from handhelds (if&nbsp;CSS&nbsp;is supported) and printed web pages, but isn&#39;t so great for many screen readers. Screen readers are now becoming too clever for their own good, and some will actually ignore the any text that has the rule&nbsp;<code>display: none</code>&nbsp;assigned to it.</p>\r\n\r\n<p>For screen readers users therefore, a new approach is needed:&nbsp;<code>position: absolute; left: -9000px</code>. This basically takes the text and positions it 9000px to the left of the left edge of the screen, essentially making it invisible.</p>\r\n' , '' , '1' , '208' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('14' , 'CSS document for handhelds' , 'css-document-for-handhelds' , '2' , '20' , '1' , '' , '<p>A separate&nbsp;CSS&nbsp;document can be created for&nbsp;PDAs and mobile phones, and only activated when one of these devices is being used to access your site. More and more websites are creating separate<a href=\"http://www.alistapart.com/articles/goingtoprint/\">CSS&nbsp;documents for printing</a>, so web pages automatically become print-friendly when users choose to print them. You can also do the same for handheld devices.</p>\r\n\r\n<p>The following command is used to call up the&nbsp;CSS&nbsp;document for handhelds:</p>\r\n\r\n<p><code>&lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;handheldstyle.css&quot;&nbsp;<strong>media=&quot;handheld&quot;</strong>/&gt;</code></p>\r\n\r\n<p>CSS&nbsp;commands in the handheld&nbsp;CSS&nbsp;file override any equivalent commands in the main&nbsp;CSSdocument. So, what commands should you place in this file?</p>\r\n\r\n<p>Ideally, you want handheld web users to&nbsp;<strong>avoid having to scroll across</strong>. To test this, open up your website in a regular browser window and resize it to 150px in width. Then, open up your main&nbsp;CSS&nbsp;file and insert some new commands at the very bottom of the document. The commands you place here should adjust the layout of the website so that it doesn&#39;t require horizontal scrolling at a 150px width. Then, open up a new document, cut and paste these new commands over, and save it as handheldstyle.css (or whatever name you want to give it).</p>\r\n\r\n<p>What your website offers to handheld web users should be quite different to what it offers on traditional web browsers, as the user experience is quite different. For further information, a book such as&nbsp;<a href=\"http://www.amazon.co.uk/exec/obidos/ASIN/0470844469/ref=pd_ecc_rvi_3/026-2336786-5677265\">Handheld Usability</a>&nbsp;is a great read.</p>\r\n' , '' , '1' , '216' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('15' , '3-d push button effect' , '3-d-push-button-effect' , '2' , '20' , '1' , '' , '<p>ack in the early days of the web, 3-d buttons that appeared to become pushed in when moused over were all the rage. At that time, this could only be achieved through images and JavaScript, but now with the advent of&nbsp;CSS&nbsp;we can go all retro and re-create this effect:</p>\r\n\r\n<p>The&nbsp;<strong>main&nbsp;CSS&nbsp;commands</strong>&nbsp;you&#39;ll need are:</p>\r\n\r\n<p><code>a {<br />\r\ndisplay: block;<br />\r\nborder: 1px solid;<br />\r\nborder-color: #aaa #000 #000 #aaa;<br />\r\nwidth: 8em;<br />\r\nbackground: #fc0;<br />\r\n}<br />\r\n<br />\r\na:hover<br />\r\n{<br />\r\nposition: relative;<br />\r\ntop: 1px;<br />\r\nleft: 1px;<br />\r\nborder-color: #000 #aaa #aaa #000;<br />\r\n}</code></p>\r\n\r\n<p>Aside from these commands, you can insert any other commands to achieve the desired presentation effect - the only limit is your imagination!</p>\r\n' , '' , '1' , '207' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('16' , 'Name navigation code on every page' , 'ame-navigation-code-on-every-page' , '2' , '20' , '1' , '' , '<p>Most websites highlight the navigation item of the user&#39;s location in the website, to help users orientate themselves. This is a fundamental requirement for basic usability, but can be a pain as you&#39;ll need to tweak the&nbsp;HTML&nbsp;code behind the navigation for each and every page. So can we have the best of both worlds? Is it possible to have the&nbsp;<strong>navigation highlighted on every page, without having to tweak the&nbsp;HTML&nbsp;code</strong>&nbsp;on each and every page? Of course it is...</p>\r\n\r\n<p>First of all, you&#39;ll need to assign a class to each navigation item:</p>\r\n\r\n<p><code>&lt;ul&gt;<br />\r\n&lt;li&gt;&lt;a href=&quot;#&quot;&nbsp;<strong>class=&quot;home&quot;</strong>&gt;Home&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;li&gt;&lt;a href=&quot;#&quot;&nbsp;<strong>class=&quot;about&quot;</strong>&gt;About us&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;li&gt;&lt;a href=&quot;#&quot;&nbsp;<strong>class=&quot;contact&quot;</strong>&gt;Contact us&lt;/a&gt;&lt;/li&gt;<br />\r\n&lt;/ul&gt;</code></p>\r\n\r\n<p>You&#39;ll then need to&nbsp;<strong>insert an&nbsp;<code>id</code>&nbsp;into the&nbsp;<code>&lt;body&gt;</code></strong>&nbsp;tag. The&nbsp;<code>id</code>&nbsp;should be representative of where users are in the site and should change when users move to a different site section. When in &lsquo;Home&rsquo; it should read&nbsp;<code>&lt;body id=&quot;home&quot;&gt;</code>, in &lsquo;About Us&rsquo; it should be&nbsp;<code>&lt;body id=&quot;about&quot;&gt;</code>&nbsp;and in &lsquo;Contact Us&rsquo;&nbsp;<code>&lt;body id=&quot;contact&quot;&gt;</code>.</p>\r\n\r\n<p>Next, you create a new&nbsp;CSS&nbsp;rule:</p>\r\n\r\n<p><code>#home .home, #about .about, #contact .contact<br />\r\n{<br />\r\n<em>commands for highlighted navigation go here</em><br />\r\n}</code></p>\r\n\r\n<p>This basically creates a rule that only takes effect when&nbsp;<code>class=&quot;home&quot;</code>&nbsp;is contained within<code>id=&quot;home&quot;</code>, and when&nbsp;<code>class=&quot;about&quot;</code>&nbsp;is in&nbsp;<code>id=&quot;about&quot;</code>&nbsp;and&nbsp;<code>class=&quot;contact&quot;</code>&nbsp;is in<code>id=&quot;contact&quot;</code>. These situations will only occur when the user is in the appropriate site section, seamlessly creating our highlighted navigation item.</p>\r\n' , '' , '1' , '335' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('18' , 'How do I check if a string contains a value in php?' , 'how-do-i-check-if-a-string-contains-a-value-in-php-' , '3' , '20' , '1' , '' , '<blockquote>\r\n<pre>\r\n<code>Look for needle in haystack..\r\n\r\nif (strpos($haystack,&#39;needle&#39;) !== false) {\r\n    echo &#39;true&#39;;\r\n}</code></pre>\r\n</blockquote>\r\n\r\n<p>&nbsp;!== &nbsp;is better than != AND === better than ==&nbsp;</p>\r\n' , '' , '2' , '203' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('19' , 'cakephp: How to set default value in select dropdown list' , 'cakephp-how-to-set-default-value-in-select-dropdown-list' , '1' , '20' , '1' , 'cakephp: How to set default value in select dropdown list' , '<blockquote>\r\n<pre>\r\n<code>$this-&gt;Form-&gt;input(&#39;Country.id&#39;, array(&#39;type&#39;=&gt;&#39;select&#39;, &#39;label&#39;=&gt;&#39;Countries&#39;, &#39;options&#39;=&gt;$countrylist, &#39;default&#39;=&gt;&#39;3&#39;));</code></pre>\r\n</blockquote>\r\nThe default value can be a variable that can be \'set\' in the controller and passed to the view..\r\n' , '' , '1' , '1275' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('20' , 'How to create a left and right bracket in css' , 'how-to-create-a-left-and-right-bracket-in-css' , '2' , '20' , '1' , '' , '<p>Left and right html can be inserted into an css element, like a square or curley bracket, percentage sign, or currency sign like a dollar or a pound sign<br />\r\n&nbsp;</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>&lt;span class=&quot;b&quot;&gt;text&lt;/span&gt;  \r\n &lt;style&gt;\r\n.b:after{content:&quot;]&quot;}\r\n.b:before{content:&quot;[&quot;}\r\n&lt;/style&gt;</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '186' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('21' , 'How do I retrieve one value from a database in cakephp?' , 'how-do-i-retrieve-one-value-from-a-database-in-cakephp-' , '1' , '20' , '1' , '' , '<p>You can retrieve a single value in more than one way in cakephp&nbsp;</p>\r\n\r\n<p>either like so:</p>\r\n\r\n<blockquote>\r\n<p>$value = $this-&gt;model-&gt;field(&#39;fieldname&#39;, array(&#39;fieldid&#39; -&gt;$vlaue));</p>\r\n\r\n<p>$logincount = $this-&gt;User-&gt;field(&#39;logincount&#39;, array(&#39;id&#39; =&gt; $login_user[&#39;id&#39;]));</p>\r\n</blockquote>\r\n\r\n<p>or like so:</p>\r\n\r\n<blockquote>\r\n<p>$logincount = $this-&gt;User-&gt;find(&#39;first&#39;, array(&#39;conditions&#39; =&gt; array(&#39;id&#39; =&gt; $login_user[&#39;id&#39;])));</p>\r\n</blockquote>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '2' , '324' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('29' , 'The difference between a Component and Plugin in Cakephp' , 'the-difference-between-a-component-and-plugin-in-cakephp' , '1' , '20' , '1' , 'Explain the main difference between an component and plugin in cakephp' , '<p>Components and Plugins add new functionality to the Cakephp application.&nbsp;</p>\r\n\r\n<p>Components and Plugins are still separate entities in Cake 2.0. Components are &quot;are packages of logic that are shared between controllers&quot;, where as Plugins&nbsp;are &quot;a website/cakephp application&nbsp;of controllers, models, and views&quot;. which can almost run on it&#39;s own, but extend the &#39;father&#39; site.</p>\r\n\r\n<p>Compoments extend the base Component class, while Plugins have their own AppModel and AppController.</p>\r\n\r\n<p>Think of a plugin as a separate Cake application sharing the same core libraries with your main application.</p>\r\n' , '' , '1' , '290' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('22' , 'How do I update a single database  field in cakephp?' , 'how-do-i-update-a-single-database-field-in-cakephp-' , '1' , '20' , '1' , '' , '<p>You can update a single database field in cakephp so:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$this-&gt;Model-&gt;id = $id;\r\n$this-&gt;Model-&gt;saveField(&#39;myfieldtoupdate&#39;, $fieldtoupdatevalue);</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '389' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('23' , 'functions vs Public functions in Cakephp or MVC OOP' , 'functions-vs-public-functions-in-cakephp-or-mvc-oop' , '3' , '20' , '1' , '' , '<p><strong>If you have two function one</strong></p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>public function name()\r\n{\r\n    ...content here\r\n}</code></pre>\r\n</blockquote>\r\n\r\n<p><strong><code>the other&nbsp;</code></strong></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>function name()\r\n{\r\n    ...content here\r\n}</code></pre>\r\n</blockquote>\r\n\r\n<p>..They are the same, but Public function is better code practice and more explicit, the default is &#39;public&#39; and forces developers to consider their method visibility. The methods that are available are: public, private and protected</p>\r\n' , '' , '1' , '216' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('24' , 'How to reset the User data in session when changes are made' , 'how-to-reset-the-user-data-in-session-when-changes-are-made' , '1' , '20' , '1' , '' , '<p>When a user&#39;s profile is updated, you want to reset the user details which are set when registering/login by the auth component</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>you do it like so:</p>\r\n\r\n<blockquote>\r\n<p>$this-&gt;Session-&gt;write(&#39;Auth&#39;, $this-&gt;User-&gt;read(null, $user_id));</p>\r\n</blockquote>\r\n\r\n<p>or try</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$this-&gt;Session-&gt;write(&#39;Auth&#39;, $this-&gt;User-&gt;read(null, $this-&gt;Auth-&gt;User(&#39;id&#39;)));</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '299' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('25' , 'How remove the title from the input field in cakephp' , 'how-remove-the-title-from-the-input-field-in-cakephp' , '1' , '20' , '1' , '' , '<p>To remove the title from the input field in cakephp &nbsp;go from:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>echo $form-&gt;input(&#39;title&#39;);</code></pre>\r\n</blockquote>\r\n\r\n<p><code>to</code></p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>echo $form-&gt;input(&#39;title&#39;, array(&#39;label&#39; =&gt; false));</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '297' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('26' , 'How to set the value attribute of a hidden field in the form helper in cakephp' , 'how-to-set-the-value-attribute-of-a-hidden-field-in-the-form-helper-in-cakephp' , '1' , '20' , '1' , '' , '<p>In order to set the value of a hidden field in cakephp you can do it like this:</p>\r\n\r\n<blockquote>\r\n<p>echo &nbsp;$form-&gt;hidden( &#39;Model.name&#39;, array( &#39;value&#39; =&gt; &#39;fieldvalue&#39; ) );&nbsp;</p>\r\n</blockquote>\r\n' , '' , '2' , '951' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('27' , 'How to see if value exists in comma separated string in php' , 'how-to-see-if-value-exists-in-comma-separated-string-in-php' , '3' , '20' , '1' , '' , '<p>You can check if a value in a comma separated string exists in a few ways one way is:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$list = &#39;1,2,3,4,5,6&#39;;\r\n</code></pre>\r\n\r\n<pre>\r\n<code>$commaseparatedlist = explode(&#39;,&#39;,$list);\r\nif (in_array(2, $commaseparatedlist)) {\r\n  echo &quot;Available&quot;;\r\n} else {\r\n  echo &quot;Not available&quot;;\r\n}</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '1280' , '2016-06-01' , '2018-01-19' ); INSERT INTO tutorials VALUES('28' , 'Place javascript script for each individual element being loaded cakephp' , 'place-javascript-script-for-each-individual-element-being-loaded-cakephp' , '1' , '20' , '1' , '' , '<p>In order to display an individual javascript file for each spesific element in Cakephp, in the layout put:</p>\r\n\r\n<blockquote>\r\n<p>&lt;?php echo $scripts_for_layout; ?&gt;</p>\r\n</blockquote>\r\n\r\n<p>Then in the element you can call the javascript file you need to include, like so:</p>\r\n\r\n<blockquote>\r\n<p><!--?php $this--->Html-&gt;script(&quot;js_file&quot;, array(&quot;inline&quot;=&gt;false)); ?&gt;</p>\r\n</blockquote>\r\n' , '' , '1' , '302' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('30' , 'Display li elements next to each other' , 'display-li-elements-next-to-each-other' , '2' , '20' , '1' , 'Ho to make <li> elements display next to each other' , '<p>The way to get the &lt;li&gt; elements to display next to each other is by simply place a<strong> &#39;float:left&#39; </strong>style on the li element</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>.menu-left ul li {\r\n    display:inline-block;\r\n    float:left;\r\n    vertical-align: top;\r\n}</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '204' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('31' , 'Remove the comma from beginning or end of string with php' , 'remove-the-comma-from-beginning-or-end-of-string-with-php' , '3' , '20' , '1' , 'Remove the comma from beginning or end of string with php' , '<p>Here is how to&nbsp;remove the comma from beginning or end of string with php:</p>\r\n\r\n<p>right part of string:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$string = rtrim($string, &#39;,&#39;);</code></pre>\r\n</blockquote>\r\n\r\n<p>left part of string</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$string = ltrim($string, &#39;,&#39;);</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '217' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('32' , 'Styling every second ol or li or other element in css' , 'styling-every-second-ol-or-li-or-other-element-in-css' , '2' , '20' , '1' , 'Styling every second ol or li or other element in css' , '<p>Here is how you style every second li, or lo or other element in css:</p>\r\n\r\n<p>the even:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>ul li:</code>nth-child(even)<code> {\r\n    border: #ccc 1px solid;\r\n}</code></pre>\r\n</blockquote>\r\n\r\n<p><code>the odd:</code></p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>ul li:</code>nth-child(even)<code> {\r\n    border: #ccc 1px solid;\r\n}</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '423' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('33' , 'How to debug save() on cakephp' , 'how-to-debug-save-on-cakephp' , '1' , '20' , '1' , 'How to debug save() on cakephp' , '<pre>\r\nMake sure beforeSave() returns true. \r\n<code>\r\nif($this-&gt;save($this-&gt;data)) {\r\n  echo &#39;worked&#39;;\r\n} else {\r\n  echo &#39;failed&#39;;\r\n}</code></pre>\r\n' , '' , '1' , '285' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('39' , 'How to find your temp ftp backup PSPAD files on windows 7' , 'how-to-find-your-temp-ftp-backup-pspad-files-on-windows-7' , '6' , '20' , '1' , 'How to find your temp ftp backup PSPAD files on windows 7' , '<p>It can be an unending search if you have accidentally deleted a file or made some changes and you want to restore it and you don&#39;t have any other copies. The one option if you use PSPAD is, it stores your ftp files locally and you might be able to retrieve it.</p>\r\n\r\n<blockquote>\r\n<p>In windows 7 you can go to C: USERS/computer-username/AppData/Local/Temp/Pspad/name-of-your-ftp-connection/</p>\r\n</blockquote>\r\n\r\n<p>Make sure that all hidden files are viewable in the Control Panel</p>\r\n' , '' , '2' , '480' , '2016-06-01' , '2018-01-19' ); INSERT INTO tutorials VALUES('40' , 'How to remove the last comma or character from a string list' , 'how-to-remove-the-last-comma-or-character-from-a-string-list' , '3' , '20' , '1' , 'How to remove the last comma or character from a string list' , '<p>You can remove the last comma, or character from a string - which which when you loop through a comma seperated list, can break the loop because the last value is empty after the last comma, so you want to remove it before you loop through the list.</p>\r\n\r\n<p>By doing this:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$string = &quot;&#39;name&#39;, &#39;name2&#39;, &#39;name3&#39;,&quot;;\r\n$string = rtrim($string,&#39;,&#39;);</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '188' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('41' , 'Parameters via the URL to next page in Cakephp' , 'parameters-via-the-url-to-next-page-in-cakephp' , '1' , '20' , '1' , 'how to send and receive parameters in cakephp via url in cakephp' , '<p>Sometimes the most simplistic things in php can be a headace in a framework like cakephp.</p>\r\n\r\n<p>You can move parameters in two ways. Either use a named parameter where you call it by name or a un-named parameter where it is just passed.<br />\r\nIn named:</p>\r\n\r\n<p><ins>You pass it like so:</ins></p>\r\n\r\n<blockquote>\r\n<p>&lt;?php &nbsp;if($records[&#39;User&#39;][&#39;tablename&#39;] &gt; 0) { echo $this-&gt;Html-&gt;link(__(&#39;title here&#39;,true),array(&#39;plugin&#39; =&gt; false, &#39;controller&#39;=&gt; &#39;user&#39;, &#39;action&#39;=&gt; &#39;index&#39;, &#39;userid&#39; =&gt; $records[&#39;User&#39;][&#39;id&#39;]),array(&#39;class&#39;=&gt;&#39;btn btn-primary&#39;,&#39;escape&#39;=&gt;false)); &nbsp;} ?&gt;</p>\r\n</blockquote>\r\n\r\n<p><ins>Then you receive it like:</ins></p>\r\n\r\n<pre>\r\n<code>echo $this-&gt;params[&#39;named&#39;][&#39;userid&#39;] // &#39;param&#39;</code>\r\n</pre>\r\n\r\n<p><ins><code>in un - named parameters you send like:</code></ins></p>\r\n\r\n<blockquote>\r\n<p><em>&lt;?php &nbsp;if($records[&#39;User&#39;][&#39;tablename&#39;] &gt; 0) { echo $this-&gt;Html-&gt;link(__(&#39;title here&#39;,true),array(&#39;plugin&#39; =&gt; false &#39;controller&#39;=&gt; &#39;user&#39;, &#39;action&#39;=&gt; &#39;index&#39;,&nbsp;$records[&#39;User&#39;][&#39;id&#39;]),array(&#39;class&#39;=&gt;&#39;btn btn-primary&#39;,&#39;escape&#39;=&gt;false)); &nbsp;} ?&gt;</em></p>\r\n</blockquote>\r\n\r\n<p><ins>Then you receive like:</ins></p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>echo $this-&gt;params[&#39;pass&#39;][0] // &#39;passed_param&#39;</code></pre>\r\n</blockquote>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '239' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('42' , 'How to integrate CKEditor and KCFinder with Cakephp' , 'how-to-integrate-ckeditor-and-kcfiinder-with-cakephp' , '1' , '20' , '1' , 'How to integrate CKEditor and KCFiinder with Cakephp' , '<p>CKFinder is not free but in Cakephp you can integrate KCFinder file manager into CKEditor so that you can upload files to your server.</p>\r\n\r\n<h2>The following instructions were made based on a following versions of software:</h2>\r\n\r\n<ul>\r\n	<li>CakePHP 2.0.5</li>\r\n	<li>CKEditor 3.6.2</li>\r\n	<li>KCFinder&nbsp;2.51</li>\r\n</ul>\r\n\r\n<h2>How to install and integrate CKEditor to CakePHP?</h2>\r\n\r\n<ol>\r\n	<li>Download&nbsp;<em>CKEditor</em>&nbsp;from&nbsp;<a href=\"http://www.ckeditor.com/\" target=\"_blank\">www.ckeditor.com</a></li>\r\n	<li>Copy files from the zipped folder to &quot;webroot/js/ckeditor/&quot;</li>\r\n	<li>In the view where you want to display the editor, put the following script on the top of the page (or somewhere before textarea which you want to contain editor):\r\n	<blockquote>&lt;?php echo $this-&gt;Html-&gt;script(&#39;ckeditor/ckeditor&#39;);?&gt;</blockquote>\r\n	This scipt will include the &quot;webroot/js/ckeditor.js&quot; file to your view.</li>\r\n	<li>Create the textarea and give it a class named &quot;ckeditor&quot;\r\n	<blockquote>&lt;?php echo $this-&gt;Form-&gt;textarea(&#39;content&#39;,array(&#39;class&#39;=&gt;&#39;ckeditor&#39;))?&gt;</blockquote>\r\n	</li>\r\n</ol>\r\n\r\n<p>Voila! The editor is now displaying instead of raw textarea.</p>\r\n\r\n<h2>How to install and integrate KCFinder to CakePHP?</h2>\r\n\r\n<ol>\r\n	<li>Download&nbsp;<em>KCFinder</em>&nbsp;from&nbsp;<a href=\"http://kcfinder.sunhater.com/\" target=\"_blank\">kcfinder.sunhater.com</a></li>\r\n	<li>Copy files from the zipped folder to &quot;webroot/js/kcfinder/&quot;</li>\r\n	<li>Open &quot;webroot/js/kcfinder/config.php&quot; file.<br />\r\n	In this file you can set several configurations, but we will focus on the ones that are most important for our file manager to work.<br />\r\n	<em>KCFinder</em>&nbsp;is disabled by default.<br />\r\n	If you want to give the ability of using file manager to all users in your website (so with no restrictions), change the value of &#39;disabled&#39; to false.\r\n	<blockquote>&#39;disabled&#39; =&gt; false,</blockquote>\r\n	But giving everyone access to managing files on the server is probably not a good idea. Instead of this, you can enable file managment only when a specified session variable is set. The name of the session variable is on the bottom of config.php file:\r\n\r\n	<blockquote>&#39;_sessionVar&#39; =&gt; &amp;$_SESSION[&#39;KCEDITOR&#39;],</blockquote>\r\n	So, this is what you should do to make the file manager available after an authenticated user logs in:\r\n\r\n	<ul>\r\n		<li>leave the &quot;disabled&quot; to &quot;true&quot;</li>\r\n		<li>in the controller where you do the user authentication, after user has successfully logged in, enter this code to override the &quot;disabled&quot; value:\r\n		<blockquote>$_SESSION[&#39;KCEDITOR&#39;][&#39;disabled&#39;]=false;</blockquote>\r\n		Remember to destroy this session variable after user logs out.&nbsp;</li>\r\n		<li>on the top of the &quot;webroot/js/kcfinder/core/autoload.php&quot; file insert:\r\n		<blockquote>session_name(&#39;CAKEPHP&#39;);</blockquote>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>Still in the &quot;config.php&quot; file define the folder for uploaded files. By default the folder is &quot;upload&quot; in &quot;kcfinder&quot; directory.&nbsp;<br />\r\n	If you are developing an application on your localhost and the &quot;webroot&quot; is under a &quot;http://localhost/&quot; address, and you want to keep uploaded files in &quot;webroot/upload&quot; folder, the &#39;uploadURL&#39; configuration should look like:\r\n	<blockquote>&#39;uploadURL&#39; =&gt; &quot;/app/webroot/upload&quot;,</blockquote>\r\n	If you are developing your application under for example &quot;http://localhost/my_app/&quot; address, the uploadURL should look like:\r\n\r\n	<blockquote>&#39;uploadURL&#39; =&gt; &quot;/my_app/app/webroot/upload&quot;,</blockquote>\r\n	</li>\r\n</ol>\r\n\r\n<p>You can test if&nbsp;<em>KCFinder</em>&nbsp;displays and works correctly under the URL:<br />\r\nhttp://<em>path_to_your_app</em>/js/kcfinder/browse.php<br />\r\n&nbsp;</p>\r\n\r\n<h2>How to integrate KCFinder to CKEditor in CakePHP?</h2>\r\n\r\n<p>Open the &quot;webroot/js/ckeditor/config.js&quot; file and modify editor config to contain following code:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<blockquote>CKEDITOR.editorConfig = function( config )<br />\r\n{<br />\r\n&nbsp;&nbsp; config.filebrowserBrowseUrl = &#39;/js/kcfinder/browse.php?type=files&#39;;<br />\r\n&nbsp;&nbsp; config.filebrowserImageBrowseUrl = &#39;/js/kcfinder/browse.php?type=images&#39;;<br />\r\n&nbsp;&nbsp; config.filebrowserFlashBrowseUrl = &#39;/js/kcfinder/browse.php?type=flash&#39;;<br />\r\n&nbsp;&nbsp; config.filebrowserUploadUrl = &#39;/js/kcfinder/upload.php?type=files&#39;;<br />\r\n&nbsp;&nbsp; config.filebrowserImageUploadUrl = &#39;/js/kcfinder/upload.php?type=images&#39;;<br />\r\n&nbsp;&nbsp; config.filebrowserFlashUploadUrl = &#39;/js/kcfinder/upload.php?type=flash&#39;;<br />\r\n};</blockquote>\r\n\r\n<p><br />\r\nIf your app is being developed under for example http://localhost/my_app/, remember to put the whole path in the URLs, for example:</p>\r\n\r\n<blockquote>config.filebrowserBrowseUrl = &#39;/my_app/js/kcfinder/browse.php?type=files&#39;;</blockquote>\r\n\r\n<p>After adding above six lines of code in the&nbsp;<em>CKEditor</em>&nbsp;configuration you should be able to see &quot;Browse&quot; button in image / link / Flash insert options.</p>\r\n' , '' , '1' , '969' , '2016-06-01' , '2018-01-19' ); INSERT INTO tutorials VALUES('43' , 'How to individually display css and javascript files for individual views in Cakephp' , 'how-to-individually-display-css-and-javascript-files-for-individual-views-in-cakephp' , '1' , '20' , '1' , 'Here is How to individually display css and javascript files for individual views in Cakephp. Function in the layout and set it in the view' , '<p>In the default.ctp layout.</p>\r\n\r\n<blockquote>\r\n<p>&nbsp; if(isset($cssIncludes)){<br />\r\n&nbsp; &nbsp; foreach($cssIncludes as $css){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo $this-&gt;Html-&gt;css($css);<br />\r\n&nbsp; &nbsp; }<br />\r\n}</p>\r\n\r\n<p>if(isset($jsIncludes)){<br />\r\n&nbsp; &nbsp; foreach($jsIncludes as $js){<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp;echo $this-&gt;Html-&gt;script($js);<br />\r\n&nbsp; &nbsp; }<br />\r\n}</p>\r\n</blockquote>\r\n\r\n<p>In the action of the view in the controller..</p>\r\n\r\n<blockquote>\r\n<p>$this-&gt;set(&#39;cssIncludes&#39;,array(&#39;my_css&#39;)); // this will link to /css/my_css.css in function<br />\r\n$this-&gt;set(&#39;jsIncludes&#39;,array(&#39;my_jsfile&#39;));&nbsp;</p>\r\n</blockquote>\r\n' , 'Gabriel Kolbe' , '1' , '219' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('44' , 'How do I concatenate a string' , 'how-do-i-concatenate-a-string' , '3' , '20' , '1' , 'How do I concatenate a string' , '<p>In PHP, string concatenation is done with the&nbsp;<code>.</code>&nbsp;operator:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$string .= &#39;my string&#39;;</code></pre>\r\n</blockquote>\r\n' , 'Gabriel Kolbe' , '1' , '305' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('45' , 'How to change the thickness of a hr tag in css' , 'how-to-change-the-thickness-of-a-hr-tag-in-css' , '2' , '20' , '1' , 'How to change the thickness of a hr tag in css' , '<p>Here is how to change the thickness of a hr tag &lt;hr&gt; in css or in line.</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>hr {\r\n    border: none;\r\n    height: 1px;\r\n    /* Set the hr color */\r\n    color: #333; /* old IE */\r\n    background-color: #333; /* Modern Browsers */\r\n}</code></pre>\r\n</blockquote>\r\n\r\n<p><code>inline:</code></p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>&lt;hr style=&quot;height:1px;border:none;color:#333;background-color:#333;&quot; /&gt;</code></pre>\r\n</blockquote>\r\n' , '' , '2' , '1302' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('46' , 'How do I render a view in a controller from another controller' , 'how_do_i_render_a_view_in_a_controller_from_another_controller' , '1' , '20' , '1' , 'How do I render a view in a controller from another controller' , '<p>You can render a view in a controller from another controller like so:</p>\r\n\r\n<blockquote>\r\n<p>$this -&gt; render(&#39;Controller/View&#39;);</p>\r\n</blockquote>\r\n' , 'Rendering a view in a controller from another controller' , '1' , '219' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('48' , 'Two ways to join tables the Cakephp way' , 'two_ways_to_join_tables_the_cakephp_way' , '1' , '20' , '1' , 'cakephp join tables' , '<p>There are two ways to join tables in Cakephp.</p>\r\n\r\n<h3><strong>First</strong></h3>\r\n\r\n<p>You would create a relationship with your User model and Messages Model, and use the containable behavior:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>class User extends AppModel {\r\n    public $actsAs = array(&#39;Containable&#39;);\r\n    public $hasMany = array(&#39;Message&#39;);\r\n}\r\n\r\nclass Message extends AppModel {\r\n    public $actsAs = array(&#39;Containable&#39;);\r\n    public $belongsTo = array(&#39;User&#39;);\r\n}</code></pre>\r\n</blockquote>\r\n\r\n<p>You need to change the&nbsp;<code>messages.from</code>&nbsp;column to be&nbsp;<code>messages.user_id</code>&nbsp;so that cake can automagically associate the records for you.</p>\r\n\r\n<p>Then you can do this from the messages controller:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$this-&gt;Message-&gt;find(&#39;all&#39;, array(\r\n    &#39;contain&#39; =&gt; array(&#39;User&#39;)\r\n    &#39;conditions&#39; =&gt; array(\r\n        &#39;Message.to&#39; =&gt; 4\r\n    ),\r\n    &#39;order&#39; =&gt; &#39;Message.datetime DESC&#39;\r\n));</code></pre>\r\n</blockquote>\r\n\r\n<h3><strong>The Second way</strong></h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>I recommend using the first method, because it will save you a lot of time and work. The first method also does the groundwork of setting up a relationship which can be used for any number of other find calls and conditions besides the one you need now. However, cakePHP does support a syntax for defining your own joins. It would be done like this, from the&nbsp;<code>MessagesController</code>:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$this-&gt;Message-&gt;find(&#39;all&#39;, array(\r\n    &#39;joins&#39; =&gt; array(\r\n        array(\r\n            &#39;table&#39; =&gt; &#39;users&#39;,\r\n            &#39;alias&#39; =&gt; &#39;UserJoin&#39;,\r\n            &#39;type&#39; =&gt; &#39;INNER&#39;,\r\n            &#39;conditions&#39; =&gt; array(\r\n                &#39;UserJoin.id = Message.from&#39;\r\n            )\r\n        )\r\n    ),\r\n    &#39;conditions&#39; =&gt; array(\r\n        &#39;Message.to&#39; =&gt; 4\r\n    ),\r\n    &#39;fields&#39; =&gt; array(&#39;UserJoin.*&#39;, &#39;Message.*&#39;),\r\n    &#39;order&#39; =&gt; &#39;Message.datetime DESC&#39;\r\n));</code></pre>\r\n</blockquote>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '2' , '226' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('49' , 'How to do a quick number count of a list in Cakephp' , 'how_to_do_a_quick_number_count_of_a_list_in_cakephp' , '1' , '20' , '1' , 'cakephp count list entries' , '<p>As documented in&nbsp;<a href=\"http://book.cakephp.org/2.0/en/models/retrieving-your-data.html\">http://book.cakephp.org/2.0/en/models/retrieving-your-data.html</a></p>\r\n\r\n<blockquote>\r\n<pre>\r\n<code>$totalUsers = $this-&gt;User-&gt;find(&#39;count&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.email&#39; =&gt; $email)));</code></pre>\r\n</blockquote>\r\n' , '' , '1' , '229' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('50' , '10 Criticisms Recruiters Regularly Receive' , '10_criticisms_recruiters_regularly_receive' , '7' , '20' , '1' , 'Criticisms Recruiters Regularly Receive, crappy emails, catch all job descriptions vague, resume docotoring, not testing candidates, pitchs' , '<p>Understandably, Recruiters is first and foremost sales people. The best sales people in the world are those who build up relationships with their clients and serve their needs, add value for their client. Sales people who are in it for the quick buck are exposed quickly and shunned. Here is a list of things recruiters do that make the client feel that they are only out for a quick buck.</p>\r\n\r\n<p><img src=\"/img/tutorials/apple.jpg\" style=\"float:right; max-width:100%\" /></p>\r\n\r\n<h2>NOT Testing candidates properly.</h2>\r\n\r\n<p>Many times candidates are not tested properly. Often the recruiter does not have the time or technical expertise to interview candidates properly. This should be more than just a phone call and a tick list. The phone call part is OK, but the recruiter need to know at least what questions to ask. Either send the candidate a list of answers and questions &nbsp;or send them an invitation to a SKILLBOOKER test to complete. Test send to candidates should not be longer than half an hour as candidates might apply for several jobs and it makes their life very difficult if they have to do a 3 hour test for each job they apply for. Interview questions can also be casually asked over the phone, they type of interview questions that the candidate will be asked when he/she actually go to the interview.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Catch-all Job Descriptions</h2>\r\n\r\n<p><ins><strong>Example:</strong></ins></p>\r\n\r\n<blockquote>\r\n<p>Over 7 years experience programming in Language X, Y, Z<br />\r\nStrong design principles.<br />\r\nSolid on coding fundamentals e.g. Object-Oriented design, data structures, and dependency injection.<br />\r\nExperience in enterprise-level integration technologies including X and Y, in Z<br />\r\nHands-on experience in widely used third party frameworks<br />\r\n[several more]</p>\r\n\r\n<p>The candidate must be highly self-motivated confident and mature, well developed analytical and problem solving skills with the aptitude to learn as well as a flexibility to adapt to change.<br />\r\nTeam player and proven ability to work under pressure and meet project dates</p>\r\n</blockquote>\r\n\r\n<p><br />\r\nCatch all job descriptions are bad in two ways, they will put serious candidates off and under mine your professional outlook.Also you might end up with list and list of the wrong kind of&nbsp;candidates !! Job descriptions should have the general location (at least) where the job is located, the sector, what primary and secondary skills are needed and if possible the salary or rate bracket.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Resume Doctoring</h2>\r\n\r\n<p>Don&#39;t do it !! If a candidate has 1 month of experience and you change it to 1 year it will not just be caught out in a proper interview, they candidate will be embarrassed when he/she is asked to do a technical test to prove he/she has a year&#39;s worth of experience in that technology. It will make the HR person - your client fed up that you have send - unvetted candidates to his/her door !!</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Don&#39;t hint just ask</h2>\r\n\r\n<p>Recruiters will phone candidates and ask shadowy questions about their past trying to find the contact person of where they lived before in order to drum up more business. Don&#39;t do it. Just ask properly. Like this: &#39;Hi Joe, I see you worked at Bla bla industries&#39; I would like to give them a call and see if they have any work for us, if they do we&#39;ll send you a &pound;200 gift. Joe can say &#39;yes&#39; or &#39;no&#39; respect that and respect people it will pay off&nbsp;in the long run.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Deliver what you promise</h2>\r\n\r\n<p>If you promise some one &pound;200 for introducing you to a candidate, make sure you get back to that person if you candidate get&#39;s the job and use your initiative and pay them. See it as sowing, that bit of taking care to pay someone who would not be the wise if you didn&#39;t will make the universe look after you. You will feel solid and next time you speak to someone promising &pound;200 you can do it with confidence knowing you are not lying.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Protect your candidates</h2>\r\n\r\n<p>Candidates are sometimes to be blamed for bad work, but sometimes they do get the short end of the stick. Protect your candidates. Make sure your contracts are good and decent. For instance if a candidate works over the Christmas / New Year period try and negotiate a day or two more breaks that what is expected. This will give the candidate more respect. Also you can offer the candidate extra money (weekend break? ) for completing contacts / introduction periods. This will please job providers and candidates equally.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Communicate properly</h2>\r\n\r\n<p>If a candidate did not get a job, contact him and tell him/her that properly and with care. Not returning phone calls or feedback is BAD. I know of candidates who has a little black list they keep with all the bad recruiters on there.Make sure you don&#39;t get on such a list.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Deliver what you advertise</h2>\r\n\r\n<p>If you advertise a job for &pound;200 a day, when the candidate get it give it for &pound;200 a day don&#39;t try and get the candidate to take it for &pound;180. It might be a sales man trick but very very irritated when you are the candidate one moment you are happy for getting a job the next moment you hear you have to sacrifice a portion of you income to a greedy recruitment consultant.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>Sounding arrogant</h2>\r\n\r\n<p>Friendliness and humility go a long way. As a recruiter you might not know that people are generally scarred of taking to you. For the candidate it is a very personal thing. Sensitivity and friendliness will put a candidate at ease and generally you will have more success. Try not to sound arrogant, irritable but just down to earth and professional and friendly</p>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '5' , '174' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('51' , 'CakePHP Cheat Sheet Cakephp version 2' , 'cakephp_cheat_sheet_cakephp_version_2' , '1' , '20' , '1' , 'Cakephp cheat sheet for version 2' , '<p><img src=\"/img/tutorials/cake-logo.png\" style=\"float:left\" /> CakePHP version 2 cheat sheet&nbsp;has been coming for a long time, but I have been looking for a spare day to just sit and go through it properly. In this cheatsheet (based on some other online examples) I am also going to reference other Cakephp examples found on the Skillbooker.com tutorial site.</p>\r\n\r\n<h2>CakePHP Naming Conventions</h2>\r\n\r\n<p>This is a list of the CakePHP naming conventions, specifically the CakePHP Model, View, and Controller naming conventions.</p>\r\n\r\n<p><strong>CakePHP Models</strong></p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li>class names are singular</li>\r\n	<li>class names UpperCamelCased</li>\r\n	<li>filenames use a lower-case underscored syntax</li>\r\n	<li>database tables are plural underscored</li>\r\n	<li>set var $name in your model definition (PHP4)</li>\r\n</ul>\r\n\r\n<p><strong>CakePHP Controllers</strong></p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li>class names are plural</li>\r\n	<li>class names are UpperCamelCased for multi-word controllers</li>\r\n	<li>class names also end with &#39;Controller&#39;</li>\r\n	<li>file names use a lower-case underscored syntax</li>\r\n	<li>file names also end with &#39;_controller.php&#39;.</li>\r\n</ul>\r\n\r\n<p><strong>CakePHP Views</strong></p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li>views are in folders that match controller</li>\r\n	<li>view folders are plural underscored</li>\r\n	<li>views are named after actions they display.</li>\r\n	<li>name the view file after action name, in lowercase.</li>\r\n</ul>\r\n\r\n<p><strong>CakePHP naming conventions - Examples</strong></p>\r\n\r\n<p>Assuming we have a database table named&nbsp;<strong>orders</strong>, the following standard CakePHP naming conventions should be used:</p>\r\n\r\n<pre>\r\nModel\r\n  filename  = order.php\r\n  classname = Order\r\n  directory = app/models\r\n\r\nView\r\n  filename  = (same as the action name in the controller)\r\n  extension = .ctp (the filename extension)\r\n  directory = app/views/orders\r\n\r\nController\r\n  filename  = orders_controller.php\r\n  classname = OrdersController\r\n  directory = app/controllers\r\n</pre>\r\n\r\n<p>Assuming we have a database table named&nbsp;<strong>order_items</strong>, the following standard CakePHP naming conventions should be used:</p>\r\n\r\n<pre>\r\nModel\r\n  filename  = order_item.php\r\n  classname = OrderItem\r\n  directory = app/models\r\n\r\nView\r\n  filename  = (same as the action name in the controller)\r\n  extension = .ctp (the filename extension)\r\n  directory = app/views/order_items\r\n\r\nController\r\n  filename  = order_items_controller.php\r\n  classname = OrderItemsController\r\n  directory = app/controllers\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>CakePHP bake Command Examples</h2>\r\n\r\n<p>Here are some CakePHP bake examples (cake bake examples):</p>\r\n\r\n<pre>\r\ncake bake\r\ncake bake controller\r\ncake bake model\r\ncake bake view\r\ncake bake project\r\ncake bake controller orders\r\ncake bake model order\r\n</pre>\r\n\r\n<h2>CakePHP Foreign Key Examples and Relationship Types</h2>\r\n\r\n<pre>\r\n<strong>Relationship</strong>    <strong>Association Type</strong>      <strong> Example</strong>\r\none to one      hasOne                 A user has one profile.\r\none to many     hasMany                A user can have multiple recipes.\r\nmany to one     belongsTo              Many recipes belong to a user.\r\nmany to many    hasAndBelongsToMany    Recipes have, and belong to many tags.\r\n</pre>\r\n\r\n<p>Further details on these relationships can be found at the CakePHP Cookbook pages:</p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li><a href=\"http://book.cakephp.org/view/80/hasOne\">hasOne</a></li>\r\n	<li><a href=\"http://book.cakephp.org/view/81/belongsTo\">belongsTo</a></li>\r\n	<li><a href=\"http://book.cakephp.org/view/82/hasMany\">hasMany</a></li>\r\n	<li><a href=\"http://book.cakephp.org/view/83/hasAndBelongsToMany-HABTM\">hasAndBelongsToMany</a></li>\r\n</ul>\r\n\r\n<p>CakePHP relationship type examples:</p>\r\n\r\n<pre>\r\n#&nbsp;in a Post model class:\r\n# each Post belongs to a User\r\nvar $belongsTo = array(&#39;User&#39;);\r\n\r\n# TODO\r\nvar $hasOne ...\r\n\r\n# in the User model\r\nvar $hasMany = array(&#39;Post&#39;);\r\n\r\n# TODO\r\nvar $hasAndBelongsToMany\r\n</pre>\r\n\r\n<h2>The CakePHP recursive attribute</h2>\r\n\r\n<p>The CakePHP recursive attribute affects how CakePHP retrieves data, in particular when there are associations between database tables. (I normally indicate these associations with foreign key relationships, but I&#39;ve also seen applications not indicate foreign key relationships in the database, but just deal with them in the software that is written.)</p>\r\n\r\n<p>For instance, the CakePHP Cookbook includes an example of a&nbsp;<a href=\"http://book.cakephp.org/view/330/Creating-the-Blog-Database\">blog database</a>, and this database is built upon in the excellent book, Beginning CakePHP. In this book, blog &quot;posts&quot; are associated with &quot;tags&quot; and &quot;users&quot;. As the author of the book explains, when a Post model runs a query that pulls posts from the database, it will (may) also retrieve associated rows from the tags and users database tables. This is where the CakePHP recursive attribute comes in:</p>\r\n\r\n<blockquote>\r\n<p>The CakePHP recursive attribute tells the model how far to look when pulling associated rows.</p>\r\n</blockquote>\r\n\r\n<p>The CakePHP recursive attribute can be set to the following integer values, with the following meanings:</p>\r\n\r\n<pre>\r\n<strong>Value</strong>   <strong>Meaning</strong>\r\n-1      returns only the current model, and ignores all associations.\r\n 0      returns the current model, plus its owner(s).\r\n 1      returns the current model, its owner(s), plus their associated models.\r\n 2      returns the current model, its owner(s), their associated models,\r\n        and the associated models of any associations.\r\n</pre>\r\n\r\n<p>In a simple controller index() method, the recursive attribute may be used like this:</p>\r\n\r\n<pre>\r\nfunction index()\r\n{\r\n  $this-&gt;Post-&gt;recursive = 0;\r\n  $this-&gt;set(&#39;posts&#39;, $this-&gt;paginate);\r\n}\r\n</pre>\r\n\r\n<p>TODO - add other recursive examples here</p>\r\n\r\n<h2>CakePHP find Conditions</h2>\r\n\r\n<p>One of the things you have to get used to when working with CakePHP is the CakePHP find method. This is a collection of CakePHP find examples.</p>\r\n\r\n<p>First, a list of possible CakePHP find query parameters:</p>\r\n\r\n<pre>\r\n<strong>Name</strong>        <strong>Default</strong>  <strong>Description</strong>\r\ntype        &#39;first&#39;  can be &#39;all&#39;, &#39;first&#39;, or &#39;list&#39;. determines what type of\r\n                     find operation to perform. (TODO - more info here)\r\n\r\nconditions  null     array containing the find (select) conditions as\r\n                     key/value pairs\r\n\r\nfields      null     array specifying which fields should be retrieved\r\n                     in the resulting select query\r\n\r\norder       null     sql &#39;order by conditions. field name must be\r\n                     followed by ASC or DESC\r\n\r\npage        null     page number, used for paged data\r\n\r\nlimit       null     a limit on the number of results returned, like\r\n                     &#39;select * from orders limit 20&#39;.\r\n\r\noffset      null     sql offset value (i haven&#39;t used this query much\r\n                     myself, but i think it refers to skipping X \r\n                     number of rows returned in a query)\r\n\r\nrecursive      1     the cakephp recursive value, relating to associated\r\n                     model data\r\n</pre>\r\n\r\n<p>Next, a very simple CakePHP find query that retrieves all records from the Post model (probably not something you&#39;ll want to do in a production application):</p>\r\n\r\n<pre>\r\n$this-&gt;Post-&gt;find(&#39;all&#39;);\r\n</pre>\r\n\r\n<p>A CakePHP find query with one condition:</p>\r\n\r\n<pre>\r\n$this-&gt;Post-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;5)));\r\n</pre>\r\n\r\n<p>A CakePHP find query with one &quot;not equal to&quot; condition:</p>\r\n\r\n<pre>\r\n$this-&gt;Post-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;&#39;&lt;&gt; 5&#39;)));\r\n</pre>\r\n\r\n<p>A CakePHP find query with multiple conditions:</p>\r\n\r\n<pre>\r\n# this is a little lame, but i&#39;m trying to avoid dates\r\n$this-&gt;Post-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;1, &#39;Post.id&#39;=&gt;&#39;&gt; 50&#39;)));\r\n</pre>\r\n\r\n<p>A CakePHP find query that uses all the find function parameters:</p>\r\n\r\n<pre>\r\n# TODO - i&#39;m not sure that this is right; i think &#39;fields&#39; is supposed to be an array\r\n$this-&gt;Post-&gt;find(&#39;all&#39;,\r\n                  array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;5),\r\n                        &#39;fields&#39;=&gt;&#39;Post.name&#39;,\r\n                        &#39;order&#39;=&gt;&#39;Post.id ASC&#39;,\r\n                        &#39;limit&#39;=&gt;20,\r\n                        &#39;recursive&#39;=&gt;0));\r\n</pre>\r\n\r\n<p>A CakePHP find query using a date:</p>\r\n\r\n<pre>\r\n# note: you can search for date or datetime fields by enclosing the table&#39;s field name\r\n#       in the SQL DATE() function.\r\n$this-&gt;Post-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;5, &#39;DATE(Post.date)&#39;=&gt;&#39;CURDATE()&#39;)));\r\n\r\n# TODO demonstrate &quot;date &gt;&quot; and &quot;date &lt;&quot; conditions\r\n</pre>\r\n\r\n<p>CakePHP find queries with ORDER BY examples:</p>\r\n\r\n<pre>\r\narray(&#39;order&#39;=&gt;&#39;date ASC&#39;)\r\narray(&#39;order&#39;=&gt;&#39;date DESC&#39;)\r\narray(&#39;order&#39;=&gt;&#39;User.id DESC&#39;)\r\n</pre>\r\n\r\n<p>A collection of other CakePHP find query examples:</p>\r\n\r\n<pre>\r\nThese CakePHP find examples are lines of code that would be used in an OrderController class:\r\n\r\n$this-&gt;Order-&gt;find(&#39;all&#39;);\r\n$this-&gt;Order-&gt;find(null, null, &#39;date DESC&#39;);\r\n$this-&gt;Order-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;1)));\r\n$this-&gt;Order-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;array(1,2,3,4))));\r\n$this-&gt;Order-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;&#39;&lt;&gt; 1&#39;)));\r\n$this-&gt;Order-&gt;find(&#39;all&#39;, array(&#39;conditions&#39;=&gt;array(&#39;User.id&#39;=&gt;1, &#39;DATE(Post.date)&#39;=&gt;&#39;CURDATE()&#39;)));\r\n$this-&gt;Order-&gt;find(&#39;all&#39;, array(&#39;order&#39;=&gt;&#39;date ASC&#39;, &#39;limit&#39;=&gt;20, &#39;recursive&#39;=&gt;0);\r\n</pre>\r\n\r\n<p>Here are some CakePHP find examples from the&nbsp;<a href=\"http://book.cakephp.org/view/1017/Retrieving-Your-Data\">CakePHP retrieving your data book page</a>:</p>\r\n\r\n<pre>\r\n$params can contain all these:\r\n\r\narray(\r\n  &#39;conditions&#39; =&gt; array(&#39;Model.field&#39; =&gt; $thisValue), //array of conditions\r\n  &#39;recursive&#39; =&gt; 1, //int\r\n  &#39;fields&#39; =&gt; array(&#39;Model.field1&#39;, &#39;DISTINCT Model.field2&#39;), //array of field names\r\n  &#39;order&#39; =&gt; array(&#39;Model.created&#39;, &#39;Model.field3 DESC&#39;), //string or array defining order\r\n  &#39;group&#39; =&gt; array(&#39;Model.field&#39;), //fields to GROUP BY\r\n  &#39;limit&#39; =&gt; n, //int\r\n  &#39;page&#39; =&gt; n, //int\r\n  &#39;offset&#39;=&gt;n, //int   \r\n  &#39;callbacks&#39; =&gt; true //other possible values are false, &#39;before&#39;, &#39;after&#39;\r\n)\r\n</pre>\r\n\r\n<p>Here&#39;s a CakePHP function showing several different CakePHP find examples:</p>\r\n\r\n<pre>\r\n# find(&#39;first&#39;, $params) syntax\r\n\r\nfunction some_function() {\r\n  ...\r\n  $this-&gt;Article-&gt;order = null; // resetting if it&#39;s set\r\n  $semiRandomArticle = $this-&gt;Article-&gt;find();\r\n  $this-&gt;Article-&gt;order = &#39;Article.created DESC&#39;; // simulating the model having a default order\r\n  $lastCreated = $this-&gt;Article-&gt;find();\r\n  $alsoLastCreated = $this-&gt;Article-&gt;find(&#39;first&#39;, array(&#39;order&#39; =&gt; array(&#39;Article.created DESC&#39;)));\r\n  $specificallyThisOne = $this-&gt;Article-&gt;find(&#39;first&#39;, array(&#39;conditions&#39; =&gt; array(&#39;Article.id&#39; =&gt; 1)));\r\n  ...\r\n}\r\n</pre>\r\n\r\n<p>Here&#39;s a CakePHP&nbsp;<strong>find count</strong>&nbsp;example:</p>\r\n\r\n<pre>\r\n# find(&#39;count&#39;, $params)\r\n\r\nfunction some_function() {\r\n   ...\r\n   $total = $this-&gt;Article-&gt;find(&#39;count&#39;);\r\n   $pending = $this-&gt;Article-&gt;find(&#39;count&#39;, array(&#39;conditions&#39; =&gt; array(&#39;Article.status&#39; =&gt; &#39;pending&#39;)));\r\n   $authors = $this-&gt;Article-&gt;User-&gt;find(&#39;count&#39;);\r\n   $publishedAuthors = $this-&gt;Article-&gt;find(&#39;count&#39;, array(\r\n      &#39;fields&#39; =&gt; &#39;DISTINCT Article.user_id&#39;,\r\n      &#39;conditions&#39; =&gt; array(&#39;Article.status !=&#39; =&gt; &#39;pending&#39;)\r\n   ));\r\n   ...\r\n}\r\n</pre>\r\n\r\n<p>Some CakePHP&nbsp;<strong>find all</strong>&nbsp;examples:</p>\r\n\r\n<pre>\r\n# find(&#39;all&#39;, $params) syntax\r\n\r\nfunction some_function() {\r\n   ...\r\n   $allArticles = $this-&gt;Article-&gt;find(&#39;all&#39;);\r\n   $pending = $this-&gt;Article-&gt;find(&#39;all&#39;, array(&#39;conditions&#39; =&gt; array(&#39;Article.status&#39; =&gt; &#39;pending&#39;)));\r\n   $allAuthors = $this-&gt;Article-&gt;User-&gt;find(&#39;all&#39;);\r\n   $allPublishedAuthors = $this-&gt;Article-&gt;User-&gt;find(&#39;all&#39;, array(&#39;conditions&#39; =&gt; array(&#39;Article.status !=&#39; =&gt; &#39;pending&#39;)));\r\n   ...\r\n}\r\n</pre>\r\n\r\n<p>CakePHP&nbsp;<strong>find list</strong>&nbsp;examples, useful for creating select boxes:</p>\r\n\r\n<pre>\r\n# find(&#39;list&#39;, $params) syntax\r\n\r\nfunction some_function() {\r\n   ...\r\n    $allArticles = $this-&gt;Article-&gt;find(&#39;list&#39;);\r\n    $pending = $this-&gt;Article-&gt;find(&#39;list&#39;, array(\r\n        &#39;conditions&#39; =&gt; array(&#39;Article.status&#39; =&gt; &#39;pending&#39;)\r\n    ));\r\n    $allAuthors = $this-&gt;Article-&gt;User-&gt;find(&#39;list&#39;);\r\n    $allPublishedAuthors = $this-&gt;Article-&gt;find(&#39;list&#39;, array(\r\n        &#39;fields&#39; =&gt; array(&#39;User.id&#39;, &#39;User.name&#39;),\r\n        &#39;conditions&#39; =&gt; array(&#39;Article.status !=&#39; =&gt; &#39;pending&#39;),\r\n        &#39;recursive&#39; =&gt; 0\r\n    ));\r\n   ...\r\n}\r\n</pre>\r\n\r\n<p>See the&nbsp;<a href=\"http://book.cakephp.org/view/1017/Retrieving-Your-Data\">CakePHP retrieving your data book page</a>&nbsp;for many more CakePHP find examples, including:</p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li>find threaded</li>\r\n	<li>find neighbors</li>\r\n	<li>findAllBy</li>\r\n	<li>findBy</li>\r\n	<li>query</li>\r\n	<li>field</li>\r\n	<li>read</li>\r\n	<li>More complex CakePHP find examples</li>\r\n</ul>\r\n\r\n<h2>CakePHP paginate Examples</h2>\r\n\r\n<p>Another important CakePHP method to know is the CakePHP paginate method. Here is a collection of CakePHP paginate examples.</p>\r\n\r\n<pre>\r\nA basic CakePHP paginate method in a controller:\r\n\r\nfunction index() {\r\n  $this-&gt;Order-&gt;recursive = 0;\r\n  $this-&gt;set(&#39;orders&#39;, $this-&gt;paginate());\r\n}\r\n</pre>\r\n\r\n<p>You can also control CakePHP pagination with the CakePHP paginate variable in your CakePHP controllers, like this:</p>\r\n\r\n<pre>\r\nclass RecipesController extends AppController {\r\n\r\n    var $paginate = array(\r\n        &#39;limit&#39; =&gt; 25,\r\n        &#39;order&#39; =&gt; array(\r\n            &#39;Post.title&#39; =&gt; &#39;asc&#39;\r\n        )\r\n    );\r\n}\r\n</pre>\r\n\r\n<p>or this:</p>\r\n\r\n<pre>\r\nclass RecipesController extends AppController {\r\n\r\n    var $paginate = array(\r\n        &#39;fields&#39; =&gt; array(&#39;Post.id&#39;, &#39;Post.created&#39;),\r\n        &#39;limit&#39; =&gt; 25,        \r\n        &#39;order&#39; =&gt; array(\r\n            &#39;Post.title&#39; =&gt; &#39;asc&#39;\r\n        )\r\n    );\r\n}\r\n</pre>\r\n\r\n<p>For more information on CakePHP pagination, see the&nbsp;<a href=\"http://book.cakephp.org/view/1231/Pagination\">CakePHP pagination book page</a>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h2>CakePHP logging</h2>\r\n\r\n<p>You can write to CakePHP log files using the CakeLog::write method:</p>\r\n\r\n<pre>\r\nCakeLog::write(&#39;debug&#39;, &#39;Something did not work&#39;);\r\n</pre>\r\n\r\n<p>Or you can use the CakePHP log function in any class that extends the CakePHP Object class:</p>\r\n\r\n<pre>\r\n$this-&gt;log(&quot;Something did not work!&quot;, &#39;debug&#39;);\r\n</pre>\r\n\r\n<p>You can also perform CakePHP error logging like this:</p>\r\n\r\n<pre>\r\nConfigure::write(&#39;log&#39;, E_WARNING);\r\n</pre>\r\n\r\n<h2>CakePHP Global Methods</h2>\r\n\r\n<p>These are names of some globally available CakePHP methods (assuming you extend the CakePHP&nbsp;Object class):</p>\r\n\r\n<pre>\r\nconfig\r\nuses\r\nvendor\r\ndebug   - use like &lt;? debug($order); ?&gt; in a view\r\na\r\naa\r\nam\r\ne       - shortcut for echo()\r\nenv\r\nife\r\nlow\r\nup\r\nr\r\npr      - shortcut for print_r()\r\nstripslashes_deep\r\n</pre>\r\n\r\n<h2>CakePHP Global Constants</h2>\r\n\r\n<p>This is a list of CakePHP global constants. (I don&#39;t know much about these yet.)</p>\r\n\r\n<pre>\r\nACL_CLASSNAME\r\nACL_FILENAME\r\nAPP\r\nAPP_DIR\r\nAPP_PATH\r\nAUTO_SESSION\r\nCACHE\r\nCACHE_CHECK\r\nCAKE\r\nCAKE_CORE_INCLUDE_PATH\r\nCAKE_SECURITY\r\nCAKE_SESSION_COOKIE\r\nCAKE_SESSION_SAVE\r\nCAKE_SESSION_STRING\r\nCAKE_SESSION_TABLE\r\nCAKE_SESSION_TIMEOUT\r\nCOMPONENTS\r\nCOMPRESS_CSS\r\nCONFIGS\r\nCONTROLLER_TESTS\r\nCONTROLLERS\r\nCORE_PATH\r\nCSS\r\nDATASOURCE\r\nDAY\r\nDEBUG\r\nDS\r\nELEMENTS\r\nHELPER_TESTS\r\nHELPERS\r\nHOUR\r\nINFLECTIONS\r\nJS\r\nLAYOUTS\r\nLIB_TESTS\r\nLIBS\r\nLOG_ERROR\r\nLOGS\r\nMAX_MD5SIZE\r\nMINUTE\r\nMODEL_TESTS\r\nMODELS\r\nMODULES\r\nMONTH\r\nROOT\r\nSCRIPTS\r\nSECOND\r\nTAG_DIV\r\nTAG_FIELDSET\r\nTAG_LABEL\r\nTAG_P_CLASS\r\nTESTS\r\nTMP\r\nVENDORS\r\nVIEWS\r\nWEBROOT_DIR\r\nWEBSERVICES\r\nWEEK\r\nWWW_ROOT\r\nYEAR\r\n</pre>\r\n\r\n<h2>CakePHP Controller properties, methods, callbacks</h2>\r\n\r\n<p>CakePHP controller properties:</p>\r\n\r\n<pre>\r\n$name = null\r\n$action = null\r\n$autoLayout = true\r\n$autoRender = true\r\n$base = null\r\n$beforeFilter = null\r\n$cacheAction = false\r\n$components = array()\r\n$data = array()\r\n$helpers = array(&#39;Html&#39;)\r\n$here = null\r\n$layout = &#39;default&#39;\r\n$output = null\r\n$pageTitle = false\r\n$params = array()\r\n$persistModel = false\r\n$plugin = null\r\n$uses = false\r\n$view = &#39;View&#39;\r\n$viewPath = null\r\n$webroot = null\r\n$_viewClass = null\r\n$_viewVars = array()\r\n</pre>\r\n\r\n<p>CakePHP controller methods</p>\r\n\r\n<pre>\r\ncleanUpFields ()\r\nconstructClasses ()\r\nflash ($message, $url, $pause = 1)\r\nflashOut ($message, $url, $pause = 1)\r\ngenerateFieldNames ($data = null, $doCreateOptions = true)\r\npostConditions ($data, $operator = &#39;&#39;, $bool = &#39;AND&#39;, $exclusive = false)\r\nredirect ($url, $status = null)\r\nreferer ($default = null, $local = false)\r\nrender ($action = null, $layout = null, $file = null)\r\nset ($one, $two = null)\r\nsetAction ($action)\r\nvalidate ()\r\nvalidateErrors ()\r\n</pre>\r\n\r\n<p>CakePHP controller callbacks</p>\r\n\r\n<pre>\r\nafterFilter ()\r\nbeforeFilter ()\r\nbeforeRender ()\r\n</pre>\r\n\r\n<h2>CakePHP Model properties, methods, callbacks, and validation</h2>\r\n\r\n<p>CakePHP Model properties:</p>\r\n\r\n<pre>\r\n$belongsTo = array()\r\n$cacheQueries = true\r\n$data = array()\r\n$displayField = null\r\n$hasAndBelongsToMany = array()\r\n$hasMany = array()\r\n$hasOne = array()\r\n$id = false\r\n$logTransactions = false\r\n$name = null\r\n$primaryKey = null\r\n$recursive = 1\r\n$useDbConfig = &#39;default&#39;\r\n$useTable = null\r\n$validate = array()\r\n$validationErrors = array()\r\n</pre>\r\n\r\n<p>CakePHP Model methods:</p>\r\n\r\n<pre>\r\nbindModel ($params)\r\ncreate ()\r\ndelete ($id = null, $cascade = true)\r\nescapeField ($field)\r\nexecute ($data)\r\nexists ()\r\nfield ($name, $conditions = null, $order = null)\r\nfind ($conditions = null, $fields = null, $order = null, $recursive = null)\r\nfindAll ($conditions = null, $fields = null, $order = null, $limit = null, $page = 1, $recursive = null)\r\nfindAllThreaded ($conditions = null, $fields = null, $sort = null)\r\nfindCount ($conditions = null, $recursive = 0)\r\nfindNeighbours ($conditions = null, $field, $value)\r\ngenerateList ($conditions = null, $order = null, $limit = null, $keyPath = null, $valuePath = null)\r\ngetAffectedRows ()\r\ngetColumnType ($column)\r\ngetColumnTypes ()\r\ngetDisplayField ()\r\ngetID ($list=0)\r\ngetLastInsertID ()\r\ngetNumRows ()\r\nhasAny ($conditions = null)\r\nhasField ($name)\r\ninvalidate ($field)\r\ninvalidFields ($data = array())\r\nisForeignKey ($field)\r\nloadInfo ()\r\nquery ()\r\nread ($fields = null, $id = null)\r\nremove ($id = null, $cascade = true)\r\nsave ($data = null, $validate = true, $fieldList = array())\r\nsaveField ($name, $value, $validate = false)\r\nset ($one, $two = null)\r\nsetDataSource ($dataSource = null)\r\nsetSource ($tableName)\r\nunbindModel ($params)\r\nvalidates ($data=array())\r\nsetSource ($tableName)\r\n</pre>\r\n\r\n<p>CakePHP Model callbacks</p>\r\n\r\n<pre>\r\nafterDelete ()\r\nafterFind ($results)\r\nafterSave ()\r\nbeforeDelete ()\r\nbeforeFind (&amp;$queryData)\r\nbeforeSave ()\r\nbeforeValidate ()\r\n</pre>\r\n\r\n<p>CakePHP Model validation</p>\r\n\r\n<pre>\r\n&#39;VALID_EMAIL`\r\n&#39;VALID_NOT_EMPTY`\r\n&#39;VALID_NUMBER`\r\n&#39;VALID_YEAR`\r\n</pre>\r\n\r\n<h2>CakePHP View properties and methods</h2>\r\n\r\n<p>CakePHP View properties</p>\r\n\r\n<pre>\r\n$action = null\r\n$autoLayout = true\r\n$autoRender = true\r\n$base = null\r\n$controller = null\r\n$ext = &#39;.thtml&#39;\r\n$hasRendered = null\r\n$helpers = array(&#39;Html&#39;)\r\n$here = null\r\n$layout = &#39;default&#39;\r\n$loaded = array()\r\n$models = array()\r\n$name = null\r\n$pageTitle = false\r\n$params\r\n$parent = null\r\n$plugin = null\r\n$subDir = null\r\n$themeWeb = null\r\n$uses = false\r\n$viewPath\r\n</pre>\r\n\r\n<p>CakePHP View methods</p>\r\n\r\n<pre>\r\nelement ($name)\r\nerror ($code, $name, $message)\r\npluginView ($action, $layout)\r\nrender ($action = null, $layout = null, $file = null)\r\nrenderCache ($filename, $timeStart)\r\nrenderElement ($name, $params = array())\r\nrenderLayout ($content_for_layout)\r\nsetLayout ($layout)\r\n</pre>\r\n\r\n<h2>CakePHP Data Validation</h2>\r\n\r\n<p>Here are some CakePHP data validation examples, mostly from the&nbsp;<a href=\"http://book.cakephp.org/view/1143/Data-Validation\">CakePHP Data Validation book page</a>:</p>\r\n\r\n<pre>\r\n&lt;?php\r\nclass User extends AppModel {\r\n    var $name = &#39;User&#39;;\r\n    var $validate = array(\r\n        &#39;login&#39; =&gt; &#39;alphaNumeric&#39;,\r\n        &#39;email&#39; =&gt; &#39;email&#39;,\r\n        &#39;born&#39; =&gt; &#39;date&#39;\r\n    );\r\n}\r\n?&gt;\r\n</pre>\r\n\r\n<h2>CakePHP Helpers</h2>\r\n\r\n<p><strong>CakePHP Html Helper</strong></p>\r\n\r\n<pre>\r\naddCrumb ($name, $link)\r\ncharset ($charset, $return = false)\r\ncheckbox ($fieldName, $title = null, $htmlAttributes = null, $return = false)\r\ncss ($path, $rel = &#39;stylesheet&#39;, $htmlAttributes = null, $return = false)\r\ndateTimeOptionTag ($tagName, $dateFormat = &#39;DMY&#39;, $timeFormat = &#39;12&#39;, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)\r\ndayOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)\r\nfile ($fieldName, $htmlAttributes = null, $return = false)\r\nformTag ($target = null, $type = &#39;post&#39;, $htmlAttributes = null)\r\ngetCrumbs ($separator = &#39;&raquo;&#39;, $startText = false, $return = false)\r\nguiListTree ($data, $htmlAttributes = null, $bodyKey = &#39;body&#39;, $childrenKey = &#39;children&#39;, $return = false)\r\nhidden ($fieldName, $htmlAttributes = null, $return = false)\r\nhourOptionTag ($tagName, $value = null, $format24Hours = false, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)\r\nimage ($path, $htmlAttributes = null, $return = false)\r\ninput ($fieldName, $htmlAttributes = null, $return = false)\r\nlink ($title, $url = null, $htmlAttributes = null, $confirmMessage = false, $escapeTitle = true, $return = false)\r\nlinkEmail ($title, $email = null, $options = null)\r\nmeridianOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)\r\nminuteOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)\r\nmonthOptionTag ($tagName, $value = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)\r\nparseHtmlOptions ($options, $exclude = null, $insertBefore = &#39; &#39;, $insertAfter = null)\r\npassword ($fieldName, $htmlAttributes = null, $return = false)\r\nradio ($fieldName, $options, $inbetween = null, $htmlAttributes = array(), $return = false)\r\nselectTag ($fieldName, $optionElements, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true, $return = false)\r\nsetFormTag ($tagValue)\r\nsubmit ($caption = &#39;Submit&#39;, $htmlAttributes = null, $return = false)\r\ntableCells ($data, $oddTrOptions = null, $evenTrOptions = null, $return = false)\r\ntableHeaders ($names, $trOptions = null, $thOptions = null, $return = false)\r\ntagErrorMsg ($field, $text)\r\ntagIsInvalid ($model, $field)\r\ntagValue ($fieldName)\r\ntextarea ($fieldName, $htmlAttributes = null, $return = false)\r\ntrim ()\r\nurl ($url = null, $return = false)\r\nvalidate ()\r\nvalidateErrors ()\r\nyearOptionTag ($tagName, $value = null, $minYear = null, $maxYear = null, $selected = null, $selectAttr = null, $optionAttr = null, $showEmpty = true)\r\n_parseAttributes ($options, $exclude = null, $insertBefore = &#39; &#39;, $insertAfter = null)\r\n</pre>\r\n\r\n<p><strong>CakePHP Form Helper</strong></p>\r\n\r\n<pre>\r\nbutton ($params, $type= &#39;button&#39;, $options=array())\r\ncreate ($model=null, $options=array())\r\ndateTime ($tagName, $dateFormat= &#39;DMY&#39;, $timeFormat= &#39;12&#39;, $selected=null, $attributes=array(), $showEmpty=true)\r\nday ($fieldName, $selected=null, $attributes=array(), $showEmpty=true)\r\nend ($options=null)\r\nerror ($field, $text=null, $options=array())\r\nfile ($fieldName, $options=array())\r\nhidden ($fieldName, $options=array())\r\nhour ($tagName, $format24Hours=false, $selected=null, $attributes=array(), $showEmpty=true)\r\ninput ($tagName, $options=array())\r\ninputs ($fields=null, $blacklist=null)\r\nisFieldError ($field)\r\nlabel ($tagName=null, $text=null, $attributes=array())\r\nmeridian ($tagName, $selected=null, $attributes=array(), $showEmpty=true)\r\nminute ($tagName, $selected=null, $attributes=array(), $showEmpty=true)\r\nmonth ($tagName, $selected=null, $attributes=array(), $showEmpty=true)\r\npassword ($fieldName, $options=array())\r\nsecure ($fields)\r\nselect ($fieldName, $options=array(), $selected=null, $attributes=array(), $showEmpty= &#39;&#39;)\r\nsubmit ($caption= &#39;Submit&#39;, $options=array())\r\nsubmitImage ($path, $options=array())\r\ntext ($fieldName, $options=array())\r\ntextarea ($fieldName, $options=array())\r\nyear ($fieldName, $minYear=null, $maxYear=null, $selected=null, $attributes=array(), $showEmpty=true)\r\n</pre>\r\n\r\n<p><strong>CakePHP Ajax Helper</strong></p>\r\n\r\n<pre>\r\nautoComplete ($field, $url=&quot;&quot;, $options=array())\r\ndiv ($id, $options=array())\r\ndivEnd ($id)\r\ndrag ($id, $options=array())\r\ndrop ($id, $options=array())\r\ndropRemote ($id, $options=array(), $ajaxOptions=array())\r\neditor ($id, $url, $options=array())\r\nform ($params=null, $type= &#39;post&#39;, $options=array())\r\nisAjax ()\r\nlink ($title, $href=null, $options=array(), $confirm=null, $escapeTitle=true)\r\nobserveField ($field_id, $options=array())\r\nobserveForm ($field_id, $options=array())\r\nremoteFunction ($options=null)\r\nremoteTimer ($options=null)\r\nslider ($id, $track_id, $options=array())\r\nsortable ($id, $options=array())\r\nsubmit ($title= &#39;Submit&#39;, $options=array())\r\n</pre>\r\n\r\n<p><strong>CakePHP Text Helper</strong></p>\r\n\r\n<pre>\r\nhighlight ($text, $phrase, $highlighter= &#39;&lt; span class=&quot;highlight&quot;&gt;\\1&lt;/span &gt;&#39;)\r\nstripLinks ($text)\r\nautoLinkUrls ($text, $htmlOptions = array())\r\nautoLinkEmails ($text, $htmlOptions = array())\r\nautoLink ($text, $htmlOptions = array())\r\ntruncate ($text, $length, $ending = &#39;...&#39;, $exact = true)\r\ntrim ()\r\nexcerpt ($text, $phrase, $radius = 100, $ending = &quot;...&quot;)\r\nflay ($text, $allowHtml = false)\r\n</pre>\r\n\r\n<p><strong>CakePHP Time Helper</strong></p>\r\n\r\n<pre>\r\ndayAsSql ($date_string, $field_name, $return = false)\r\ndaysAsSql ($begin, $end, $field_name, $return = false)\r\nfromString ($date_string)\r\nisThisYear ($date_string, $return = false)\r\nisToday ($date_string, $return = false)\r\nisTomorrow ($date_string, $return = false)\r\nnice ($date_string=null, $return = false)\r\nniceShort ($date_string=null, $return = false)\r\nrelativeTime ($datetime_string, $format = &#39;j/n/y&#39;, $return = false)\r\ntimeAgoInWords ($datetime_string, $format = &#39;j/n/y&#39;, $backwards = false, $return = false)\r\ntoAtom ($date_string, $return = false)\r\ntoRSS ($date_string, $return = false)\r\ntoUnix ($date_string, $return = false)\r\ntrim ($string, $length, $ending = &#39;..&#39;)\r\nwasWithinLast ($timeInterval, $date_string, $return = false)\r\nwasYesterday ($date_string, $return = false)\r\n</pre>\r\n\r\n<p><strong>CakePHP Number Helper</strong></p>\r\n\r\n<pre>\r\nprecision ($number, $precision = 3)\r\ntoReadableSize ($size)\r\ntoPercentage ($number, $precision = 2)\r\n</pre>\r\n\r\n<h2>CakePHP Components</h2>\r\n\r\n<p><strong>CakePHP Session Component</strong></p>\r\n\r\n<pre>\r\ncheck ($name)\r\ndel ($name)\r\ndelete ($name)\r\nerror ()\r\nflash ($key)\r\nread ($name)\r\nrenew ()\r\nsetFlash ($flashMessage, $layout = &#39;default&#39;, $param = null, $key = &#39;flash&#39;)\r\nvalid ()\r\nwrite($name, $value)\r\n</pre>\r\n\r\n<p><strong>CakePHP RequestHandler Component</strong></p>\r\n\r\n<pre>\r\naccepts ($types)\r\ngetAjaxVersion ()\r\ngetClientIP ()\r\ngetReferer ()\r\nisAjax ()\r\nisAtom ()\r\nisDelete ()\r\nisGet ()\r\nisMobile ()\r\nisPost ()\r\nisPut ()\r\nisRss ()\r\nisXml ()\r\nsetContent ($name, $type)\r\nstripAll ($string)\r\nstripImages ($string)\r\nstripScripts ($string)\r\n</pre>\r\n\r\n<p><strong>CakePHP Security Component</strong></p>\r\n\r\n<pre>\r\nrequirePost ([$action1, $ action2, $action3, ...])\r\nrequireAuth ([$action1, $ action2, $action3, ...])\r\n</pre>\r\n\r\n<p><strong>CakePHP ACL Component</strong></p>\r\n\r\n<pre>\r\ncheck ($aro, $aco, $action=&quot;*&quot;)\r\nallow ($aro, $aco, $action=&quot;*&quot;)\r\ndeny ($aro, $aco, $action=&quot;*&quot;)\r\ninherit ($aro, $aco, $action=&quot;*&quot;)\r\ngrant ($aro, $aco, $action=&quot;*&quot;)\r\nrevoke ($aro, $aco, $action=&quot;*&quot;)\r\ngetAro ($id)\r\ngetAco ($id)\r\n</pre>\r\n\r\n<h2>CakePHP SQL Debug</h2>\r\n\r\n<p>To add CakePHP SQL debug output in CakePHP 1.3, change the CakePHP debug config parameter to &#39;2&#39; in this line of the $app/config/core.php file:</p>\r\n\r\n<pre>\r\nConfigure::write(&#39;debug&#39;, 2);\r\n</pre>\r\n\r\n<p>Then add this line to the bottom of your CakePHP view page:</p>\r\n\r\n<pre>\r\necho $this-&gt;element(&#39;sql_dump&#39;);\r\n</pre>\r\n\r\n<h2>Other CakePHP tutorials</h2>\r\n\r\n<p>For deeper problems, I&#39;ve created some other CakePHP tutorials:</p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li><a href=\"http://alvinalexander.com/php/cakephp-change-page-title-pagetitle\">Setting the CakePHP page title</a></li>\r\n	<li><a href=\"http://alvinalexander.com/php/cakephp-naming-conventions-standards-model-view-controller\">CakePHP MVC naming conventions</a></li>\r\n	<li><a href=\"http://alvinalexander.com/php/cakephp-error-log-debug-message-logging\">CakePHP error logging</a></li>\r\n	<li><a href=\"http://alvinalexander.com/php/php-cakephp-database-sql-query-select\">CakePHP SQL query examples</a></li>\r\n	<li><a href=\"http://alvinalexander.com/php/cakephp-find-sql-limit-order-by-query\">A CakePHP find all limit and order by example</a></li>\r\n	<li><a href=\"http://alvinalexander.com/php/cakephp-debug-debugging-configure-find-query\">A CakePHP debug strategy</a></li>\r\n	<li><a href=\"http://alvinalexander.com/php/cakephp-find-select-distinct-sql-query\">A CakePHP SELECT DISTINCT example</a></li>\r\n	<li><a href=\"http://alvinalexander.com/php/cakephp-find-between-select-query-syntax\">A CakePHP SELECT BETWEEN date example</a></li>\r\n</ul>\r\n\r\n<h2>CakePHP&nbsp;API&nbsp;Documentation</h2>\r\n\r\n<p>Links to some of the most important (common)&nbsp;CakePHP&nbsp;classes:</p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li><a href=\"http://api.cakephp.org/classes\">The CakePHP&nbsp;API&nbsp;docs</a>&nbsp;(main page)</li>\r\n	<li><a href=\"http://api.cakephp.org/class/model\">CakePHP&nbsp;Model class</a></li>\r\n	<li><a href=\"http://api.cakephp.org/class/model#method-Modelfind\">CakePHP&nbsp;Model::find</a></li>\r\n	<li><a href=\"http://api.cakephp.org/class/controller\">CakePHP&nbsp;Controller class</a></li>\r\n	<li><a href=\"http://api.cakephp.org/class/string\">CakePHP&nbsp;String class</a></li>\r\n	<li><a href=\"http://api.cakephp.org/class/validation\">CakePHP Validation class</a></li>\r\n	<li><a href=\"http://api.cakephp.org/class/auth-component\">CakePHP&nbsp;AuthComponent</a></li>\r\n	<li><a href=\"http://api.cakephp.org/class/number-helper\">NumberHelper</a></li>\r\n	<li><a href=\"http://api.cakephp.org/class/time-helper\">TimeHelper</a></li>\r\n</ul>\r\n\r\n<h2>CakePHP&nbsp;- TODO&nbsp;Items</h2>\r\n\r\n<p>This is a list of more things I want to add to this CakePHP&nbsp;cheat sheet:</p>\r\n\r\n<ul style=\"list-style-type:circle\">\r\n	<li>Auth information</li>\r\n	<li>AppController</li>\r\n	<li>var $helpers = array(&#39;Html&#39;, &#39;Form&#39;, &#39;Ajax&#39;, &#39;Javascript&#39;);&nbsp; // in AppController or other controllers</li>\r\n	<li>More find queries</li>\r\n	<li>read()</li>\r\n	<li>save()</li>\r\n	<li>Date, time, calendar, currency</li>\r\n	<li>setFlash</li>\r\n	<li>redirect</li>\r\n	<li>Validation</li>\r\n	<li>$tags = $this-&gt;Post-&gt;Tag-&gt;find(&#39;list&#39;);</li>\r\n	<li>$users = $this-&gt;Post-&gt;User-&gt;find(&#39;list&#39;);</li>\r\n	<li>$tags = $this-&gt;compact(...)</li>\r\n</ul>\r\n\r\n<h2>CakePHP Default Directory Structure</h2>\r\n\r\n<p>This is what the CakePHP directory structure looks like by default:</p>\r\n\r\n<blockquote>\r\n<pre>\r\n/app\r\n	app_controller.php\r\n	app_model.php\r\n	/config\r\n		acl.ini.php\r\n		bootstrap.php\r\n		core.php\r\n		databases.php\r\n		inflections.php\r\n		routes.php\r\n	/controllers\r\n		/components\r\n			your_components_here.php\r\n		your_controllers_here.php\r\n	/locale\r\n		/eng\r\n	/models\r\n		/behaviors\r\n			your_behaviors_here.php\r\n		your_models_here.php\r\n	/plugins\r\n	/tests\r\n		/cases\r\n			/behaviors\r\n			/components\r\n			/controllers\r\n			/helpers\r\n			/models\r\n		/fixtures\r\n		/groups\r\n	/tmp\r\n	/vendors\r\n	/views\r\n		/helpers\r\n		your_views_here.ctp\r\n	/webroot\r\n		/css\r\n		/files\r\n		/js\r\n/cake\r\n	cake_core_files_are_in_here\r\n/docs\r\n	release_notes_here\r\n/vendors\r\n</pre>\r\n</blockquote>\r\n' , '' , '2' , '627' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('52' , 'CakePHP Interview questions' , 'cakephp_interview_questions' , '7' , '20' , '1' , 'interview questions for cakephp' , '<h3>What Is CakePHP?</h3>\r\n\r\n<p>CakePHP is a free, open-source, rapid development framework for PHP. It&rsquo;s a foundational structure for programmers to create web applications. CakePHP goal is to enable developers to work in a structured and rapid manner&ndash;without loss of flexibility. CakePHP takes the monotony out of web development.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What does &#39;MVC&#39; stand for in CakePHP?</h3>\r\n\r\n<p>Model view controller (MVC) is an architectural pattern used in software engineering.</p>\r\n\r\n<p><strong>M</strong>odel &nbsp; - &nbsp;: Database functions exist in the model</p>\r\n\r\n<p><strong>V</strong>iew &nbsp; - &nbsp; &nbsp;: Design parts written here</p>\r\n\r\n<p><strong>C</strong>ontroller : Business Logic goes here</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What are the server requirements to install CakePHP.</h3>\r\n\r\n<p>Here are the requirements for setting up a server to run CakePHP:</p>\r\n\r\n<p>An HTTP server (like Apache) with the following enabled: sessions, mod_rewrite (not absolutely necessary but preferred)</p>\r\n\r\n<p>PHP 4.3.2 or greater. Yes, CakePHP works great in either PHP 4 or 5.</p>\r\n\r\n<p>A database engine (right now, there is support for MySQL 4+, PostgreSQL and a wrapper for ADODB).<br />\r\n&nbsp;</p>\r\n\r\n<p>Here are the steps</p>\r\n\r\n<p><strong>step1:</strong>&nbsp;Go to CakePHP.org and download the latest version of CakePHP.</p>\r\n\r\n<p><strong>step2:</strong>&nbsp;CakePHP comes in a .zip file,so unzip it.</p>\r\n\r\n<p><strong>step3:</strong>&nbsp;Extract the files in the localhost in the desired folder (for example:CakePHP).</p>\r\n\r\n<p><strong>step4:</strong>&nbsp;Open the browser and run the URL localhost/CakePHP</p>\r\n\r\n<p><strong>step5:</strong>&nbsp;Just Follow the instructions display on the page.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What Is The Folder Structure Of CakePHP?</h3>\r\n\r\n<pre>\r\nCakePHP/\r\napp/\r\nConfig/\r\nConsole/\r\nController/\r\nLib/\r\n  Locale/\r\n  Model/\r\n  Plugin/\r\n  Test/\r\n  tmp/\r\n  Vendor/\r\n  View/\r\n  webroot/\r\n    .htaccess\r\n  index.php\r\n  \r\n lib/\r\n plugins/\r\n vendors/\r\n .htaccess/\r\n index.php/\r\n README.md/\r\n\r\n</pre>\r\n\r\n<h3>What is the CakePHP Database Configuration File called, and where is it located?</h3>\r\n\r\n<p>Default file name is database.php.default.</p>\r\n\r\n<p>Its located at &quot;/app/config/database.php.default&quot;.To connect with database it should be renamed to database.php</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What is the name of the first file that gets loaded when you run a application using CakePHP?</h3>\r\n\r\n<p>bootstrap.php</p>\r\n\r\n<p>Either through index.php , or through .htaccess you can change it</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What does Security.Salt And Security.CipherSeed In CakePHP do?</h3>\r\n\r\n<p>- The Security.salt is used for generating hashes.we can change the default Security.salt value in /app/Config/core.php. &nbsp;</p>\r\n\r\n<p>- The Security.cipherseed is used for encrypt/decrypt strings.We can change the default Security.cipherSeed value by editing /app/Config/core.php.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What does Controllers do?</h3>\r\n\r\n<p>A controller is used to manage the logic for a part of your application. Most commonly, controllers are used to manage the logic for a single model. Controllers can include any number of methods which are usually referred to as actions. Actions are controller methods used to display views. An action is a single method of a controller.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What is default function for a Controller?</h3>\r\n\r\n<p>index() function</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Which function is executed before every action in the Controller?</h3>\r\n\r\n<p>function beforeFilter()</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Which features does CakePHP have?</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n	<li>Compatible with versions 4 and 5 of PHP</li>\r\n	<li>MVC architecture</li>\r\n	<li>Built-in validations</li>\r\n	<li>Caching</li>\r\n	<li>Scaffolding</li>\r\n	<li>Access Control Lists and Authentication.</li>\r\n	<li>CSRF protection via Security Component.</li>\r\n</ol>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n\r\n<h3>What are CakePHP&#39;s drawbacks.</h3>\r\n\r\n<p>It loads full application before it starts your task. It&#39;s not recommended for small projects because of its resource-heavy structure.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What naming convention does CakePHP use?</h3>\r\n\r\n<p>Table names are plural and lowercased,model names are singular and CamelCased: ModelName, model filenames are singular and underscored: model_name.php, controller names are plural and CamelCased with *Controller* appended: ControllerNamesController, controller filenames are plural and underscored with *controller* appended: controller_names_controller.php,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What does scaffolding in CakePHP do?&nbsp;</h3>\r\n\r\n<p>Scaffolding is a technique that allows a developer to define and create a basic application that can create, retrieve, update and delete objects.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How do you use Scaffolding?</h3>\r\n\r\n<p>To add scaffolding to your application,just add the $scaffold variable in the controller,</p>\r\n\r\n<pre>\r\n&lt;?php\r\nclass PostsController extends AppController {\r\n    var $scaffold;\r\n}\r\n?&gt;\r\n</pre>\r\n\r\n<p>Assuming you&rsquo;ve created Post model class file (in /app/Model/post.php), you&rsquo;re ready to go. Visit http://example.com/posts to see your new scaffold.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What is a Component in CakePHP?</h3>\r\n\r\n<p>Components are packages of logic that are shared between controllers. They are useful when a common logic or code is required between different controllers.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What are the most commonly used Components of CakePHP?</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n	<li>Security</li>\r\n	<li>Sessions</li>\r\n	<li>Access control lists</li>\r\n	<li>Emails</li>\r\n	<li>Cookies</li>\r\n	<li>Authentication</li>\r\n	<li>Request handling</li>\r\n	<li>Scaffolding</li>\r\n</ol>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n\r\n<h3>What are Helpers used for?</h3>\r\n\r\n<p>Helpers in CakePHP are associated with Presentation layers of application.Helpers mainly contain presentational logic which is available to share between many views, elements, or layouts</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What are the most commonly used Helpers of CakePHP?</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ul>\r\n	<li>FormHelper</li>\r\n	<li>HtmlHelper</li>\r\n	<li>JsHelper</li>\r\n	<li>CacheHelper</li>\r\n	<li>NumberHelper</li>\r\n	<li>Paginator</li>\r\n	<li>RSS</li>\r\n	<li>SessionHelper</li>\r\n	<li>TextHelper</li>\r\n	<li>TimeHelper</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What does a Behavior do?</h3>\r\n\r\n<p>Behaviors in CakePHP are associated with Models.Behaviors are used to change the way models behaves and enforcing model to act as something else.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What is the difference between Component, Helper, Behavior?</h3>\r\n\r\n<p>Component is a Controller extension, Helpers are View extensions, Behavior is a Model Extension.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What does a Element do?</h3>\r\n\r\n<p>Element in CakePHP are smaller and reusable bits of view code. Elements are usually rendered inside views.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What is a Layout?</h3>\r\n\r\n<p>Layout in CakePHP are used to display the views that contain presentational code. In simple views are rendered inside a layout</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How to set a specific layout in a Controller?</h3>\r\n\r\n<p>var $layout = &lsquo;layout_name&rsquo;;</p>\r\n\r\n<p>to overwrite for a specific action use below code in that action</p>\r\n\r\n<p>$this-&gt;layout =&rdquo;layout_name&rdquo;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How do you include Helpers in a Controller ?</h3>\r\n\r\n<p>public $helpers = array(&lsquo;Form&rsquo;, &lsquo;Html&rsquo;, &lsquo;Js&rsquo;, &lsquo;Time&rsquo;);</p>\r\n\r\n<p>to in specific action use below code in that action</p>\r\n\r\n<p>$this-&gt;helper[] =&rdquo;helper_name&rdquo;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How do you include Components in Controller ?</h3>\r\n\r\n<pre>\r\npublic $components = array(&lsquo;Emails&rsquo;, &lsquo;ImageUploader&rsquo;, &lsquo;Sms&rsquo;);</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How do you Write, Read And Delete Sessions in CakePHP?</h3>\r\n\r\n<pre>\r\n$this-&gt;Session-&gt;write(&lsquo;Bird.Color&rsquo;, &lsquo;Black&rsquo;);\r\n$black = $this-&gt;Session-&gt;read(&lsquo;Bird.Color&rsquo;);\r\n$this-&gt;Session-&gt;delete(&lsquo;Bird&rsquo;);&nbsp;\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What do you us $this-&gt;Set(); for?</h3>\r\n\r\n<p>The set() method is used for creating a variable in the view file.Say for example if we write,</p>\r\n\r\n<p>$this-&gt;set(&#39;posts&#39;,$posts); in controller fie, then the variable $posts will be available to use in the view template file for that action.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What do you use $this-&gt;Set(Compact()); for?</h3>\r\n\r\n<h3>&nbsp;</h3>\r\n\r\n<p>Using $this-&gt;set(compact()) , we can pass multiple parameters to access into the view file.</p>\r\n\r\n<p><br />\r\n<strong>For example,</strong></p>\r\n\r\n<p>$this-&gt;set(compact(&#39;posts&#39;,&#39;users&#39;,&#39;reports&#39;));</p>\r\n\r\n<p>Now all these variables will be available in respective view file.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What advantages of $this-&gt;set and $this-&gt;Set(Compact()); ?Which would you use?</h3>\r\n\r\n<p>An advantage with first case $this-&gt;set(&#39;posts&#39;, $posts); is that it allows two different names for the view file and controller file. For example, you could write something like $this-&gt;set(&#39;postData&#39;, $posts);. Now the variable name in the view file would be $postData.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The advantage with the second approach $this-&gt;set(compact()); is easier to write, and useful especially when we are setting several variables to the view.No need to add separate line for each variable as we have with $this-&gt;set();</p>\r\n\r\n<p>For example,</p>\r\n\r\n<p>$this-&gt;set(compact(&#39;posts&#39;,&#39;users&#39;,&#39;reports&#39;));</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Is it possible to have multiple validation rules per field in CakePHP?</h3>\r\n\r\n<p>Yes its possible.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What is wrong with the Validation rule below?</h3>\r\n\r\n<pre>\r\n&#39;email&#39; =&gt; array(\r\n    &#39;rule&#39; =&gt; array(\r\n        &#39;rule&#39; =&gt; &#39;notEmpty&#39;,\r\n        &#39;message&#39; =&gt; &#39;Please Enter Email address.&#39;\r\n    ),\r\n    &#39;rule&#39; =&gt; array(\r\n        &#39;rule&#39; =&gt; &#39;email&#39;,\r\n        &#39;message&#39; =&gt; &#39;Entered Email address is invalid.&#39;\r\n    )\r\n)\r\n\r\n</pre>\r\n\r\n<p>The problem is the first rule notEmpty will never be called because email rule will overwrite it.While using multiple validation rules for the same field you must keep the rule key &quot;unique&quot;. In this case if we want to use multiple rules then, we can simple change the rule key names like,</p>\r\n\r\n<pre>\r\n&#39;email&#39; =&gt; array(\r\n    &#39;rule1&#39; =&gt; array(\r\n        &#39;rule&#39; =&gt; &#39;notEmpty&#39;,\r\n        &#39;message&#39; =&gt; &#39;Please Enter Email address.&#39;\r\n    ),\r\n    &#39;rule2&#39; =&gt; array(\r\n        &#39;rule&#39; =&gt; &#39;email&#39;,\r\n        &#39;message&#39; =&gt; &#39;Entered Email address is invalid.&#39;\r\n    )\r\n)</pre>\r\n\r\n<h3>What is the difference between Required And NotEmpty in CakePHP?</h3>\r\n\r\n<p>nonEmpty simply check the presented data to validate validation in other words if the field are NOT there it will not throw and error, where Required will throw and error if there is not data, field nor not.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How do you get the current URL in CakePHP?</h3>\r\n\r\n<p>To get current url in CakePHP use,&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\necho Router::url($this-&gt;here, true);</pre>\r\n\r\n<p>This will give full URL with hostname.If you want to get relative path instead of full URL,then use the following code:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\necho $this-&gt;here;</pre>\r\n\r\n<p>This will produce absolute URL excluding hostname i.e. /controller/abc/xyz/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How do you make Urls search engine friendly in CakePHP?</h3>\r\n\r\n<p>It&#39;s an automatic task that is done by CakePHP.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Please list a few database related functions in CakePHP?</h3>\r\n\r\n<p>find, findAll , findAllBy , findBy , findNeighbours and query.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Which Methods are can be used to Create and Destroy Model Associations on the Fly?</h3>\r\n\r\n<p>The bindModel() and unbindModel() Model methods are used to create and destroy model associations on the fly.&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What do you use RequestAction Method for?&nbsp;</h3>\r\n\r\n<p>The method requestAction is used to call a controller&rsquo;s action from any location and returns data from the action.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What does Recursive do in CakePHP?&nbsp;</h3>\r\n\r\n<p>Based on the Recursive option being used in CakePHP, you can include related database tables on not - similar to &#39;join&#39; in SQL.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How can we use Ajax in CakePHP?</h3>\r\n\r\n<p>By calling ajax helper and then using it in controller for rendering.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>) What Is Habtm?</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Has and belongs to many is a kind of associations that can be defined in models for retrieving associated data across different entities.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How does CakePHP URL looks in a address bar?</h3>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\nhttp://example.com/controller/action/param1/param2/param3</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How do you include a Javascript Menu throughout the site.</h3>\r\n\r\n<p>By adding the javascript files in webroot and call them in default views if needed everywhere or just in the related veiws.</p>\r\n\r\n<p>in the layout:</p>\r\n\r\n<pre>\r\nif(isset($jsIncludes)){\r\n    foreach($jsIncludes as $js){\r\n       echo $this-&gt;Html-&gt;script($js);\r\n    }\r\n}\r\n</pre>\r\n\r\n<p><br />\r\nin the view:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n$this-&gt;set(&#39;jsIncludes&#39;,array(&#39;my_jsfile&#39;));  </pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>Why does CakePHP have two Vendor folders?</h3>\r\n\r\n<p>There will be two vendor folders available in CakePHP frame work.</p>\r\n\r\n<p>one in &rdquo; app &rdquo; folder and one in root folder</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The vendor folder in the app folder is used to place the third-party libraries which are application specific.</p>\r\n\r\n<p>The vendor folder in the root folder is used to place the third-party libraries which are used for multiple applications.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>What Is The Default Extension Of View Files In CakePHP?</h3>\r\n\r\n<p>default extension of view files is &#39;.ctp&#39;.</p>\r\n\r\n<p>yes we can change it by writing public $ext = &#39;.yourext&#39;; in AppController.If you want to change it for particular controller then add it into that controller only.You can also change it for the specific action of the controller by putting it in that action of controller.</p>\r\n\r\n<pre>\r\npublic $ext = &#39;.yourext&#39;; in AppController\r\n - you can change all the views extentions.\r\n\r\n public $ext = &#39;.yourext&#39;;  in specific controller like, PostsController\r\n- you can change all the views extentions of PostsController.\r\n\r\npublic $ext = &#39;.yourext&#39;;  in specific controller action like, index()\r\n- you can change the view extention of index.ctp \r\n</pre>\r\n\r\n<p>Note: You cannot specify multiple extensions, however it seems like there is a fall back to .ctp if no .php file is found.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>How can you det custom page title for static paged?</h3>\r\n\r\n<p>To set a custom page title, copy-paste following code anywhere in your static page (.ctp) file:</p>\r\n\r\n<p>$this-&gt;set(&quot;title_for_layout&quot;, &quot;My page title&quot;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3>&nbsp;How do you display the schema of a Model?</h3>\r\n\r\n<p>If you want to display the schema of particular model then you just need to add the following single line of code.For example we have &ldquo;Posts&rdquo; Controller.</p>\r\n\r\n<pre>\r\npr($this-&gt;Post-&gt;schema());</pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '2' , '407' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('53' , 'How to create tests, use preconfigured tests, create candidates and invite candidates' , 'how_to_create_tests_use_preconfigured_tests_create_candidates_and_invite_candidates' , '7' , '20' , '1' , 'Testing candidates and assessing skill ' , '<p><img alt=\"help creating tests\" src=\"http://www.skillbooker.com/img/faq/helptest.png\" style=\"float:left\" />Here is where you start..<br />\r\nAfter you have registered/logged in.<br />\r\nPlease do the following:&nbsp;</p>\r\n\r\n<p><br />\r\nRemember <strong>Silver memberships</strong> have limited functionality.<br />\r\n<br />\r\n1. <strong>Add a test</strong><br />\r\n<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1a. Select a Preconfigured test<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1b. Create a Custom test<br />\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1b i) Add Custom Questions<br />\r\n<br />\r\n2. <strong>Add Candidates</strong><br />\r\n<br />\r\n3.<strong> Create an Assessment</strong><br />\r\n(Invite candidates to take the test)<br />\r\n<br />\r\n4. <strong>Compare test restults</strong></p>\r\n' , '' , '2' , '273' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('60' , 'PHP Interview Questions and Answers' , 'php_interview_questions_and_answers' , '7' , '20' , '1' , 'PHP Interview Questions and Answers' , '<p>Here are some typical PHP interview questions. Select 10  for a typical interview</p>\r\n<h2>What is PHP?</h2>\r\n\r\n<p>The first question in any PHP interview will be:&nbsp;<strong>What is PHP?</strong>&nbsp;Here it is PHP: Hypertext Preprocessor is open source server-side scripting language that is widely used for web development. PHP scripts are executed on the server. PHP allows writing dynamically generated web pages efficiently and quickly. The syntax is mostly borrowed from C, Java and perl. PHP is free to download and use.</p>\r\n\r\n<h2>How do you submit form without a submit button.</h2>\r\n\r\n<p>We can achieve the above task by using JavaScript code linked to an event trigger of any form field and call the document.form.submit() function in JavaScript code.</p>\r\n\r\n<h2>Explain echo vs. print the statement.</h2>\r\n\r\n<p>echo() and print() are language constructs in PHP, both are used to output strings. The speed of both statements is almost the same.<br />\r\necho() can take multiple expressions whereas print cannot take multiple expressions.<br />\r\nPrint return true or false based on success or failure whereas echo doesn&#39;t return true or false.</p>\r\n\r\n<h2>What is the difference between $message vs. $$message in PHP.</h2>\r\n\r\n<p>$message is a variable with a fixed name. $$message is a variable whose name is stored in $message.&nbsp;<br />\r\nIf $message contains &quot;var&quot;, $$message is the same as $var.</p>\r\n\r\n<h2>What is&nbsp;the different types of errors you get in PHP?</h2>\r\n\r\n<p>Notices, Warnings and Fatal errors are the types of errors in PHP<br />\r\n<br />\r\n<strong>Notices:&nbsp;</strong><br />\r\nNotices represents non-critical errors, i.e. accessing a variable that has not yet been defined. By default, such errors are not displayed to the user at all but whenever required, you can change this default behavior.<br />\r\n<br />\r\n<strong>Warnings:&nbsp;</strong><br />\r\nWarnings are more serious errors but they do not result in script termination. i.e calling include() a file which does not exist. By default, these errors are displayed to the user.<br />\r\n<br />\r\n<strong>Fatal errors:&nbsp;</strong><br />\r\nFatal errors are critical errors i.e. calling a non-existent function or class. These errors cause the immediate termination of the script.</p>\r\n\r\n<h2>What is the&nbsp;importance of the function htmlentities.</h2>\r\n\r\n<p>The htmlentities() function converts characters to HTML entities.</p>\r\n\r\n<h2>What is MIME?</h2>\r\n\r\n<p><strong>MIME</strong>&nbsp;- Multi-purpose Internet Mail Extensions.&nbsp;<br />\r\n<br />\r\nMIME types represents a standard way of classifying file types over Internet.&nbsp;<br />\r\nWeb servers and browsers have a list of MIME types, which facilitates files transfer of the same type in the same way, irrespective of operating system they are working in.<br />\r\nA MIME type has two parts: a type and a subtype. They are separated by a slash (/).&nbsp;<br />\r\nMIME type for Microsoft Word files is application and the subtype is msword, i.e. application/msword.</p>\r\n\r\n<h2>How do you&nbsp;execute a PHP script using command line.</h2>\r\n\r\n<p>You can execute a PHP script by running the Command line interface program, in which you can enter the PHP script file as an argument. If the file is made for the web interface then it may not execute properly using command line. Command line allows faster execution of the statements and gives faster results.</p>\r\n\r\n<h2>How can we encrypt the password using PHP?</h2>\r\n\r\n<p>crypt() function is used to create one way encryption. It takes one input string and one optional parameter. The function look is defined as: crypt (input_string, salt), where input_string consists of the string which has to be encrypted and salt is an optional parameter. PHP uses DES for encryption. The format is as follows:-</p>\r\n\r\n<pre>\r\n$password = crypt(&#39;mypassword&#39;);&nbsp;  print $password . &ldquo; is the encrypted version of mypassword&rdquo;;</pre>\r\n\r\n<h2>Explain how urlencode() and urldecode() is used?</h2>\r\n\r\n<p>urlencode() returns the URL encoded version of given string. For URL encoding string values are used in the queries to be passed as URL. Whereas,<br />\r\nurldecode() returns the URL decoded string (original string) which will be decoded by taking the already encoded string.</p>\r\n\r\n<pre>\r\n$discount =&quot;10.00%&quot;;\r\n$url = &quot;http://domain.com/submit.php?disc=&quot;.urlencode($discount);\r\necho $url;\r\nOutput: &quot;http://domain.com/submit.php?disc=10%2E00%25&quot;.\r\n</pre>\r\n\r\n<h2>What is a PHP Session?</h2>\r\n\r\n<p>PHP session allows you to store the user session, like their information on server for faster access and for later use like username, IP addresses, their actions etc. The information which is saved is temporary and can be deleted after the user is no longer active. Example of starting a PHP session is as follows:</p>\r\n\r\n<pre>\r\nsession_start(); // start up your PHP session!  </pre>\r\n\r\n<h2>What is meant by PEAR in php? What is the purpose of it?</h2>\r\n\r\n<p>PEAR stands for &quot;PHP Extension and Application Repository&quot;. As the name suggests, it gives advanced functionality to the PHP language and include many applications which can be used on fly. The purpose of it is as follows:-&nbsp;<br />\r\n<br />\r\n- Open source structured library for PHP users<br />\r\n- Code distribution and package maintenance system<br />\r\n- Standard style for code written in PHP</p>\r\n\r\n<h2>Explain the difference between strongly typed and loosely typed language?</h2>\r\n\r\n<p>PHP is a loosely typed language. In this type of language variable doesn&rsquo;t need to be declared before their use. This language converts the data according to its given value. Whereas, in strongly typed language first every type has to be declared (defined) then only it can be used.</p>\r\n\r\n<h2>Explain what a Persistent Cookie is?</h2>\r\n\r\n<p>A cookie which is stored in a cookie file permanently on the browser&rsquo;s computer.&nbsp;</p>\r\n\r\n<h2>Explain the differences between DROP a table and TRUNCATE a table.</h2>\r\n\r\n<p>DROP - It will delete the table and table data.&nbsp;<br />\r\nTRUNCATE - It will delete data of the table but not the table definition.&nbsp;</p>\r\n\r\n<h2>What is the &quot;GET&quot; and &quot;POST&quot; methods?</h2>\r\n\r\n<p>Both the methods are used to send data to the server.&nbsp;<br />\r\nGET method - the browser appends the data onto the URL.&nbsp;<br />\r\nPost method - the data is sent as &ldquo;standard input.&rdquo;</p>\r\n\r\n<h2>Explain the &quot;unlink&quot; and &quot;unset&quot; functions.</h2>\r\n\r\n<p>unlink() function is for file system handling. It just deletes the file in context.<br />\r\nunset() function is for variable management. It makes a variable undefined</p>\r\n\r\n<h2>What is the SQL for changing the name of a column in a table?</h2>\r\n\r\n<p>ALTER TABLE table_name CHANGE old_colm_name new_colm_name&nbsp;</p>\r\n\r\n<h2>How long does the default session time in PHP last?</h2>\r\n\r\n<p>Until closing the browser.&nbsp;</p>\r\n\r\n<h2>What is the SQL for creating a database using PHP and MySQL?</h2>\r\n\r\n<p>By using : mysql_create_db(&quot;Database Name&quot;)&nbsp;</p>\r\n\r\n<h2>How will you find out the value of current session id?&nbsp;</h2>\r\n\r\n<p>By using: session_id()&nbsp;</p>\r\n\r\n<h2>How can we increase the execution time of a PHP script?</h2>\r\n\r\n<p>By default the PHP script takes 30secs to execute. This time is set in the php.ini file. This time can be increased by modifying the max_execution_time in seconds. The time must be changed keeping the environment of the server. This is because modifying the execution time will affect all the sites hosted by the server.</p>\r\n\r\n<h2>What is the purpose of output buffering in PHP.</h2>\r\n\r\n<p>Output buffering in PHP buffers a scripts output. This buffer can be edited before returning it to the client. Without output buffering, PHP sends data to the web server as soon as it is ready. Output buffering &quot;send&quot; cookies at any point in the script. Cookies do not have to be necessarily sent near the start of page. Output buffers are stackable and hence sending to output is by choice.</p>\r\n\r\n<h2>What is a session in PHP.</h2>\r\n\r\n<p>When a user logs in an application, his details are usually stored in a session variable. This information is available to all pages in one application. Sessions in PHP work using a unique id for each visitor.</p>\r\n\r\n<h2>How can we calculate number of days between two given dates using PHP?</h2>\r\n\r\n<p>The start date and end date can be first found as shown below:</p>\r\n\r\n<pre>\r\n $date1= strotime($start_date);  $date2= strotime($end_date);  $date_diff = (($date1)- ($date2)) / (60*60*24)</pre>\r\n\r\n<h2>Write the PHP with MySQL connection statements</h2>\r\n\r\n<p>The statements that can be used to connect PHP wil MySQL is:</p>\r\n\r\n<pre>\r\n$conn = mysql_connect(&#39;localhost&#39;);  echo $conn;                </pre>\r\n\r\n<p>This statement gets the resource of the localhost. There are other different ways with which you can connect to the database and they are as follows:</p>\r\n\r\n<pre>\r\nmysql_connect(&#39;db.domain.com:33306&#39;,&#39;root&#39;,&#39;user&#39;);  mysql_connect(&#39;localhost:/tmp/mysql.sock&#39;);  mysql_connect(&#39;localhost&#39;,&#39;rasmus&#39;,&#39;foobar&#39;,  true,MYSQL_CLIENT_SSL|MYSQL_CLIENT_COMPRESS);\r\n</pre>\r\n\r\n<h2>How to use HTTP Headers inside PHP? Write the statement through which it can be added?</h2>\r\n\r\n<p>HTTP headers can be used in PHP by redirection which is written as:</p>\r\n\r\n<pre>\r\n header(&#39;Location: http://www.php.net&#39;)</pre>\r\n\r\n<p>The headers can be added to HTTP response in PHP using the header(). The response headers are sent before any actual response being sent. The HTTP headers have to be sent before taking the output of any data. The statement above gets included at the top of the script.</p>\r\n\r\n<h2>Why PHP is also called as Scripting language?</h2>\r\n\r\n<p>PHP is basically a general purpose language, which is used to write scripts. Scripts are normal computer files that consist of instructions written in PHP language. It tells the computer to execute the file and print the output on the screen. PHP is used for webpages and to create websites, thus included as scripting language.</p>\r\n\r\n<h2>What is the difference between PHP and JavaScript?</h2>\r\n\r\n<p>The difference lies with the execution of the languages. PHP is server side scripting language, which means that it can&rsquo;t interact directly with the user. Whereas, JavaScript is client side scripting language, that is used to interact directly with the user.</p>\r\n\r\n<h2>What does ODBC do in context with PHP?</h2>\r\n\r\n<p>PHP supports many databases like dBase, Microsft SQL Server, Oracle, etc. But, it also supports databases like filePro, FrontBase and InterBase with ODBC connectivity. ODBC stands for Open Database connectivity, which is a standard that allows user to communicate with other databases like Access and IBM DB2.</p>\r\n\r\n<h2>Explain the differences between require_once(), require(), include()?</h2>\r\n\r\n<p>require() includes and evaluates a specific file, if the file is not found then it shows a Fatal Error.&nbsp;<br />\r\nrequire_once() includes only the file which is not being included before. It is used to be recommended for the files where you have lots of functions stored.&nbsp;<br />\r\ninclude() includes the file, even if the file is not found, but it gives a warning to the user to include().</p>\r\n\r\n<h2>How the web server interprets PHP and interacts with the client?</h2>\r\n\r\n<p>After installing and configuring the PHP, the web When PHP is installed, the Web server looks for PHP code that is embedded in HTML file with its extension. The extensions which are used are .php or .phtml. When web server receives a request for the file with an appropriate extension, HTML statements are processed and PHP statements are executed on the server itself. When the processing gets over the output is being shown in HTML statements.</p>\r\n\r\n<h2>What is the difference between echo, print and printf()?</h2>\r\n\r\n<p>Echo is the basic type used to print out a string. It just shows the content of the message written using it. It can have multiple parameters as well. print is a construct, it returns TRUE on successful output and FALSE there is no output. It can&rsquo;t have multiple parameters.&nbsp;<br />\r\n<br />\r\nPrintf() is a function, and not be used as a construct. It allows the string output to be formatted. It is the slowest medium to print the data out.</p>\r\n\r\n<h2>What IDE is recommended for use with PHP?</h2>\r\n\r\n<p>IDE stands for Integrated Development environment; it is a framework for developing applications. It includes programming editor where you can edit and write the development programs. The features of IDE are as follows:<br />\r\n<br />\r\n<strong>1. Debugging:</strong>&nbsp;this is the feature which is used to debug or find the bugs in a program<br />\r\n<strong>2. Preview:</strong>&nbsp;this is the feature which allow instant preview of the program you are writing<br />\r\n<strong>3. Testing:</strong>&nbsp;this is the features that includes built in testing features through which you can check your scripts<br />\r\n<strong>4. FTP:</strong>&nbsp;through this you can upload and download the file while connecting to the server.<br />\r\n<strong>5. Project management:</strong>&nbsp;it organizes scripts into projects; manages the files in the project; includes file checkout and check-in features.<br />\r\n<strong>6. Backups:</strong>&nbsp;it creates backups automatically of your Web site at periodic intervals.</p>\r\n\r\n<h2>Name the different types of statements in PHP?</h2>\r\n\r\n<p>There are four kinds of PHP statements that are present. They are as follows:&nbsp;<br />\r\n<br />\r\n<strong>Simple statement</strong>- these are the echo statements and end with a semicolon (;). PHP ignores white spaces between simple statements. Until it finds a semicolon it reads the statement.&nbsp;<br />\r\n<br />\r\n<strong>Complex/Conditional statements</strong>: these are the statements which deal with certain conditions that have to be executed to meet certain specific requirements. These are if and else block or switch statements. PHP reads the complete statement and doesn&rsquo;t stop at the first semicolon it encounters. It looks for starting and ending braces to end the execution.<br />\r\n<br />\r\n<strong>Looping statements</strong>: statements that are repeated in a block. The feature that enables you to execute the statements repeatedly is called as loop. For example: for loop, while loop, do..while loop.</p>\r\n\r\n<h2>How can we increase the execution time of a php script?</h2>\r\n\r\n<p>By the use of void set_time_limit(int seconds)<br />\r\n<br />\r\nSet the number of seconds a script is allowed to run. If this is reached, the script returns a fatal error. The default limit is 30 seconds or, if it exists, the max_execution_time value defined in the php.ini. If seconds is set to zero, no time limit is imposed.<br />\r\n<br />\r\nWhen called, set_time_limit() restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as set_time_limit(20) is made, the script will run for a total of 45 seconds before timing out.</p>\r\n\r\n<h2>Write a Hello world script using variables</h2>\r\n\r\n<p>To write the hello world program in PHP using variable you need to know the tags that are used in HTML and the PHP coding which is as follows:</p>\r\n\r\n<pre>\r\n&lt;html&gt;  &lt;head&gt;&lt;title&gt;Hello World Script using Variable&lt;/title&gt;&lt;/head&gt;  &lt;body&gt;  &lt;?php $salutation = &ldquo;Hello World!&rdquo;;  echo &ldquo;&lt;p&gt;$salutation&lt;/p&gt;&rdquo;; ?&gt;  &lt;/body&gt;  /html&gt; </pre>\r\n\r\n<h2>Explain what type casting mean</h2>\r\n\r\n<p>PHP automatically store the data and interprets according to itself. Type casting is a way to assign the variable according to your need and requirement and not allowing PHP to assign it automatically. To specify the type, it can be used like:</p>\r\n\r\n<pre>\r\n$newint = (int) $var1;  $newfloat = (float) $var1;  $newstring = (string) $var1;                </pre>\r\n\r\n<p>The value in the variable on the right side of the equal sign is stored in the variable on the left side as the specified type.</p>\r\n\r\n<h2>How error handling is being handled by PHP?</h2>\r\n\r\n<p>Error handling is very important in every programming language. PHP uses the trigger to print the error in a program. The example statement is given below:</p>\r\n\r\n<pre>\r\nIf ($height_of_door &gt; $height_of_house){&nbsp;  trigger_error(&ldquo;Impossible condition&rdquo;,E_USER_ERROR);&nbsp;  }</pre>\r\n\r\n<p><br />\r\nThe E_USER_ERROR in the statement tells PHP that the condition is an error. Impossible condition is a string message which is displayed when an error is encountered.&nbsp;<br />\r\nIf the condition comes out to be true then the following message is displayed:<br />\r\n<br />\r\nFatal error: Impossible condition<br />\r\n<br />\r\nE_USER_WARNING or E_USER_NOTICE can be used instead of E_USER_ERROR, to have PHP treat the condition as a warning or notice. Own statements can be written to perform error handling actions such as send a message, log a message or stop the script.&nbsp;<br />\r\n<br />\r\nFor example:&nbsp;</p>\r\n\r\n<pre>\r\nIf ($height_of_door &gt; $height_of_house){  echo &ldquo;This is impossible&lt;br&gt;&rdquo;;  exit(); } </pre>\r\n\r\n<pre>\r\n  If $height_of_door is larger than $height_of_house, the message is echoed, and exit() stops the script.&nbsp;  Die statement can be used to display an error message when a function fails. </pre>\r\n\r\n<h2>How do you escape characters</h2>\r\n\r\n<p>Special characters are the characters that have some special meaning attached to it. Example is $, #, % etc. A backslash (\\) before the special symbol is known as escaping characters. For example, two strings produce the same output:</p>\r\n\r\n<pre>\r\n$string = &lsquo;The variable name is $var1&rsquo;;  $string = &ldquo;The variable name is \\$var1&rdquo;;               </pre>\r\n\r\n<p>The output from either string is the following:<br />\r\nThe variable name is $var1<br />\r\nSuppose you want to store a string as follows:</p>\r\n\r\n<pre>\r\n$string = _Where is Tom&rsquo;_s house_;  echo $string;</pre>\r\n\r\n<p><br />\r\nThe sting can be interpreted by PHP by putting a backslash (\\) in front of the single quote. The backslash tells PHP that the single quote does not have any special meaning; it&rsquo;s just an apostrophe.&nbsp;</p>\r\n\r\n<pre>\r\n$string = _Where is Tom\\&rsquo;_s house_;\r\n</pre>\r\n\r\n<h2>How do you join of two strings in PHP?</h2>\r\n\r\n<p>Two strings can be joined together by the use of a process called as concatenation. A dot (.) operator is used for this purpose. Example is as follows:</p>\r\n\r\n<pre>\r\n$string1 = _Hello_;  $string2 = _World!_;  $stringall = $string1.$string2;  echo $stringall; </pre>\r\n\r\n<h2>What are the different components used in PHP for formatting?</h2>\r\n\r\n<p>The components that are used in PHP for formatting are as follows:&nbsp;<br />\r\n<br />\r\n1.&nbsp;<strong>%</strong>: it tells the start of the formatting instruction.<br />\r\n2.&nbsp;<strong>Padding character (pad)</strong>: is used to fill out the string when the value to be formatted is smaller than the width assigned. Pad can be a space, a 0, or any character preceded by a single quote (&lsquo;).&nbsp;<br />\r\n3.&nbsp;<strong>-</strong>: A symbol meaning to left-justify the characters. If this is not included, the characters are right-justified.<br />\r\n4.&nbsp;<strong>width</strong>: The number of characters to use for the value. If the value doesn&rsquo;t fill the width, the padding character is used to pad the value. For example, if the width is 5, the padding character is 0, and the value is 1, the output is 00001.<br />\r\n5.&nbsp;<strong>dec</strong>: The number of decimal places to use for a number. This value is preceded by a decimal point.<br />\r\n6.&nbsp;<strong>type</strong>: The type of value. Use s(string) for string, f (float) for numbers that you want to format with decimal places.</p>\r\n\r\n<h2>What is the use of super-global arrays in PHP?</h2>\r\n\r\n<p>Super global arrays are the built in arrays that can be used anywhere. They are also called as auto-global as they can be used inside a function as well. The arrays with the longs names such as $HTTP_SERVER_VARS, must be made global before they can be used in an array. This $HTTP_SERVER_VARS check your php.ini setting for long arrays.</p>\r\n\r\n<h2>What is the use of $_Server and $_Env?</h2>\r\n\r\n<p>$_SERVER and $_ENV arrays contain different information. The information depends on the server and operating system being used. Most of the information can be seen of an array for a particular server and operating system. The syntax is as follows:</p>\r\n\r\n<pre>\r\nforeach($_SERVER as $key =&gt;$value)    {&nbsp;    echo &ldquo;Key=$key, Value=$value\\n&rdquo;;&nbsp;    }  \r\n</pre>\r\n\r\n<h2>What is the difference between $argv and $argc? Give example?</h2>\r\n\r\n<p>To pass the information into the script from outside, help can be taken from the PHP CLI (Command line interface) method. Suppose addition of two numbers has to be passed to PHP then it can be passed like this on the command line:<br />\r\n<br />\r\nphp add.php 2 3<br />\r\n<br />\r\nHere the script name is add.php, and 2 and 3 are the numbers that has to be added by the script. These numbers are available inside the script in an array called&nbsp;<br />\r\n$argv. This array contains all the information on the command line; the statement is stored as follows:</p>\r\n\r\n<pre>\r\n$argv[0]=add.php  $argv[1]=2  $argv[2]=3            </pre>\r\n\r\n<p>So, $argv always contains at least one element &mdash; the script name.<br />\r\nThen, in your script, you can use the following statements:</p>\r\n\r\n<pre>\r\n$sum = $argv[1] + $argv[2];  echo $sum;</pre>\r\n\r\n<p>$argc is a variable that stores the numbers of elements in $argv. $argc is equal to at least 1, which is saved for the name of the script.&nbsp;<br />\r\nExample is $argc=3 using the above statements.</p>\r\n\r\n<h2>How would you joining of multiple comparisons in PHP?</h2>\r\n\r\n<p>PHP allows multiple comparisons to be grouped together to determine the condition of the statement. It can be done by using the following syntax:<br />\r\ncomparison1 and|or|xor comparison2 and|or|xor comparison3 and|or|xor.&nbsp;<br />\r\n<br />\r\nThe operators that are used with comparisons are as follows:<br />\r\n<br />\r\n1.&nbsp;<strong>and:</strong>&nbsp;result in positive when both comparisons are true.<br />\r\n2.&nbsp;<strong>or:</strong>&nbsp;result in positive when one of the comparisons or both of the comparisons are true.<br />\r\n3.&nbsp;<strong>xor:</strong>&nbsp;result in positive when one of the comparisons is true but not both of the comparisons.</p>\r\n\r\n<pre>\r\n$resCity == &ldquo;Reno&rdquo; or $resState == &ldquo;NV&rdquo; and $name == &ldquo;Sally&rdquo; </pre>\r\n\r\n<h2>How to create reusable code in PHP?</h2>\r\n\r\n<p>Applications created in PHP often perform the same task in same script or in different scripts. To create a reusable code functions are used. Functions are group of PHP statements that perform a specific task.&nbsp;<br />\r\n<br />\r\n<strong>Example:&nbsp;</strong><br />\r\nA header and footer can be created for all the web pages which has to be used again and again.&nbsp;</p>\r\n\r\n<pre>\r\necho &lsquo;&lt;img src=&rdquo;greenrule.jpg&rdquo; width=&rdquo;100%&rdquo; height=&rdquo;7&rdquo; /&gt;  &lt;address&gt;My Great Company  &lt;br /&gt;1234 Wonderful Rd.  &lt;br /&gt;San Diego, CA 92126  &lt;/address&gt;&lt;/font&gt;  &lt;p&gt;or send questions to  &lt;a href=&rdquo;mailto:sales@company.com&rdquo;&gt;sales &lt;/a&gt;  &lt;img src=&rdquo;greenrule.jpg&rdquo; width=&rdquo;100%&rdquo; height=&rdquo;7&rdquo; /&gt;&rsquo;;             </pre>\r\n\r\n<p>Instead of typing header and footer for each page, a function can be created and used to add footer and header in every page. The function can be named as:</p>\r\n\r\n<pre>\r\nadd_footer();  add_header();                          </pre>\r\n' , '' , '1' , '396' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('61' , 'How much are you worth? This tool can tell you by looking at your CV' , 'how_much_are_you_worth_this_tool_can_tell_you_by_looking_at_your_cv' , '7' , '20' , '1' , 'Adzuna has built a tool to help employees negotiate pay' , '<p>Adzuna has built a tool to help employees negotiate pay</p>\r\n\r\n<p>A new app by the job search site Adzuna can tell you how much you are worth just by looking at your CV.</p>\r\n\r\n<p><a href=\"https://www.adzuna.co.uk/jobs/value-my-cv/upload\" target=\"_blank\">Value My CV</a>&nbsp;looks at over 100 data points in a CV, from education to employers to job skills, and uses that data to calculate a person&rsquo;s market rate. It was created by the same data scientist who worked on Rightmove&rsquo;s house price algorithm.</p>\r\n\r\n<p>Users can then generate a statistical estimate of their salary alongside suggested jobs, CV improvements and career pathways.</p>\r\n\r\n<p>Andrew Hunter, who co-founded Adzuna, said that it took them about a year to build the technology.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"AdzunaData.JPG\" src=\"http://www.skillbooker.com/img/tutorials/recruit/AdzunaData.JPG\" style=\"height:auto; margin:0px 0px 10px; width:564px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&ldquo;We think there&rsquo;s a problem matching candidates in the UK,&rdquo; Hunter said. &ldquo;There are a million unemployed and a million jobs, but at the moment people don&rsquo;t realise what&rsquo;s available. We&rsquo;re trying to help solve that problem using new technology.&rdquo;</p>\r\n\r\n<p>You can try the tool&nbsp;<a href=\"https://www.adzuna.co.uk/jobs/value-my-cv/upload\" target=\"_blank\">here</a>.</p>\r\n' , '' , '2' , '197' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('62' , 'CSS Interview Questions and Answers' , '20_of_the_best_css_interview_questions_and_answers' , '7' , '20' , '1' , 'css interview questions and answers' , '<h2>What CSS properties can change dimensions, describe them.</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>height: Sets a specific height\r\n		<ul>\r\n			<li>auto</li>\r\n			<li>length</li>\r\n			<li><em>%</em></li>\r\n			<li>inherit</li>\r\n		</ul>\r\n		</li>\r\n		<li>width: Sets a specific width\r\n		<ul>\r\n			<li>auto</li>\r\n			<li>length</li>\r\n			<li><em>%</em></li>\r\n			<li>inherit</li>\r\n		</ul>\r\n		</li>\r\n		<li>max-height: Sets a maximum height\r\n		<ul>\r\n			<li>auto</li>\r\n			<li>length</li>\r\n			<li><em>%</em></li>\r\n			<li>inherit</li>\r\n		</ul>\r\n		</li>\r\n		<li>max-width: Sets a maximum width\r\n		<ul>\r\n			<li>auto</li>\r\n			<li>length</li>\r\n			<li><em>%</em></li>\r\n			<li>inherit</li>\r\n		</ul>\r\n		</li>\r\n		<li>min-height: Sets a minimum height\r\n		<ul>\r\n			<li>auto</li>\r\n			<li>length</li>\r\n			<li><em>%</em></li>\r\n			<li>inherit</li>\r\n		</ul>\r\n		</li>\r\n		<li>min-width: Sets a minimum width\r\n		<ul>\r\n			<li>auto</li>\r\n			<li>length</li>\r\n			<li><em>%</em></li>\r\n			<li>inherit</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>How do you use a pseudo class?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Pseudo classes are similar to classes, but are not explicitly defined in the markup, and are used to add additional effects to selected HTML elements such as link colors, hover actions, etc.</li>\r\n		<li>Pseudo classes are defined by first listing the selector, followed by a colon and then pseudo-class element. E.g., &nbsp;a:link{ color: blue }, or a:visited { color: red }</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>Pseudo-class syntax:</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p>selector:pseudo-class {<br />\r\nproperty:value;}</p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>Syntax for using a pseudo class within a CSS class:</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p>selector.class:pseudo-class {<br />\r\nproperty:value;}</p>\r\n\r\n<h2>How do you use grouping?</h2>\r\n\r\n<p>e.g.) &nbsp;h1, h2 &nbsp;{ font-family: Helvetica; font-size: 20; }</p>\r\n\r\n<h2>How do you use shorthand properties ?.</h2>\r\n\r\n<p>e.g.) Code snippet &lsquo;a&rsquo; gets shorthanded into code snippet &lsquo;b&rsquo; by condensing the property values (in order) onto a single line:</p>\r\n\r\n<p><strong>a)</strong></p>\r\n\r\n<p><img alt=\"HTML Css Coding\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-10-Screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<p><strong>b)</strong></p>\r\n\r\n<p><img alt=\"HTML Css Coding\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-111.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<h2>Indicate how to attach style sheets to a web page:</h2>\r\n\r\n<p><img alt=\"html-css-coding-screenshot\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<p><img alt=\"css coding, web page styles\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-3-and-4.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>:link, :visited, :hover, :active, :first_line are all examples of pseudo classes, used to call a specific action on an element, such as the changing of a link color after it has been visited.</li>\r\n	</ul>\r\n\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>Grouping allows you to apply the same style to multiple elements with a single declaration. This is done by grouping the selectors into a list, separated by commas.</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n\r\n	<h2>How is a class selector used?</h2>\r\n\r\n	<p><strong>Within an HTML doc:</strong></p>\r\n\r\n	<p><img alt=\"Class Selector\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/Class-Selector-Screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n	<p><strong>Within a CSS doc:</strong></p>\r\n\r\n	<p><img alt=\"Class Selector\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/Class-Selector-2-Screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>Grouping helps memory usage and enhances readability.</li>\r\n		</ul>\r\n\r\n		<ul>\r\n			<li>\r\n			<ul>\r\n				<li>A class can be thought of as a grouped collection of CSS attributes applied to HTML elements. This allows you to apply the same styling to multiple HTML elements by placing them in the same CSS class.</li>\r\n				<li>Class methods can be called by inserting a &lsquo;class&rsquo; property and name within an HTML element, then calling the class name with a &lsquo;.&rsquo; &nbsp;in the CSS doc.</li>\r\n				<li>Class syntax:</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n\r\n		<ul>\r\n			<li>\r\n			<ul>\r\n				<li>The code listed here identifies the class &lsquo;intro&rsquo; in the HTML doc, then applies the same background-color styling to all paragraphs within that class.</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>Using shorthand properties can improve page load times and reduce file size.</li>\r\n			<li>Can be done with background, font, border, padding, outline, and list-style properties.</li>\r\n			<li>Shorthanding is accomplished by listing the property values on a single line, in a specific order.</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li><strong>Inline:</strong>&nbsp;Though this method often goes against best practices, it&rsquo;s easily done by inserting a &lsquo;style&rsquo; attribute inside an HTML element:\r\n\r\n			<ul>\r\n				<li>e.g.) &lt;p style=&rdquo;color:blue&rdquo;&gt;Lorem Ipsum&lt;/p&gt;</li>\r\n			</ul>\r\n			</li>\r\n			<li><strong>Embedded/Internal:</strong>&nbsp;Done by defining the head of an HTML document by wrapping characteristics in a &lt;style&gt; tag.</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li><strong>Linked/External:</strong>&nbsp;CSS is placed in an external .css file, and linked to the HTML document with a &lt;link&gt; tag. This can also be accomplished using the &lsquo;@import&rsquo;, however, this can slow page load time and is generally not advised.</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>How do you use a ID selector?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>IDs are used to identify and apply styling to a single specific HTML element. IDs are defined within the HTML page by inserting an ID selector in the HTML element:\r\n		<ul>\r\n			<li>eg)</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p><img alt=\"HTML CSS Coding\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-5-screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>ID selectors are defined within the CSS page by calling a &lsquo;#&rsquo; followed by the name of the ID:\r\n		<ul>\r\n			<li>eg)</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p><img alt=\"HTML CSS Coding\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-6-Screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>ID selectors are unique and can only be applied to a single element.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>What is the difference between a Class selector and a ID selector?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Class selectors are used to apply style to multiple HTML identified with the same class.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>Within the HTML doc:</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>\r\n			<ul>\r\n				<li>e.g.)</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p><img alt=\"HTML Css Coding\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-7-Screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Class selectors are called within the CSS document by a &lsquo;.&rsquo;, followed by the class name:</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>Within the CSS doc:\r\n			<ul>\r\n				<li>e.g.)</li>\r\n			</ul>\r\n			</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p><img alt=\"HTML Css Coding\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-8-Screenshot.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>The main difference is that the same class selector can be applied to multiple HTML elements, whereas ID selectors are unique..</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>Explain child selectors?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Child selectors are another way to group and style a set of elements that descend from a parent element.</li>\r\n		<li>A child selector is matched by calling two or more elements, separated by a &lsquo;&gt;&rsquo; sign to indicate inheritance.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p>e.g.)</p>\r\n\r\n<p><img alt=\"html-css-coding-9-620x115\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/html-css-coding-9-620x1152.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>In this example, the same styling would be applied to all paragraphs within the body.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>How do you use the float property in CSS?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Floats allow an element to be positioned horizontally, allowing elements below the floated element to flow around it. Several floating elements can be placed together to make a gallery type layout.</li>\r\n		<li>Floats can only accept a left or right value.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>\r\n		<ul>\r\n			<li>e.g.)</li>\r\n		</ul>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p>img {<br />\r\nfloat: right;<br />\r\nwidth: 50px;<br />\r\nmargin: 5px;<br />\r\n}</p>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>To prevent subsequent elements from flowing around the floated element, pass in the clear property, followed by the side you wish to disable (i.e., &lsquo;left&rsquo;, &lsquo;right&rsquo;, &lsquo;both&rsquo;).</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>How do you use the CSS box model? What elements does it include?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>CSS box model is made up of margins, borders, padding, and content.</li>\r\n		<li>Box model provides a structured way to space elements in relationship to each other.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p><img alt=\"W3 Schools\" src=\"http://www.skillbooker.com/img/tutorials/recruiters/20_of_the_best_css_interview_questions_and_answers/W3-CSS-Box-Model-Screenshot1.jpg\" style=\"height:auto; width:100%\" /></p>\r\n\r\n<h2>How to restore the default property value using CSS?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>In short, there&rsquo;s no easy way to restore to default values to whatever a browser uses . The closest option is to use the &lsquo;initial&rsquo; property value, which will restore it to the default CSS values, rather than the browser&rsquo;s default styles.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>How do you use pseudo-elements?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Pseudo elements are made using a double colon (::) followed by the name of the pseudo element.</li>\r\n		<li>Pseudo-elements are used to add special effects to some selectors, and can only be applied to block-level elements.</li>\r\n		<li>Most commonly used pseudo-elements are ::first_line, ::first_letter, ::before, ::after</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>How are inline and block elements different from each other?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>A block element is an element that takes up the full width available, and has a line break before and after it. &lt;h1&gt;, &lt;p&gt;, &lt;li&gt;, and &lt;div&gt; are all examples of block elements.</li>\r\n		<li>An inline element only takes up as much width as necessary, cannot accept width and height values, and does not force line breaks. &lt;a&gt; and &lt;span&gt; are examples of inline elements.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>How do you use the z-index property?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>The z-index helps specify the stack order of positioned elements that may overlap one another. The z-index default value is zero, and can take on either a positive or negative number.</li>\r\n		<li>An element with a higher z-index is always stacked above one with a lower index.</li>\r\n		<li>Z-Index can take the following values:</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Auto:</strong>&nbsp;Sets the stack order equal to its parents.</p>\r\n\r\n<p><strong>Number</strong>: Orders the stack order.</p>\r\n\r\n<p><strong>Initial:</strong>&nbsp;Sets this property to its default value (0).</p>\r\n\r\n<p><strong>Inherit:</strong>&nbsp;Inherits this property from its parent element.</p>\r\n\r\n<h2>What are the advantages and disadvantages of External Style Sheets?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>The biggest advantages of external style sheets are that they can be applied to multiple documents while being managed from a single style sheet. This keeps code DRY and improves efficiency and convenience.</li>\r\n		<li>The disadvantages are that it may decrease loading time in some situations. It may also not be practical if there are not enough styling conditions to justify an external sheet.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>List the main CSS style sheet properties:</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Background</li>\r\n		<li>Text</li>\r\n		<li>Font</li>\r\n		<li>Border</li>\r\n		<li>Outline</li>\r\n		<li>Margin</li>\r\n		<li>Padding</li>\r\n		<li>List</li>\r\n		<li>Table</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>Which online resources do you refer to when having issues with CSS?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>No real correct answer here, save for being able to discuss &nbsp;your favorite online CSS community forums and resources. e.g. Mozilla Developer Network, StackOverflow, etc.</li>\r\n		<li>This is just your opportunity to discuss larger CSS issues and show how plugged-in you are to the community.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>What are the various techniques for clearing floats?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>At some point or another, you will likely experience a collapsed float, which you will need to address.</li>\r\n		<li>This can be accomplished several ways, including using a clearfix2 by floating the parent element of the collapsed element, or by using an overflow property3.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>&nbsp;Explain the difference between visibility:hidden and display:none</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>visibility:hidden simply hides the element, while it will still take up space and affect the layout of the document.</li>\r\n		<li>display:none also hides the element, but will not take up space and the page will appear as if the element is not present.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>What are some of the new features and properties in CSS3?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Box model</li>\r\n		<li>New Web fonts</li>\r\n		<li>Rounded corners</li>\r\n		<li>Border Images</li>\r\n		<li>Box Shadows, Text Shadows</li>\r\n		<li>New Color schemes (RGBA)</li>\r\n		<li>Transform property</li>\r\n		<li>New Pseudo-classes</li>\r\n		<li>Multi-column layout</li>\r\n		<li>New Gradients</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>Why shouldn&rsquo;t I use fixed sized fonts ?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Often times, fixed font sizes will show up incorrectly on the user end and will prohibit responsiveness. Using relative sizing will keep fonts proportionate in their relationships to each other and will allow for greater end user flexibility.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>Which font names are available on all platforms ?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Only five basic font families( serif, sans-serif, cursive, fantasy, and monsospace) are recognized across platforms, rather than specific fonts.</li>\r\n		<li>Specific font name recognitions will vary by browser.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>Do you use grid systems, and if so, what do you prefer?</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Again, no correct answer here. Just be able to discuss the pros and cons of different grid systems, mobile-first, fluid and responsive web design issues.</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<h2>What are the advantages/disadvantages of using CSS preprocessors? (SASS, Compass, Stylus, LESS)</h2>\r\n\r\n<ul>\r\n	<li>\r\n	<ul>\r\n		<li>Here is another opportunity to discuss your personal preferences on use of CSS preprocessors and why.</li>\r\n		<li>While there&rsquo;s no right or wrong answer here, below are some commonly cited pros and cons of using preprocessors:</li>\r\n	</ul>\r\n	</li>\r\n</ul>\r\n\r\n<p><strong>Benefits:</strong>&nbsp;Ability to use nested sytax, define variables and mixins, use of mathematical and operational functions, and the ability to join multiple files into a single one.</p>\r\n\r\n<p><strong>Disadvantages:</strong>&nbsp;Difficulties tracking file size, maintenance and updating issues, difficulties debugging.</p>\r\n' , '' , '1' , '257' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('63' , 'The 5 top lies people tell on their resumes / cvs.' , 'the_5_top_lies_people_tell_on_their_resumes_cvs' , '7' , '20' , '1' , 'Here are the top 5 truths people \'bend\' on their CV\'s / resume\'s' , '<p>It it always amazes me that people can be that stupid. Especially if they apply for a position with 5 figures!&nbsp;<br />\r\nDon&#39;t they think that we&#39;ll check references, dates, educational institutions?</p>\r\n\r\n<p><strong>Here are the top 5&nbsp;truths people &#39;bend&#39; on their CV&#39;s / resume&#39;s:<img alt=\"oranges and appples\" src=\"http://www.skillbooker.com//img/tutorials/recruiters/the_5_top_lies_people_tell_on_their_resumes_cvs/orangesandapples.jpg\" style=\"float:left; height:231px; width:218px\" /></strong></p>\r\n\r\n<ol>\r\n	<li><strong>Attended a college</strong>, but never completed. Yes, allot of the time people have attended a college, but for some reason have never got the degree, or qualification.&nbsp;<br />\r\n	On their CV&nbsp;it will be listed as a degree. - &nbsp;NOT: degree I was AIMING FOR AND MISSED, or NOT FINISHED</li>\r\n	<li><strong>Dates</strong>: Often in the work history the dates working at various companies will be listed. When you phone the company.<br />\r\n	a. The person has never worked there!<br />\r\n	b. The person worked there for 3 weeks (not three years oops!)<br />\r\n	c. The company simply does not exist.</li>\r\n	<li><strong>Experience&nbsp;</strong>in technologies: &#39;<em>I have 5+ experience in MYSQL</em>&#39; says the CV. Mean while the person had once glance at a MYSQL book for<em>&nbsp;dummies</em>&nbsp;which was on a friend&#39;s coffee table.<br />\r\n	This is a more difficult one to pin down. Many HR managers won&#39;t neccessary need a person to have university or colledge education. The best way to pin this down is:&nbsp;<br />\r\n	Send them a half and hour&nbsp;<a href=\"https://www.skillbooker.com/\" target=\"_blank\">SKILLBOOKER SKILLS EVALUATION TEST</a>. It is&nbsp;<strong>free</strong>&nbsp;and will immediately separate the wheat from the chaff.</li>\r\n	<li>Is what we touched on in 3. the companies, websites on their CV&nbsp;does not exist. How stupid! A quick Google search or search for the company at&nbsp;<strong>HMRC (in the UK)</strong>&nbsp;will quickly show if that company ever existed.</li>\r\n	<li>Phony contact details. &#39;<em>I worked for Anna Smith</em>&nbsp;- here&#39;s her number&#39; . You phone the number and &#39;Anna Smith&#39; says &#39;yes&#39; in a Brazilian accent !</li>\r\n</ol>\r\n' , '' , '1' , '210' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('64' , 'Compare two six packs' , 'compare_two_six_packs' , '7' , '20' , '1' , 'comparing candidates' , '<img alt=\"compare six packs\" src=\"http://www.skillbooker.com//img/tutorials/recruiters/compare_two_six_packs/compare-six-pack.jpg\" style=\"float:left; height:auto; width:580px; padding:20px;\" />\r\n\r\n<p>Many candidates applying for jobs or positions can show you a &#39;six pack&#39;. On their CV or Resume they have ticked all the boxes.</p>\r\n\r\n<p>The have the&nbsp;<em>degree</em>&nbsp;(tick), the&nbsp;<em>experience</em>&nbsp;(tick), the right&nbsp;<em>buzz words</em>&nbsp;(tick)</p>\r\n\r\n<p><strong>The main quesions is:</strong>&nbsp;<br />\r\nIs this candidate going to deliver for the company who employs him/her? Will they have the actual stamina to stay at least through their probation period and hopefully another year or two?<br />\r\nIf they are employed on a contract basis will they be able to deliver the work in the&nbsp;<strong>time frame</strong>&nbsp;and&nbsp;<strong>work quality</strong>&nbsp;that is expected?</p>\r\n\r\n<p>Can a person with&nbsp;<strong>real&nbsp;</strong><strong>muscels</strong>&nbsp;do 50 sit up - yes I should think so.<br />\r\nCan a person with a&nbsp;<strong>fake six pack</strong>&nbsp;do 50 sit ups - nope not a chance.</p>\r\n\r\n<p>Can a person with actual skills deliver the work - yes I would hope so.<br />\r\nCan a person with skills only on paper deliver work - no probably not.</p>\r\n\r\n<p>How do you know the difference?&nbsp;<br />\r\n<strong>The solution:</strong>&nbsp;<br />\r\nEasy half and hour&nbsp;<a href=\"http://www.skillbooker.com/tests/example_compare\" target=\"_blank\">Skillbooker skill evaluation test</a></p>\r\n' , '' , '1' , '167' , '2016-06-01' , '2018-01-19' ); INSERT INTO tutorials VALUES('65' , 'CodeIgniter - Interview Questions and Answers' , 'codeigniter_-_interview_questions_and_answers' , '8' , '20' , '1' , 'CodeIgniter- the best interview questions and answers' , '<p><img alt=\"codeigniter logo\" src=\"http://www.skillbooker.com//img/tutorials/codeigniter/codeigniter_-_interview_questions_and_answers/14548856883j8.jpg\" style=\"float: left; width: 225px; height: 225px; padding:10px;\" /></p>\r\n\r\n<ol>\r\n	<li><strong>Start with the basics: What is CodeIgniter?</strong><br />\r\n	Codeigniter is an open source framework for web application. It is used to develop websites on PHP. It is loosely based on MVC pattern, and it is easy to use compare to other PHP framework.<br />\r\n	&nbsp;</li>\r\n	<li><strong>Why is CodeIgniter a smart framework to use - give me 3 reasons?</strong>\r\n	<ul>\r\n		<li><strong>â€‹</strong>Small footprint with exceptional performance</li>\r\n		<li>MVC approach to development (although it is very loosely based which allows for flexibility)</li>\r\n		<li>Generates search engine friendly clean URLs</li>\r\n		<li>Easily extensible</li>\r\n		<li>Runs on both PHP 4 (4.3.2+) and 5</li>\r\n		<li>Support for most major databases including MySQL (4.1+), MySQLi, MS SQL, Postgres, Oracle, SQLite,<br />\r\n		and ODBC.</li>\r\n		<li>Application security is a focus</li>\r\n		<li>Easy caching operations</li>\r\n		<li>Many libraries and helpers to help you with complex operations such as email, image manipulation,<br />\r\n		form validation, file uploading, sessions, multilingual apps and creating apis for your app</li>\r\n		<li>Most libraries are only loaded when needed which cuts back on resources needed<br />\r\n		&nbsp;</li>\r\n	</ul>\r\n	</li>\r\n	<li><strong>Explain what are hooks in CodeIgniter?</strong><br />\r\n	Codeigniter&rsquo;s hooks feature provides a way to change the inner working of the framework without hacking the core files. In other word, hooks allow you to execute a script with a particular path within the Codeigniter. &nbsp;Usually, it is defined in application/config/hooks.php file.<br />\r\n	&nbsp;</li>\r\n	<li><strong>Explain how you will load or add a model in CodeIgniter?</strong><br />\r\n	<span style=\"line-height: 1.6;\">Within your controller functions, models will typically be loaded; you will use the function</span><br />\r\n	<span style=\"line-height: 1.6;\">$this-&gt;load-&gt;model (&lsquo;Model_Name&rsquo;);</span></li>\r\n	<li>\r\n	<p><strong>Explain what helpers in CodeIgniter are and how you can load a helper file?</strong><br />\r\n	In CodeIgniter, helpers are group of function in a particular category that assist you to perform specific functions. In CodeIgniter, you will find many helpers like URL helpers- helping in creating links, Text helpers- perform various text formatting routines, Cookies- helpers set and read cookies. &nbsp;You can load helper file by using command $this-&gt;load-&gt;helper (&lsquo;name&rsquo;) ;<br />\r\n	<br />\r\n	<img alt=\"codeigniter flow\" src=\"http://www.skillbooker.com//img/tutorials/codeigniter/codeigniter_-_interview_questions_and_answers/1454885615oeo.gif\" style=\"float: left; width: 100%; height: auto;\" /></p>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p><strong>Explain routing in Codeigniter?â€‹</strong></p>\r\n\r\n	<p>In CodeIgniter, the way PHP files served is different rather than accessing it directly from the browser. This process is called routing. Routing in CodeIgniter gives you freedom to customize the default URL pattern to use our own URL pattern according to the requirement. So, whenever there is a request made and matches our URL pattern it will automatically direct to the specified controller and &nbsp;function.</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>Why is there a need to configure the URL routes?</strong><br />\r\n	Changing the URL routes has some benefits like</p>\r\n\r\n	<ul>\r\n		<li>\r\n		<p>From SEO point of view, to make URL SEO friendly and get more user visits</p>\r\n		</li>\r\n		<li>\r\n		<p>Hide some URL element such as a function name, controller name, etc. from the users for security reasons</p>\r\n		</li>\r\n		<li>\r\n		<p>Provide different functionality to particular parts of a system</p>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>\r\n	<p><strong>Explain Application Flow Chart in CodeIgniter?</strong></p>\r\n\r\n	<p>The following graphic illustrates how data flows throughout the system:<br />\r\n	(Give the following image explain the flow of CodeIgniter)</p>\r\n\r\n	<ul>\r\n		<li>\r\n		<p>The index.php serves as the front controller, initializing the base resources needed to run CodeIgniter.</p>\r\n		</li>\r\n		<li>\r\n		<p>The Router examines the HTTP request to determine what should be done with it.</p>\r\n		</li>\r\n		<li>\r\n		<p>If a cache file exists, it is sent directly to the browser, bypassing the normal system execution.</p>\r\n		</li>\r\n		<li>\r\n		<p>Security. Before the application controller is loaded, the HTTP request and any user submitted data is filtered for security.</p>\r\n		</li>\r\n		<li>\r\n		<p>The Controller loads the model, core libraries, helpers, and any other resources needed to process the specific request.</p>\r\n		</li>\r\n		<li>\r\n		<p>The finalized View is rendered then sent to the web browser to be seen. If caching is enabled, the view is cached first so that on subsequent requests it can be served.</p>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>\r\n	<p><strong>How to access config variable in codeigniter?</strong><br />\r\n	You can access config variable like:<br />\r\n	&nbsp;$this-&gt;config-&gt;item(&#39;variable name&#39;);</p>\r\n	</li>\r\n	<li>\r\n	<p><strong style=\"line-height: 1.6;\">How to unset session in codeigniter?</strong><br />\r\n	<span style=\"line-height: 1.6;\">We can use unsetuserdata to destroy particular session variable</span><br />\r\n	<em style=\"line-height: 1.6;\">$this-&gt;session-&gt;unset_userdata(&#39;somename&#39;);</em><br />\r\n	<span style=\"line-height: 1.6;\">We can use sessdestroy to destroy all session:</span><br />\r\n	<em style=\"line-height: 1.6;\">$this-&gt;session-&gt;sess_destroy();</em></p>\r\n	</li>\r\n	<li>\r\n	<p><strong>How do you use aliases with autoloading models in CodeIgniter?</strong><br />\r\n	We can auto load model like this:<br />\r\n	$autoload[&#39;model&#39;] = array(array(&#39;usersmodel&#39;, &#39;users&#39;), array(&#39;newsmodel&#39;, &#39;news&#39;), &#39;categorymodel&#39;);</p>\r\n	</li>\r\n	<li>\r\n	<p><strong>List out different types of hook point in CodeIgniter?</strong><br />\r\n	Different types of hook point in Codeigniter includes</p>\r\n\r\n	<ol>\r\n		<li>\r\n		<p>post_controller_constructor</p>\r\n		</li>\r\n		<li>\r\n		<p>pre_controller</p>\r\n		</li>\r\n		<li>\r\n		<p>post_sytem</p>\r\n		</li>\r\n		<li>\r\n		<p>pre_system</p>\r\n		</li>\r\n		<li>\r\n		<p>cache_override</p>\r\n		</li>\r\n		<li>\r\n		<p>display_override</p>\r\n		</li>\r\n		<li>\r\n		<p>post_controller</p>\r\n		</li>\r\n	</ol>\r\n	</li>\r\n	<li><strong>Mention what are the security parameter for XSS in CodeIgniter?</strong><br />\r\n	Codeigniter has got a cross-site scripting hack prevention filter. This filter either runs automatically or you can run it as per item basis, to filter all POST and COOKIE data that come across. &nbsp;The XSS filter will target the commonly used methods to trigger JavaScript or other types of code that attempt to hijack cookies or other malicious activity. If it detects any suspicious thing or anything disallowed is encountered, it will convert the data to character entities.</li>\r\n	<li><strong>Explain how you can link images/CSS/JavaScript from a view in CodeIgniter?</strong><br />\r\n	In HTML, there is no Codeigniter way, as such it is a PHP server side framework. Just use an absolute path to your resources to link images/CSS/JavaScript from a view in CodeIgniter<br />\r\n	/css/styles.css<br />\r\n	/js/query.php<br />\r\n	/img/news/566.gpg</li>\r\n	<li><strong>Explain what is inhibitor in CodeIgniter?</strong><br />\r\n	For CodeIgniter, inhibitor is an error handler class, using the native PHP functions like set_exception_handler, set_error_handler, register_shutdown_function to handle parse errors, exceptions, and fatal errors.</li>\r\n	<li><strong>What is the default URL pattern used in Codeigniter framework?</strong><br />\r\n	Codeigniter framework URL has four main components in default URL pattern. &nbsp;First we have the server name and next we have the controller class name followed by controller function name and function parameters at the end. Codeigniter can be accessed using the URL helper. For example <strong>http://servername/controllerName/controllerFunction/parameter1/parameter2.â€‹</strong></li>\r\n	<li><strong>Explain how you can extend the class in Codeigniter?</strong><br />\r\n	<span style=\"line-height: 1.6;\">To extend the native input class in CodeIgniter, you have to build a file named application/core/MY_Input.php and declare your class with</span><br />\r\n	<span style=\"line-height: 1.6;\"><em>Class MY_Input extends CI_Input {<span style=\"line-height: 1.6;\">}</span></em></span></li>\r\n	<li><strong>Explain how you can prevent CodeIgniter from CSRF OR XSS?â€‹</strong><br />\r\n	There are several ways to protect CodeIgniter from CSRF/XSS (<span style=\"color: rgb(119, 119, 119); font-family: \'Open Sans\', Arial, sans-serif; font-size: 14px; line-height: 24px;\">&nbsp;cross-site scripting)</span>, one way of doing is to use a hidden field in each form on the website. &nbsp;This hidden field is referred as CSRF token; it is nothing but a random value that alters with each HTTP request sent. As soon as it is inserted in the website forms, it gets saved in the user&rsquo;s session as well. &nbsp;So, when the form is submitted by the users, the website checks whether it is the same as the one saved in the session. If it is same then, the request is legitimate.</li>\r\n	<li>&nbsp;<strong>How to print SQL statement in codeigniter model?â€‹</strong>\r\n	<pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, \'Courier New\', monospace; padding: 9.5px; margin-top: 0px; margin-bottom: 10px; line-height: 1.42857; word-break: break-all; border: 1px solid rgb(204, 204, 204); border-radius: 0px; background-color: rgb(245, 245, 245);\">\r\n$this-&gt;db-&gt;last_<em style=\"box-sizing: border-box;\">query();</em></pre>\r\n	</li>\r\n	<li><strong>How do you get last insert id in codeigniter ?</strong><br />\r\n	<em>$this-&gt;db-&gt;insert_id();â€‹</em></li>\r\n</ol>\r\n' , '' , '1' , '744' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('66' , 'Laravel 5 Cheat sheet' , 'laravel_5_cheat_sheet' , '9' , '20' , '1' , 'Laravel cheat sheet' , '<h4><a name=\"artisan\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#artisan\">Artisan</a> <a href=\"http://laravel.com/docs/artisan\" title=\"Artisan CLI @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n<pre>// Displays help for a given command\r\nphp artisan --help OR -h\r\n// Do not output any message\r\nphp artisan --quiet OR -q\r\n// Display this application version\r\nphp artisan --version OR -V\r\n// Do not ask any interactive question\r\nphp artisan --no-interaction OR -n\r\n// Force ANSI output\r\nphp artisan --ansi\r\n// Disable ANSI output\r\nphp artisan --no-ansi\r\n// The environment the command should run under\r\nphp artisan --env\r\n// -v|vv|vvv Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug\r\nphp artisan --verbose\r\n\r\n// Display the framework change list\r\nphp artisan changes\r\n// Remove the compiled class file\r\nphp artisan clear-compiled\r\n// Put the application into maintenance mode\r\nphp artisan down\r\n// Regenerate framework autoload files\r\nphp artisan dump-autoload\r\n// Display the current framework environment\r\nphp artisan env\r\n// Displays help for a command\r\nphp artisan help\r\n// Lists commands\r\nphp artisan list\r\n\r\n// Optimize the framework for better performance\r\nphp artisan optimize\r\n// List all registered routes\r\nphp artisan routes\r\n// Serve the application on the PHP development server\r\nphp artisan serve\r\n// Change the default port\r\nphp artisan serve --port 8080\r\n// Get it to work outside localhost\r\nphp artisan serve --host 0.0.0.0\r\n// Interact with your application\r\nphp artisan tinker\r\n// Bring the application out of maintenance mode\r\nphp artisan up\r\n// Create a new package workbench\r\nphp artisan workbench\r\n\r\n// Publish a package\'s assets to the public directory\r\nphp artisan asset:publish [--bench[=\"vendor/package\"]] [--path[=\"...\"]] [package]\r\n// Create a migration for the password reminders table\r\nphp artisan auth:reminders-table\r\n// Flush the application cache\r\nphp artisan cache:clear\r\n// Create a new Artisan command (L3:task)\r\nphp artisan command:make name [--command[=\"...\"]] [--path[=\"...\"]] [--namespace[=\"...\"]]\r\n// Publish a package\'s configuration to the application\r\nphp artisan config:publish\r\n// Create a new resourceful controller\r\nphp artisan controller:make [--bench=\"vendor/package\"]\r\n// Seed the database with records\r\nphp artisan db:seed [--class[=\"...\"]] [--database[=\"...\"]]\r\n// Set the application key\r\nphp artisan key:generate\r\n\r\n// Database migrations\r\nphp artisan migrate [--bench=\"vendor/package\"] [--database[=\"...\"]] [--path[=\"...\"]] [--package[=\"...\"]] [--pretend] [--seed]\r\n// Create the migration repository\r\nphp artisan migrate:install [--database[=\"...\"]]\r\n// Create a new migration file\r\nphp artisan migrate:make name [--bench=\"vendor/package\"] [--create] [--package[=\"...\"]] [--path[=\"...\"]] [--table[=\"...\"]]\r\n// Reset and re-run all migrations\r\nphp artisan migrate:refresh [--database[=\"...\"]] [--seed]\r\n// Rollback all database migrations\r\nphp artisan migrate:reset [--database[=\"...\"]] [--pretend]\r\n// Rollback the last database migration\r\nphp artisan migrate:rollback [--database[=\"...\"]] [--pretend]\r\n// Publish a package\'s migrations to migration directory\r\nphp artisan migrate:publish vendor/package\r\n\r\n// Listen to a given queue\r\nphp artisan queue:listen [--queue[=\"...\"]] [--delay[=\"...\"]] [--memory[=\"...\"]] [--timeout[=\"...\"]] [connection]\r\n// Subscribe a URL to an Iron.io push queue\r\nphp artisan queue:subscribe [--type[=\"...\"]] queue url\r\n// Process the next job on a queue\r\nphp artisan queue:work [--queue[=\"...\"]] [--delay[=\"...\"]] [--memory[=\"...\"]] [--sleep] [connection]\r\n// Create a migration for the session database table\r\n\r\nphp artisan session:table\r\n// Publish a package\'s views to the application\r\nphp artisan view:publish [--path[=\"...\"]] package\r\nphp artisan tail [--path[=\"...\"]] [--lines[=\"...\"]] [connection]\r\n                </pre>\r\n\r\n<h4><a name=\"composer\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#composer\">Composer</a> <a href=\"http://getcomposer.org/doc/03-cli.md\" title=\"Composer CLI Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>composer create-project laravel/laravel folder_name\r\ncomposer install\r\ncomposer update\r\ncomposer dump-autoload [--optimize]\r\ncomposer self-update\r\n                </pre>\r\n                <h4><a name=\"Configuration\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#Configuration\">Configuration</a> <a href=\"http://laravel.com/docs/configuration\" title=\"Configuration Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Config::get(\'app.timezone\');\r\n//get with Default value\r\nConfig::get(\'app.timezone\', \'UTC\');\r\n//set Configuration\r\nConfig::set(\'database.default\', \'sqlite\');\r\n                </pre>\r\n\r\n\r\n\r\n                <h4><a name=\"routing\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#routing\">Routing</a> <a href=\"http://laravel.com/docs/routing\" title=\"Routing @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Route::get(\'foo\', function(){});\r\nRoute::get(\'foo\', \'ControllerName@function\');\r\nRoute::controller(\'foo\', \'FooController\');\r\n                </pre>\r\n\r\n                <h6>RESTful Controllers</h6>\r\n                <pre>Route::resource(\'posts\',\'PostsController\');\r\n//Specify a subset of actions to handle on the route\r\nRoute::resource(\'photo\', \'PhotoController\',[\'only\' =&gt; [\'index\', \'show\']]);\r\nRoute::resource(\'photo\', \'PhotoController\',[\'except\' =&gt; [\'update\', \'destroy\']]);\r\n                </pre>\r\n\r\n                <h6>Triggering Errors</h6>\r\n                <pre>App::abort(404);\r\nApp::missing(function($exception){});\r\nthrow new NotFoundHttpException;\r\n                </pre>\r\n\r\n                <h6>Route Parameters</h6>\r\n                <pre>Route::get(\'foo/{bar}\', function($bar){});\r\nRoute::get(\'foo/{bar?}\', function($bar = \'bar\'){});\r\n                </pre>\r\n\r\n                <h6>HTTP Verbs</h6>\r\n                <pre>Route::any(\'foo\', function(){});\r\nRoute::post(\'foo\', function(){});\r\nRoute::put(\'foo\', function(){});\r\nRoute::patch(\'foo\', function(){});\r\nRoute::delete(\'foo\', function(){});\r\n// RESTful actions\r\nRoute::resource(\'foo\', \'FooController\');\r\n                </pre>\r\n\r\n                <h6>Secure Routes</h6>\r\n                <pre>Route::get(\'foo\', array(\'https\', function(){}));</pre>\r\n\r\n                <h6>Route Constraints</h6>\r\n                <pre>Route::get(\'foo/{bar}\', function($bar){})\r\n	-&gt;where(\'bar\', \'[0-9]+\');\r\nRoute::get(\'foo/{bar}/{baz}\', function($bar, $baz){})\r\n	-&gt;where(array(\'bar\' =&gt; \'[0-9]+\', \'baz\' =&gt; \'[A-Za-z]\'))\r\n                </pre>\r\n                <pre>// Set a pattern to be used across routes\r\n			Route::pattern(\'bar\', \'[0-9]+\')\r\n                </pre>\r\n                <h6>Filters</h6>\r\n                <pre>// Declare an auth filter\r\nRoute::filter(\'auth\', function(){});\r\n// Register a class as a filter\r\nRoute::filter(\'foo\', \'FooFilter\');\r\nRoute::get(\'foo\', array(\'before\' =&gt; \'auth\', function(){}));\r\n// Routes in this group are guarded by the \'auth\' filter\r\nRoute::get(\'foo\', array(\'before\' =&gt; \'auth\', function(){}));\r\nRoute::group(array(\'before\' =&gt; \'auth\'), function(){});\r\n// Pattern filter\r\nRoute::when(\'foo/*\', \'foo\');\r\n// HTTP verb pattern\r\nRoute::when(\'foo/*\', \'foo\', array(\'post\'));\r\n                </pre>\r\n\r\n                <h6>Named Routes</h6>\r\n                <pre>Route::currentRouteName();\r\nRoute::get(\'foo/bar\', array(\'as\' =&gt; \'foobar\', function(){}));\r\n                </pre>\r\n\r\n                <h6>Route Prefixing</h6>\r\n                <pre>// This route group will carry the prefix \'foo\'\r\nRoute::group(array(\'prefix\' =&gt; \'foo\'), function(){})\r\n                </pre>\r\n\r\n                <h6>Route Namespacing</h6>\r\n                <pre>// This route group will carry the namespace \'Foo\\Bar\'\r\nRoute::group(array(\'namespace\' =&gt; \'Foo\\Bar\'), function(){})\r\n                </pre>\r\n                <h6>Sub-Domain Routing</h6>\r\n                <pre>// {sub} will be passed to the closure\r\nRoute::group(array(\'domain\' =&gt; \'{sub}.example.com\'), function(){});\r\n                </pre>\r\n\r\n                <h4><a name=\"app\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#app\">App</a> <a href=\"http://laravel.com/docs/helpers#app\" title=\"App @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>App::environment();\r\n// test equal to\r\nApp::environment(\'local\');\r\nApp::runningInConsole();\r\nApp::runningUnitTests();\r\n                </pre>\r\n\r\n                <h4><a name=\"log\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#log\">Log</a> <a href=\"http://laravel.com/docs/helpers#log\" title=\"Log @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Log::info(\'info\');\r\nLog::info(\'info\',array(\'context\'=&gt;\'additional info\'));\r\nLog::error(\'error\');\r\nLog::warning(\'warning\');\r\n// get monolog instance\r\nLog::getMonolog();\r\n// add listener\r\nLog::listen(function($level, $message, $context) {});\r\n// get all ran queries.\r\nDB::getQueryLog();\r\n                </pre>\r\n\r\n                <h4><a name=\"urls\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#urls\">URLs</a> <a href=\"http://laravel.com/docs/helpers#urls\" title=\"URLs @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>URL::full();\r\nURL::current();\r\nURL::previous();\r\nURL::to(\'foo/bar\', $parameters, $secure);\r\nURL::action(\'FooController@method\', $parameters, $absolute);\r\nURL::route(\'foo\', $parameters, $absolute);\r\nURL::secure(\'foo/bar\', $parameters);\r\nURL::asset(\'css/foo.css\', $secure);\r\nURL::secureAsset(\'css/foo.css\');\r\nURL::isValidUrl(\'http://example.com\');\r\nURL::getRequest();\r\nURL::setRequest($request);\r\nURL::getGenerator();\r\nURL::setGenerator($generator);\r\n                </pre>\r\n\r\n\r\n                <h4><a name=\"events\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#events\">Events</a> <a href=\"http://laravel.com/docs/events\" title=\"Events @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Event::fire(\'foo.bar\', array($bar));\r\nEvent::listen(\'foo.bar\', function($bar){});\r\nEvent::listen(\'foo.*\', function($bar){});\r\nEvent::listen(\'foo.bar\', \'FooHandler\', 10);\r\nEvent::listen(\'foo.bar\', \'BarHandler\', 5);\r\nEvent::listen(\'foor.bar\', function($event){ return false; });\r\nEvent::queue(\'foo\', array($bar));\r\nEvent::flusher(\'foo\', function($bar){});\r\nEvent::flush(\'foo\');\r\nEvent::forget(\'foo\');\r\nEvent::subscribe(new FooEventHandler);\r\n                </pre>\r\n\r\n                <h4><a name=\"db\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#db\">Database</a> <a href=\"http://laravel.com/docs/queries\" title=\"Query Builder @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>DB::connection(\'connection_name\');\r\nDB::statement(\'drop table users\');\r\nDB::listen(function($sql, $bindings, $time){ code_here; });\r\nDB::transaction(function(){ transaction_code_here; });\r\n// Cache a query for $time minutes\r\nDB::table(\'users\')-&gt;remember($time)-&gt;get();\r\n// Escape raw input\r\nDB::raw(\'sql expression here\');\r\n                </pre>\r\n\r\n                <h6>Selects</h6>\r\n                <pre>DB::table(\'name\')-&gt;get();\r\nDB::table(\'name\')-&gt;distinct()-&gt;get();\r\nDB::table(\'name\')-&gt;select(\'column as column_alias\')-&gt;get();\r\nDB::table(\'name\')-&gt;where(\'name\', \'=\', \'John\')-&gt;get();\r\nDB::table(\'name\')-&gt;whereBetween(\'column\', array(1, 100))-&gt;get();\r\nDB::table(\'name\')-&gt;whereIn(\'column\', array(1, 2, 3))-&gt;get();\r\nDB::table(\'name\')-&gt;whereNotIn(\'column\', array(1, 2, 3))-&gt;get();\r\nDB::table(\'name\')-&gt;whereNull(\'column\')-&gt;get();\r\nDB::table(\'name\')-&gt;whereNotNull(\'column\')-&gt;get();\r\nDB::table(\'name\')-&gt;groupBy(\'column\')-&gt;get();\r\n// Default Eloquent sort is ascendant\r\nDB::table(\'name\')-&gt;orderBy(\'column\')-&gt;get();\r\nDB::table(\'name\')-&gt;orderBy(\'column\',\'desc\')-&gt;get();\r\nDB::table(\'name\')-&gt;having(\'count\', \'&gt;\', 100)-&gt;get();\r\nDB::table(\'name\')-&gt;skip(10)-&gt;take(5)-&gt;get();\r\nDB::table(\'name\')-&gt;first();\r\nDB::table(\'name\')-&gt;pluck(\'column\');\r\nDB::table(\'name\')-&gt;lists(\'column\');\r\n// Joins\r\nDB::table(\'name\')-&gt;join(\'table\', \'name.id\', \'=\', \'table.id\')\r\n    -&gt;select(\'name.id\', \'table.email\');\r\n                </pre>\r\n\r\n                <h6>Inserts, Updates, Deletes</h6>\r\n                <pre>DB::table(\'name\')-&gt;insert(array(\'name\' =&gt; \'John\', \'email\' =&gt; \'john@example.com\'));\r\nDB::table(\'name\')-&gt;insertGetId(array(\'name\' =&gt; \'John\', \'email\' =&gt; \'john@example.com\'));\r\n// Batch insert\r\nDB::table(\'name\')-&gt;insert(array(\r\n	array(\'name\' =&gt; \'John\', \'email\' =&gt; \'john@example.com\'),\r\n	array(\'name\' =&gt; \'James\', \'email\' =&gt; \'james@example.com\')\r\n));\r\n// Update an entry\r\nDB::table(\'name\')-&gt;where(\'name\', \'=\', \'John\')\r\n	-&gt;update(array(\'email\' =&gt; \'john@example2.com\'));\r\n// Delete everything from a table\r\nDB::table(\'name\')-&gt;delete();\r\n// Delete specific records\r\nDB::table(\'name\')-&gt;where(\'id\', \'&gt;\', \'10\')-&gt;delete();\r\nDB::table(\'name\')-&gt;truncate();\r\n                </pre>\r\n\r\n                <h6>Aggregates</h6>\r\n                <pre>DB::table(\'name\')-&gt;count();\r\nDB::table(\'name\')-&gt;max(\'column\');\r\nDB::table(\'name\')-&gt;min(\'column\');\r\nDB::table(\'name\')-&gt;avg(\'column\');\r\nDB::table(\'name\')-&gt;sum(\'column\');\r\nDB::table(\'name\')-&gt;increment(\'column\');\r\nDB::table(\'name\')-&gt;increment(\'column\', $amount);\r\nDB::table(\'name\')-&gt;decrement(\'column\');\r\nDB::table(\'name\')-&gt;decrement(\'column\', $amount);\r\nDB::table(\'name\')-&gt;remember(5)-&gt;get();\r\nDB::table(\'name\')-&gt;remember(5, \'cache-key-name\')-&gt;get();\r\nDB::table(\'name\')-&gt;cacheTags(\'my-key\')-&gt;remember(5)-&gt;get();\r\nDB::table(\'name\')-&gt;cacheTags(array(\'my-first-key\',\'my-second-key\'))-&gt;remember(5)-&gt;get();\r\n                </pre>\r\n\r\n                <h6>Raw Expressions</h6>\r\n                <pre>// return rows\r\nDB::select(\'select * from users where id = ?\', array(\'value\'));\r\n// return nr affected rows\r\nDB::insert(\'insert into foo set bar=2\');\r\nDB::update(\'update foo set bar=2\');\r\nDB::delete(\'delete from bar\');\r\n// returns void\r\nDB::statement(\'update foo set bar=2\');\r\n// raw expression inside a statement\r\nDB::table(\'name\')-&gt;select(DB::raw(\'count(*) as count, column2\'))-&gt;get();\r\n                </pre>\r\n\r\n                <h4><a name=\"eloquent\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#eloquent\">Eloquent</a> <a href=\"http://laravel.com/docs/eloquent\" title=\"Eloquent @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Model::create(array(\'key\' =&gt; \'value\'));\r\n// Find first matching record by attributes or create\r\nModel::firstOrCreate(array(\'key\' =&gt; \'value\'));\r\n// Find first record by attributes or instantiate\r\nModel::firstOrNew(array(\'key\' =&gt; \'value\'));\r\n// Create or update a record matching attibutes, and fill with values\r\nModel::updateOrCreate(array(\'search_key\' =&gt; \'search_value\'), array(\'key\' =&gt; \'value\'));\r\n// Fill a model with an array of attributes, beware of mass assignment!\r\nModel::fill($attributes);\r\nModel::destroy(1);\r\nModel::all();\r\nModel::find(1);\r\n// Find using dual primary key\r\nModel::find(array(\'first\', \'last\'));\r\n// Throw an exception if the lookup fails\r\nModel::findOrFail(1);\r\n// Find using dual primary key and throw exception if the lookup fails\r\nModel::findOrFail(array(\'first\', \'last\'));\r\nModel::where(\'foo\', \'=\', \'bar\')-&gt;get();\r\nModel::where(\'foo\', \'=\', \'bar\')-&gt;first();\r\n// dynamic\r\nModel::whereFoo(\'bar\')-&gt;first();\r\n// Throw an exception if the lookup fails\r\nModel::where(\'foo\', \'=\', \'bar\')-&gt;firstOrFail();\r\nModel::where(\'foo\', \'=\', \'bar\')-&gt;count();\r\nModel::where(\'foo\', \'=\', \'bar\')-&gt;delete();\r\n//Output raw query\r\nModel::where(\'foo\', \'=\', \'bar\')-&gt;toSql();\r\nModel::whereRaw(\'foo = bar and cars = 2\', array(20))-&gt;get();\r\nModel::remember(5)-&gt;get();\r\nModel::remember(5, \'cache-key-name\')-&gt;get();\r\nModel::cacheTags(\'my-tag\')-&gt;remember(5)-&gt;get();\r\nModel::cacheTags(array(\'my-first-key\',\'my-second-key\'))-&gt;remember(5)-&gt;get();\r\nModel::on(\'connection-name\')-&gt;find(1);\r\nModel::with(\'relation\')-&gt;get();\r\nModel::all()-&gt;take(10);\r\nModel::all()-&gt;skip(10);\r\n// Default Eloquent sort is ascendant\r\nModel::all()-&gt;orderBy(\'column\');\r\nModel::all()-&gt;orderBy(\'column\',\'desc\');\r\n                </pre>\r\n\r\n                <h6>Soft Delete</h6>\r\n                <pre>Model::withTrashed()-&gt;where(\'cars\', 2)-&gt;get();\r\n// Include the soft deleted models in the results\r\nModel::withTrashed()-&gt;where(\'cars\', 2)-&gt;restore();\r\nModel::where(\'cars\', 2)-&gt;forceDelete();\r\n// Force the result set to only included soft deletes\r\nModel::onlyTrashed()-&gt;where(\'cars\', 2)-&gt;get();\r\n                </pre>\r\n\r\n                <h6>Events</h6>\r\n                <pre>Model::creating(function($model){});\r\nModel::created(function($model){});\r\nModel::updating(function($model){});\r\nModel::updated(function($model){});\r\nModel::saving(function($model){});\r\nModel::saved(function($model){});\r\nModel::deleting(function($model){});\r\nModel::deleted(function($model){});\r\nModel::observe(new FooObserver);\r\n                </pre>\r\n                <h6>Eloquent Configuration</h6>\r\n                <pre>// Disables mass assignment exceptions from being thrown from model inserts and updates\r\nEloquent::unguard();\r\n// Renables any ability to throw mass assignment exceptions\r\nEloquent::reguard();\r\n                </pre>\r\n\r\n                <h4><a name=\"pagination\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#pagination\">Pagination</a> <a href=\"http://laravel.com/docs/pagination\" title=\"Pagination @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>// Auto-Magic Pagination\r\nModel::paginate(15);\r\nModel::where(\'cars\', 2)-&gt;paginate(15);\r\n// \"Next\" and \"Previous\" only\r\nModel::where(\'cars\', 2)-&gt;simplePaginate(15);\r\n// Manual Paginator\r\nPaginator::make($items, $totalItems, $perPage);\r\n// Print page navigators in view\r\n$variable-&gt;links();\r\n                </pre>\r\n\r\n            \r\n\r\n            \r\n                <h4><a name=\"db\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#db\">Schema</a> <a href=\"http://laravel.com/docs/schema\" title=\"Schema Builder @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>// Indicate that the table needs to be created\r\nSchema::create(\'table\', function($table)\r\n{\r\n    $table-&gt;increments(\'id\');\r\n});\r\n// Specify a Connection\r\nSchema::connection(\'foo\')-&gt;create(\'table\', function($table){});\r\n// Rename the table to a given name\r\nSchema::rename($from, $to);\r\n// Indicate that the table should be dropped\r\nSchema::drop(\'table\');\r\n// Indicate that the table should be dropped if it exists\r\nSchema::dropIfExists(\'table\');\r\n// Determine if the given table exists\r\nSchema::hasTable(\'table\');\r\n// Determine if the given table has a given column\r\nSchema::hasColumn(\'table\', \'column\');\r\n// Update an existing table\r\nSchema::table(\'table\', function($table){});\r\n// Indicate that the given columns should be renamed\r\n$table-&gt;renameColumn(\'from\', \'to\');\r\n// Indicate that the given columns should be dropped\r\n$table-&gt;dropColumn(string|array);\r\n// The storage engine that should be used for the table\r\n$table-&gt;engine = \'InnoDB\';\r\n// Only work on MySQL\r\n$table-&gt;string(\'name\')-&gt;after(\'email\');\r\n                </pre>\r\n\r\n                <h6>Indexes</h6>\r\n                <pre>$table-&gt;string(\'column\')-&gt;unique();\r\n$table-&gt;primary(\'column\');\r\n// Creates a dual primary key\r\n$table-&gt;primary(array(\'first\', \'last\'));\r\n$table-&gt;unique(\'column\');\r\n$table-&gt;unique(\'column\', \'key_name\');\r\n// Creates a dual unique index\r\n$table-&gt;unique(array(\'first\', \'last\'));\r\n$table-&gt;unique(array(\'first\', \'last\'), \'key_name\');\r\n$table-&gt;index(\'column\');\r\n$table-&gt;index(\'column\', \'key_name\');\r\n// Creates a dual index\r\n$table-&gt;index(array(\'first\', \'last\'));\r\n$table-&gt;index(array(\'first\', \'last\'), \'key_name\');\r\n$table-&gt;dropPrimary(\'table_column_primary\');\r\n$table-&gt;dropUnique(\'table_column_unique\');\r\n$table-&gt;dropIndex(\'table_column_index\');\r\n                </pre>\r\n\r\n                <h6>Foreign Keys</h6>\r\n                <pre>$table-&gt;foreign(\'user_id\')-&gt;references(\'id\')-&gt;on(\'users\');\r\n$table-&gt;foreign(\'user_id\')-&gt;references(\'id\')-&gt;on(\'users\')-&gt;onDelete(\'cascade\'|\'restrict\'|\'set null\'|\'no action\');\r\n$table-&gt;foreign(\'user_id\')-&gt;references(\'id\')-&gt;on(\'users\')-&gt;onUpdate(\'cascade\'|\'restrict\'|\'set null\'|\'no action\');\r\n$table-&gt;dropForeign(\'posts_user_id_foreign\');\r\n                </pre>\r\n\r\n                <h6>Column Types</h6>\r\n                <pre>// Increments\r\n$table-&gt;increments(\'id\');\r\n$table-&gt;bigIncrements(\'id\');\r\n// Numbers\r\n$table-&gt;integer(\'votes\');\r\n$table-&gt;tinyInteger(\'votes\');\r\n$table-&gt;smallInteger(\'votes\');\r\n$table-&gt;mediumInteger(\'votes\');\r\n$table-&gt;bigInteger(\'votes\');\r\n$table-&gt;float(\'amount\');\r\n$table-&gt;double(\'column\', 15, 8);\r\n$table-&gt;decimal(\'amount\', 5, 2);\r\n\r\n//String and Text\r\n$table-&gt;char(\'name\', 4);\r\n$table-&gt;string(\'email\');\r\n$table-&gt;string(\'name\', 100);\r\n$table-&gt;text(\'description\');\r\n$table-&gt;mediumText(\'description\');\r\n$table-&gt;longText(\'description\');\r\n\r\n//Date and Time\r\n$table-&gt;date(\'created_at\');\r\n$table-&gt;dateTime(\'created_at\');\r\n$table-&gt;time(\'sunrise\');\r\n$table-&gt;timestamp(\'added_on\');\r\n$table-&gt;timestamps();\r\n// Adds created_at and updated_at columns\r\n$table-&gt;nullableTimestamps();\r\n\r\n// Others\r\n$table-&gt;binary(\'data\');\r\n$table-&gt;boolean(\'confirmed\');\r\n$table-&gt;softDeletes();\r\n// Adds deleted_at column for soft deletes\r\n$table-&gt;enum(\'choices\', array(\'foo\', \'bar\'));\r\n$table-&gt;rememberToken();\r\n// Adds remember_token as VARCHAR(100) NULL\r\n$table-&gt;morphs(\'parent\');\r\n// Adds INTEGER parent_id and STRING parent_type\r\n-&gt;nullable()\r\n-&gt;default($value)\r\n-&gt;unsigned()\r\n                </pre>\r\n\r\n                <h4><a name=\"input\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#input\">Input</a> <a href=\"http://laravel.com/docs/requests\" title=\"Input @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Input::get(\'key\');\r\n// Default if the key is missing\r\nInput::get(\'key\', \'default\');\r\nInput::has(\'key\');\r\nInput::all();\r\n// Only retrieve \'foo\' and \'bar\' when getting input\r\nInput::only(\'foo\', \'bar\');\r\n// Disregard \'foo\' when getting input\r\nInput::except(\'foo\');\r\nInput::flush();\r\n                </pre>\r\n\r\n                <h6>Session Input (flash)</h6>\r\n                <pre>// Flash input to the session\r\nInput::flash();\r\n// Flash only some of the input to the session\r\nInput::flashOnly(\'foo\', \'bar\');\r\n// Flash only some of the input to the session\r\nInput::flashExcept(\'foo\', \'baz\');\r\n// Retrieve an old input item\r\nInput::old(\'key\',\'default_value\');\r\n                </pre>\r\n\r\n                <h6>Files</h6>\r\n                <pre>// Use a file that\'s been uploaded\r\nInput::file(\'filename\');\r\n// Determine if a file was uploaded\r\nInput::hasFile(\'filename\');\r\n// Access file properties\r\nInput::file(\'name\')-&gt;getRealPath();\r\nInput::file(\'name\')-&gt;getClientOriginalName();\r\nInput::file(\'name\')-&gt;getClientOriginalExtension();\r\nInput::file(\'name\')-&gt;getSize();\r\nInput::file(\'name\')-&gt;getMimeType();\r\n// Move an uploaded file\r\nInput::file(\'name\')-&gt;move($destinationPath);\r\n// Move an uploaded file\r\nInput::file(\'name\')-&gt;move($destinationPath, $fileName);\r\n                </pre>\r\n\r\n                <h4><a name=\"cache\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#cache\">Cache</a> <a href=\"http://laravel.com/docs/cache\" title=\"Cache @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Cache::put(\'key\', \'value\', $minutes);\r\nCache::add(\'key\', \'value\', $minutes);\r\nCache::forever(\'key\', \'value\');\r\nCache::remember(\'key\', $minutes, function(){ return \'value\' });\r\nCache::rememberForever(\'key\', function(){ return \'value\' });\r\nCache::forget(\'key\');\r\nCache::has(\'key\');\r\nCache::get(\'key\');\r\nCache::get(\'key\', \'default\');\r\nCache::get(\'key\', function(){ return \'default\'; });\r\nCache::tags(\'my-tag\')-&gt;put(\'key\',\'value\', $minutes);\r\nCache::tags(\'my-tag\')-&gt;has(\'key\');\r\nCache::tags(\'my-tag\')-&gt;get(\'key\');\r\nCache::tags(\'my-tag\')-&gt;forget(\'key\');\r\nCache::tags(\'my-tag\')-&gt;flush();\r\nCache::increment(\'key\');\r\nCache::increment(\'key\', $amount);\r\nCache::decrement(\'key\');\r\nCache::decrement(\'key\', $amount);\r\nCache::section(\'group\')-&gt;put(\'key\', $value);\r\nCache::section(\'group\')-&gt;get(\'key\');\r\nCache::section(\'group\')-&gt;flush();\r\n                </pre>\r\n\r\n                <h4><a name=\"cookies\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#cookies\">Cookies</a> <a href=\"http://laravel.com/docs/requests#cookies\" title=\"Cookies @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Cookie::get(\'key\');\r\nCookie::get(\'key\', \'default\');\r\n// Create a cookie that lasts for ever\r\nCookie::forever(\'key\', \'value\');\r\n// Create a cookie that lasts N minutes\r\nCookie::make(\'key\', \'value\', \'minutes\');\r\n// Set a cookie before a response has been created\r\nCookie::queue(\'key\', \'value\', \'minutes\');\r\n// Forget cookie\r\nCookie::forget(\'key\');\r\n// Send a cookie with a response\r\n$response = Response::make(\'Hello World\');\r\n// Add a cookie to the response\r\n$response-&gt;withCookie(Cookie::make(\'name\', \'value\', $minutes));\r\n                </pre>\r\n\r\n                <h4><a name=\"sessions\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#sessions\">Sessions</a> <a href=\"http://laravel.com/docs/session\" title=\"Session @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Session::get(\'key\');\r\n// Returns an item from the session\r\nSession::get(\'key\', \'default\');\r\nSession::get(\'key\', function(){ return \'default\'; });\r\n// Get the session ID\r\nSession::getId();\r\n// Put a key / value pair in the session\r\nSession::put(\'key\', \'value\');\r\n// Push a value into an array in the session\r\nSession::push(\'foo.bar\',\'value\');\r\n// Returns all items from the session\r\nSession::all();\r\n// Checks if an item is defined\r\nSession::has(\'key\');\r\n// Remove an item from the session\r\nSession::forget(\'key\');\r\n// Remove all of the items from the session\r\nSession::flush();\r\n// Generate a new session identifier\r\nSession::regenerate();\r\n// Flash a key / value pair to the session\r\nSession::flash(\'key\', \'value\');\r\n// Reflash all of the session flash data\r\nSession::reflash();\r\n// Reflash a subset of the current flash data\r\nSession::keep(array(\'key1\', \'key2\'));\r\n                </pre>\r\n\r\n                <h4><a name=\"requests\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#requests\">Requests</a> <a href=\"http://laravel.com/docs/requests#request-information\" title=\"Requests @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>// url: http://xx.com/aa/bb\r\nRequest::url();\r\n// path: /aa/bb\r\nRequest::path();\r\n// getRequestUri: /aa/bb/?c=d\r\nRequest::getRequestUri();\r\n// Returns user\'s IP\r\nRequest::getClientIp();\r\n// getUri: http://xx.com/aa/bb/?c=d\r\nRequest::getUri();\r\n// getQueryString: c=d\r\nRequest::getQueryString();\r\n// Get the port scheme of the request (e.g., 80, 443, etc.)\r\nRequest::getPort();\r\n// Determine if the current request URI matches a pattern\r\nRequest::is(\'foo/*\');\r\n// Get a segment from the URI (1 based index)\r\nRequest::segment(1);\r\n// Retrieve a header from the request\r\nRequest::header(\'Content-Type\');\r\n// Retrieve a server variable from the request\r\nRequest::server(\'PATH_INFO\');\r\n// Determine if the request is the result of an AJAX call\r\nRequest::ajax();\r\n// Determine if the request is over HTTPS\r\nRequest::secure();\r\n// Get the request method\r\nRequest::method();\r\n// Checks if the request method is of specified type\r\nRequest::isMethod(\'post\');\r\n// Get raw POST data\r\nRequest::instance()-&gt;getContent();\r\n// Get requested response format\r\nRequest::format();\r\n// true if HTTP Content-Type header contains */json\r\nRequest::isJson();\r\n// true if HTTP Accept header is application/json\r\nRequest::wantsJson();\r\n\r\n                </pre>\r\n\r\n                <h4><a name=\"responses\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#responses\">Responses</a> <a href=\"http://laravel.com/docs/responses\" title=\"Responses @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>return Response::make($contents);\r\nreturn Response::make($contents, 200);\r\nreturn Response::json(array(\'key\' =&gt; \'value\'));\r\nreturn Response::json(array(\'key\' =&gt; \'value\'))\r\n	-&gt;setCallback(Input::get(\'callback\'));\r\nreturn Response::download($filepath);\r\nreturn Response::download($filepath, $filename, $headers);\r\n// Create a response and modify a header value\r\n$response = Response::make($contents, 200);\r\n$response-&gt;header(\'Content-Type\', \'application/json\');\r\nreturn $response;\r\n// Attach a cookie to a response\r\nreturn Response::make($content)\r\n	-&gt;withCookie(Cookie::make(\'key\', \'value\'));\r\n                </pre>\r\n\r\n                <h4><a name=\"redirects\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#redirects\">Redirects</a> <a href=\"http://laravel.com/docs/responses#redirects\" title=\"Redirects @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>return Redirect::to(\'foo/bar\');\r\nreturn Redirect::to(\'foo/bar\')-&gt;with(\'key\', \'value\');\r\nreturn Redirect::to(\'foo/bar\')-&gt;withInput(Input::get());\r\nreturn Redirect::to(\'foo/bar\')-&gt;withInput(Input::except(\'password\'));\r\nreturn Redirect::to(\'foo/bar\')-&gt;withErrors($validator);\r\n// Create a new redirect response to the previous location\r\nreturn Redirect::back();\r\n// Create a new redirect response to a named route\r\nreturn Redirect::route(\'foobar\');\r\nreturn Redirect::route(\'foobar\', array(\'value\'));\r\nreturn Redirect::route(\'foobar\', array(\'key\' =&gt; \'value\'));\r\n// Create a new redirect response to a controller action\r\nreturn Redirect::action(\'FooController@index\');\r\nreturn Redirect::action(\'FooController@baz\', array(\'value\'));\r\nreturn Redirect::action(\'FooController@baz\', array(\'key\' =&gt; \'value\'));\r\n// If intended redirect is not defined, defaults to foo/bar.\r\nreturn Redirect::intended(\'foo/bar\');\r\n                </pre>\r\n\r\n                <h4><a name=\"ioc\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#ioc\">IoC</a> <a href=\"http://laravel.com/docs/ioc\" title=\"IoC Container @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>App::bind(\'foo\', function($app){ return new Foo; });\r\nApp::make(\'foo\');\r\n// If this class exists, it\'s returned\r\nApp::make(\'FooBar\');\r\n// Register a shared binding in the container\r\nApp::singleton(\'foo\', function(){ return new Foo; });\r\n// Register an existing instance as shared in the container\r\nApp::instance(\'foo\', new Foo);\r\n// Register a binding with the container\r\nApp::bind(\'FooRepositoryInterface\', \'BarRepository\');\r\n// Register a service provider with the application\r\nApp::register(\'FooServiceProvider\');\r\n// Listen for object resolution\r\nApp::resolving(function($object){});\r\n                </pre>\r\n\r\n                <h4><a name=\"security\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#security\">Security</a> <a href=\"http://laravel.com/docs/security\" title=\"Security @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <h6>Passwords</h6>\r\n                <pre>Hash::make(\'secretpassword\');\r\nHash::check(\'secretpassword\', $hashedPassword);\r\nHash::needsRehash($hashedPassword);\r\n                </pre>\r\n                <h6>Auth</h6>\r\n                <pre>// Determine if the current user is authenticated\r\nAuth::check();\r\n// Get the currently authenticated user\r\nAuth::user();\r\n// Get the ID of the currently authenticated user\r\nAuth::id();\r\n// Attempt to authenticate a user using the given credentials\r\nAuth::attempt(array(\'email\' =&gt; $email, \'password\' =&gt; $password));\r\n// \'Remember me\' by passing true to Auth::attempt()\r\nAuth::attempt($credentials, true);\r\n// Log in for a single request\r\nAuth::once($credentials);\r\n// Log a user into the application\r\nAuth::login(User::find(1));\r\n// Log the given user ID into the application\r\nAuth::loginUsingId(1);\r\n// Log the user out of the application\r\nAuth::logout();\r\n// Validate a user\'s credentials\r\nAuth::validate($credentials);\r\n// Attempt to authenticate using HTTP Basic Auth\r\nAuth::basic(\'username\');\r\n// Perform a stateless HTTP Basic login attempt\r\nAuth::onceBasic();\r\n// Send a password reminder to a user\r\nPassword::remind($credentials, function($message, $user){});\r\n                </pre>\r\n\r\n                <h6>Encryption</h6>\r\n                <pre>Crypt::encrypt(\'secretstring\');\r\nCrypt::decrypt($encryptedString);\r\nCrypt::setMode(\'ctr\');\r\nCrypt::setCipher($cipher);\r\n                </pre>\r\n\r\n                <h4><a name=\"mail\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#mail\">Mail</a> <a href=\"http://laravel.com/docs/mail\" title=\"Mail @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Mail::send(\'email.view\', $data, function($message){});\r\nMail::send(array(\'html.view\', \'text.view\'), $data, $callback);\r\nMail::queue(\'email.view\', $data, function($message){});\r\nMail::queueOn(\'queue-name\', \'email.view\', $data, $callback);\r\nMail::later(5, \'email.view\', $data, function($message){});\r\n// Write all email to logs instead of sending\r\nMail::pretend();\r\n                </pre>\r\n\r\n                <h6>Messages</h6>\r\n                <pre>// These can be used on the $message instance passed into Mail::send() or Mail::queue()\r\n$message-&gt;from(\'email@example.com\', \'Mr. Example\');\r\n$message-&gt;sender(\'email@example.com\', \'Mr. Example\');\r\n$message-&gt;returnPath(\'email@example.com\');\r\n$message-&gt;to(\'email@example.com\', \'Mr. Example\');\r\n$message-&gt;cc(\'email@example.com\', \'Mr. Example\');\r\n$message-&gt;bcc(\'email@example.com\', \'Mr. Example\');\r\n$message-&gt;replyTo(\'email@example.com\', \'Mr. Example\');\r\n$message-&gt;subject(\'Welcome to the Jungle\');\r\n$message-&gt;priority(2);\r\n$message-&gt;attach(\'foo\\bar.txt\', $options);\r\n// This uses in-memory data as attachments\r\n$message-&gt;attachData(\'bar\', \'Data Name\', $options);\r\n// Embed a file in the message and get the CID\r\n$message-&gt;embed(\'foo\\bar.txt\');\r\n$message-&gt;embedData(\'foo\', \'Data Name\', $options);\r\n// Get the underlying Swift Message instance\r\n$message-&gt;getSwiftMessage();\r\n                </pre>\r\n\r\n                <h4><a name=\"queues\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#queues\">Queues</a> <a href=\"http://laravel.com/docs/queues\" title=\"Queues @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Queue::push(\'SendMail\', array(\'message\' =&gt; $message));\r\nQueue::push(\'SendEmail@send\', array(\'message\' =&gt; $message));\r\nQueue::push(function($job) use $id {});\r\n// Same payload to multiple workers\r\nQueue::bulk(array(\'SendEmail\', \'NotifyUser\'), $payload);\r\n// Starting the queue listener\r\nphp artisan queue:listen\r\nphp artisan queue:listen connection\r\nphp artisan queue:listen --timeout=60\r\n// Process only the first job on the queue\r\nphp artisan queue:work\r\n// Start a queue worker in daemon mode\r\nphp artisan queue:work --daemon\r\n// Create migration file for failed jobs\r\nphp artisan queue:failed-table\r\n// Listing failed jobs\r\nphp artisan queue:failed\r\n// Delete failed job by id\r\nphp artisan queue:forget 5\r\n// Delete all failed jobs\r\nphp artisan queue:flush\r\n                </pre>\r\n\r\n                <h4><a name=\"validation\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#validation\">Validation</a> <a href=\"http://laravel.com/docs/validation\" title=\"Validation @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Validator::make(\r\n	array(\'key\' =&gt; \'Foo\'),\r\n	array(\'key\' =&gt; \'required|in:Foo\')\r\n);\r\nValidator::extend(\'foo\', function($attribute, $value, $params){});\r\nValidator::extend(\'foo\', \'FooValidator@validate\');\r\nValidator::resolver(function($translator, $data, $rules, $msgs)\r\n{\r\n	return new FooValidator($translator, $data, $rules, $msgs);\r\n});\r\n                </pre>\r\n\r\n                <h6>Rules</h6>\r\n                <pre>accepted\r\nactive_url\r\nafter:YYYY-MM-DD\r\nbefore:YYYY-MM-DD\r\nalpha\r\nalpha_dash\r\nalpha_num\r\narray\r\nbetween:1,10\r\nconfirmed\r\ndate\r\ndate_format:YYYY-MM-DD\r\ndifferent:fieldname\r\ndigits:value\r\ndigits_between:min,max\r\nboolean\r\nemail\r\nexists:table,column\r\nimage\r\nin:foo,bar,...\r\nnot_in:foo,bar,...\r\ninteger\r\nnumeric\r\nip\r\nmax:value\r\nmin:value\r\nmimes:jpeg,png\r\nregex:[0-9]\r\nrequired\r\nrequired_if:field,value\r\nrequired_with:foo,bar,...\r\nrequired_with_all:foo,bar,...\r\nrequired_without:foo,bar,...\r\nrequired_without_all:foo,bar,...\r\nsometimes|required|field\r\nsame:field\r\nsize:value\r\ntimezone\r\nunique:table,column,except,idColumn\r\nurl\r\n\r\n                </pre>\r\n\r\n            \r\n            <div class=\"large-4 columnsi code-column\">\r\n                <h4><a name=\"views\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#views\">Views</a> <a href=\"http://laravel.com/docs/responses#views\" title=\"Views @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>View::make(\'path/to/view\');\r\nView::make(\'foo/bar\')-&gt;with(\'key\', \'value\');\r\nView::make(\'foo/bar\')-&gt;withKey(\'value\');\r\nView::make(\'foo/bar\', array(\'key\' =&gt; \'value\'));\r\nView::exists(\'foo/bar\');\r\n// Share a value across all views\r\nView::share(\'key\', \'value\');\r\n// Nesting views\r\nView::make(\'foo/bar\')-&gt;nest(\'name\', \'foo/baz\', $data);\r\n// Register a view composer\r\nView::composer(\'viewname\', function($view){});\r\n//Register multiple views to a composer\r\nView::composer(array(\'view1\', \'view2\'), function($view){});\r\n// Register a composer class\r\nView::composer(\'viewname\', \'FooComposer\');\r\nView::creator(\'viewname\', function($view){});\r\n                </pre>\r\n\r\n                <h4><a name=\"blade\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#blade\">Blade Templates</a> <a href=\"http://laravel.com/docs/templates#blade-templating\" title=\"Blade Templating @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>@extends(\'layout.name\')\r\n// Begin a section\r\n@section(\'name\')\r\n// End a section\r\n@stop\r\n// End a section and yield\r\n@show\r\n@parent\r\n// Show a section in a template\r\n@yield(\'name\')\r\n@include(\'view.name\')\r\n@include(\'view.name\', array(\'key\' =&gt; \'value\'));\r\n@lang(\'messages.name\')\r\n@choice(\'messages.name\', 1);\r\n@if\r\n@else\r\n@elseif\r\n@endif\r\n@unless\r\n@endunless\r\n@for\r\n@endfor\r\n@foreach\r\n@endforeach\r\n@while\r\n@endwhile\r\n//forelse 4.2 feature\r\n@forelse($users as $user)\r\n@empty\r\n@endforelse\r\n// Echo content\r\n{{ $var }}\r\n// Echo escaped content\r\n{{{ $var }}}\r\n{{-- Blade Comment --}}\r\n// Echoing Data After Checking For Existence\r\n{{{ $name or \'Default\' }}}\r\n// Displaying Raw Text With Curly Braces\r\n@{{ This will not be processed by Blade }}\r\n                </pre>\r\n\r\n                <h4><a name=\"forms\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#forms\">Forms</a> <a href=\"http://laravel.com/docs/html\" title=\"Forms &amp; HTML @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>Form::open(array(\'url\' =&gt; \'foo/bar\', \'method\' =&gt; \'PUT\'));\r\nForm::open(array(\'route\' =&gt; \'foo.bar\'));\r\nForm::open(array(\'route\' =&gt; array(\'foo.bar\', $parameter)));\r\nForm::open(array(\'action\' =&gt; \'FooController@method\'));\r\nForm::open(array(\'action\' =&gt; array(\'FooController@method\', $parameter)));\r\nForm::open(array(\'url\' =&gt; \'foo/bar\', \'files\' =&gt; true));\r\nForm::close();\r\nForm::token();\r\nForm::model($foo, array(\'route\' =&gt; array(\'foo.bar\', $foo-&gt;bar)));\r\n\r\n                </pre>\r\n\r\n                <h6>Form Elements</h6>\r\n                <pre>Form::label(\'id\', \'Description\');\r\nForm::label(\'id\', \'Description\', array(\'class\' =&gt; \'foo\'));\r\nForm::text(\'name\');\r\nForm::text(\'name\', $value);\r\nForm::text(\'name\', $value, array(\'class\' =&gt; \'name\'));\r\nForm::textarea(\'name\');\r\nForm::textarea(\'name\', $value);\r\nForm::textarea(\'name\', $value, array(\'class\' =&gt; \'name\'));\r\nForm::hidden(\'foo\', $value);\r\nForm::password(\'password\');\r\nForm::password(\'password\', array(\'placeholder\' =&gt; \'Password\'));\r\nForm::email(\'name\', $value, array());\r\nForm::file(\'name\', array(\'class\' =&gt; \'name\'));\r\nForm::checkbox(\'name\', \'value\');\r\n// Generating a checkbox that is checked\r\nForm::checkbox(\'name\', \'value\', true, array(\'class\' =&gt; \'name\'));\r\nForm::radio(\'name\', \'value\');\r\n// Generating a radio input that is selected\r\nForm::radio(\'name\', \'value\', true, array(\'class\' =&gt; \'name\'));\r\nForm::select(\'name\', array(\'key\' =&gt; \'value\'));\r\nForm::select(\'name\', array(\'key\' =&gt; \'value\'), \'key\', array(\'class\' =&gt; \'name\'));\r\nForm::selectRange(\'range\', 1, 10);\r\nForm::selectYear(\'year\', 2011, 2015);\r\nForm::selectMonth(\'month\');\r\nForm::submit(\'Submit!\', array(\'class\' =&gt; \'name\'));\r\nForm::button(\'name\', array(\'class\' =&gt; \'name\'));\r\nForm::macro(\'fooField\', function()\r\n{\r\n	return \'&lt;input type=\"custom\"/&gt;\';\r\n});\r\nForm::fooField();\r\n                </pre>\r\n\r\n                <h4><a name=\"html\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#html\">HTML Builder</a></h4>\r\n                <pre>HTML::macro(\'name\', function(){});\r\n// Convert an HTML string to entities\r\nHTML::entities($value);\r\n// Convert entities to HTML characters\r\nHTML::decode($value);\r\n// Generate a link to a JavaScript file\r\nHTML::script($url, $attributes);\r\n// Generate a link to a CSS file\r\nHTML::style($url, $attributes);\r\n// Generate an HTML image element\r\nHTML::image($url, $alt, $attributes);\r\n// Generate a HTML link\r\nHTML::link($url, \'title\', $attributes, $secure);\r\n// Generate a HTTPS HTML link\r\nHTML::secureLink($url, \'title\', $attributes);\r\n// Generate a HTML link to an asset\r\nHTML::linkAsset($url, \'title\', $attributes, $secure);\r\n// Generate a HTTPS HTML link to an asset\r\nHTML::linkSecureAsset($url, \'title\', $attributes);\r\n// Generate a HTML link to a named route\r\nHTML::linkRoute($name, \'title\', $parameters, $attributes);\r\n// Generate a HTML link to a controller action\r\nHTML::linkAction($action, \'title\', $parameters, $attributes);\r\n// Generate a HTML link to an email address\r\nHTML::mailto($email, \'title\', $attributes);\r\n// Obfuscate an e-mail address to prevent spam-bots from sniffing it\r\nHTML::email($email);\r\n// Generate an ordered list of items\r\nHTML::ol($list, $attributes);\r\n// Generate an un-ordered list of items\r\nHTML::ul($list, $attributes);\r\n// Create a listing HTML element\r\nHTML::listing($type, $list, $attributes);\r\n// Create the HTML for a listing element\r\nHTML::listingElement($key, $type, $value);\r\n// Create the HTML for a nested listing attribute\r\nHTML::nestedListing($key, $type, $value);\r\n// Build an HTML attribute string from an array\r\nHTML::attributes($attributes);\r\n// Build a single attribute element\r\nHTML::attributeElement($key, $value);\r\n// Obfuscate a string to prevent spam-bots from sniffing it\r\nHTML::obfuscate($value);\r\n                </pre>\r\n\r\n                <h4><a name=\"str\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#str\">Strings</a> <a href=\"http://laravel.com/docs/helpers#strings\" title=\"Strings CLI @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>// Transliterate a UTF-8 value to ASCII\r\nStr::ascii($value)\r\nStr::camel($value)\r\nStr::contains($haystack, $needle)\r\nStr::endsWith($haystack, $needles)\r\n// Cap a string with a single instance of a given value.\r\nStr::finish($value, $cap)\r\nStr::is($pattern, $value)\r\nStr::length($value)\r\nStr::limit($value, $limit = 100, $end = \'...\')\r\nStr::lower($value)\r\nStr::words($value, $words = 100, $end = \'...\')\r\nStr::plural($value, $count = 2)\r\n// Generate a more truly \"random\" alpha-numeric string.\r\nStr::random($length = 16)\r\n// Generate a \"random\" alpha-numeric string.\r\nStr::quickRandom($length = 16)\r\nStr::upper($value)\r\nStr::title($value)\r\nStr::singular($value)\r\nStr::slug($title, $separator = \'-\')\r\nStr::snake($value, $delimiter = \'_\')\r\nStr::startsWith($haystack, $needles)\r\n// Convert a value to studly caps case.\r\nStr::studly($value)\r\nStr::macro($name, $macro)\r\n                </pre>\r\n\r\n                <h4><a name=\"localization\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#localization\">Localization</a> <a href=\"http://laravel.com/docs/localization\" title=\"Localization @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>App::setLocale(\'en\');\r\nLang::get(\'messages.welcome\');\r\nLang::get(\'messages.welcome\', array(\'foo\' =&gt; \'Bar\'));\r\nLang::has(\'messages.welcome\');\r\nLang::choice(\'messages.apples\', 10);\r\n// Lang::get alias\r\ntrans(\'messages.welcome\');\r\n                </pre>\r\n\r\n                <h4><a name=\"files\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#files\">Files</a> <a href=\"http://laravel.com/api/class-Illuminate.Filesystem.Filesystem.html\" title=\"Filesystem @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <pre>File::exists(\'path\');\r\nFile::get(\'path\');\r\nFile::getRemote(\'path\');\r\n// Get a file\'s contents by requiring it\r\nFile::getRequire(\'path\');\r\n// Require the given file once\r\nFile::requireOnce(\'path\');\r\n// Write the contents of a file\r\nFile::put(\'path\', \'contents\');\r\n// Append to a file\r\nFile::append(\'path\', \'data\');\r\n// Delete the file at a given path\r\nFile::delete(\'path\');\r\n// Move a file to a new location\r\nFile::move(\'path\', \'target\');\r\n// Copy a file to a new location\r\nFile::copy(\'path\', \'target\');\r\n// Extract the file extension from a file path\r\nFile::extension(\'path\');\r\n// Get the file type of a given file\r\nFile::type(\'path\');\r\n// Get the file size of a given file\r\nFile::size(\'path\');\r\n// Get the file\'s last modification time\r\nFile::lastModified(\'path\');\r\n// Determine if the given path is a directory\r\nFile::isDirectory(\'directory\');\r\n// Determine if the given path is writable\r\nFile::isWritable(\'path\');\r\n// Determine if the given path is a file\r\nFile::isFile(\'file\');\r\n// Find path names matching a given pattern.\r\nFile::glob($patterns, $flag);\r\n// Get an array of all files in a directory.\r\nFile::files(\'directory\');\r\n// Get all of the files from the given directory (recursive).\r\nFile::allFiles(\'directory\');\r\n// Get all of the directories within a given directory.\r\nFile::directories(\'directory\');\r\n// Create a directory\r\nFile::makeDirectory(\'path\',  $mode = 0777, $recursive = false);\r\n// Copy a directory from one location to another\r\nFile::copyDirectory(\'directory\', \'destination\', $options = null);\r\n// Recursively delete a directory\r\nFile::deleteDirectory(\'directory\', $preserve = false);\r\n// Empty the specified directory of all files and folders\r\nFile::cleanDirectory(\'directory\');\r\n                </pre>\r\n\r\n\r\n                <h4><a name=\"helpers\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#helpers\">Helpers</a> <a href=\"http://laravel.com/docs/helpers\" title=\"Helpers @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <h6>Arrays</h6>\r\n                <pre>array_add($array, \'key\', \'value\');\r\n// Build a new array using a callback\r\narray_build($array, function(){});\r\n// Divide an array into two arrays. One with keys and the other with values\r\narray_divide($array);\r\n// Flatten a multi-dimensional associative array with dots\r\narray_dot($array);\r\n// Get all of the given array except for a specified array of items\r\narray_except($array, array(\'key\'));\r\n// Fetch a flattened array of a nested array element\r\narray_fetch($array, \'key\');\r\n// Return the first element in an array passing a given truth test\r\narray_first($array, function($key, $value){}, $default);\r\n// Strips keys from the array\r\narray_flatten($array);\r\n// Remove one or many array items from a given array using \"dot\" notation\r\narray_forget($array, \'foo\');\r\n// Dot notation\r\narray_forget($array, \'foo.bar\');\r\n// Get an item from an array using \"dot\" notation\r\narray_get($array, \'foo\', \'default\');\r\narray_get($array, \'foo.bar\', \'default\');\r\n// Get a subset of the items from the given array\r\narray_only($array, array(\'key\'));\r\n// Return array of key =&gt; values\r\narray_pluck($array, \'key\');\r\n// Return and remove \'key\' from array\r\narray_pull($array, \'key\');\r\n// Set an array item to a given value using \"dot\" notation\r\narray_set($array, \'key\', \'value\');\r\n// Dot notation\r\narray_set($array, \'key.subkey\', \'value\');\r\narray_sort($array, function(){});\r\n// First element of an array\r\nhead($array);\r\n// Last element of an array\r\nlast($array);\r\n                </pre>\r\n                <h6>Paths</h6>\r\n                <pre>app_path();\r\n//  Get the path to the public folder\r\npublic_path();\r\n// App root path\r\nbase_path();\r\n// Get the path to the storage folder\r\nstorage_path();\r\n                </pre>\r\n                <h6>Strings</h6>\r\n                <pre>// Convert a value to camel case\r\ncamel_case($value);\r\n// Get the class \"basename\" of the given object / class\r\nclass_basename($class);\r\n// Escape a string\r\ne(\'&lt;html&gt;\');\r\n// Determine if a given string starts with a given substring\r\nstarts_with(\'Foo bar.\', \'Foo\');\r\n// Determine if a given string ends with a given substring\r\nends_with(\'Foo bar.\', \'bar.\');\r\n// Convert a string to snake case\r\nsnake_case(\'fooBar\');\r\n// Determine if a given string contains a given substring\r\nstr_contains(\'Hello foo bar.\', \'foo\');\r\n// Result: foo/bar/\r\nstr_finish(\'foo/bar\', \'/\');\r\nstr_is(\'foo*\', \'foobar\');\r\nstr_plural(\'car\');\r\nstr_random(25);\r\nstr_limit($value, $limit = 100, $end = \'...\')\r\nstr_singular(\'cars\');\r\n// Result: FooBar\r\nstudly_case(\'foo_bar\');\r\ntrans(\'foo.bar\');\r\ntrans_choice(\'foo.bar\', $count);\r\n                </pre>\r\n                <h6>URLs and Links</h6>\r\n                <pre>action(\'FooController@method\', $parameters);\r\nlink_to(\'foo/bar\', $title, $attributes, $secure);\r\nlink_to_asset(\'img/foo.jpg\', $title, $attributes, $secure);\r\nlink_to_route(\'route.name\', $title, $parameters, $attributes);\r\nlink_to_action(\'FooController@method\', $title, $params, $attrs);\r\n// HTML Link\r\nasset(\'img/photo.jpg\', $title, $attributes);\r\n// HTTPS link\r\nsecure_asset(\'img/photo.jpg\', $title, $attributes);\r\nsecure_url(\'path\', $parameters);\r\nroute($route, $parameters, $absolute = true);\r\nurl(\'path\', $parameters = array(), $secure = null);\r\n                </pre>\r\n                <h6>Miscellaneous</h6>\r\n                <pre>csrf_token();\r\ndd($value);\r\nvalue(function(){ return \'bar\'; });\r\nwith(new Foo)-&gt;chainedMethod();\r\n                </pre>\r\n\r\n                <h4><a name=\"unittest\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#unittest\">Unit testing</a> <a href=\"http://laravel.com/docs/unittest\" title=\"Unit testing @ Laravel Docs\"><i class=\"icon-file-text\"></i></a></h4>\r\n                <h6>Install and run</h6>\r\n                <pre>// add to composer and update:\r\n\"phpunit/phpunit\": \"4.0.*\"\r\n// run tests (from project root)\r\n./vendor/bin/phpunit\r\n                </pre>\r\n                <h6>Asserts</h6>\r\n                <pre>$this-&gt;assertTrue(true);\r\n$this-&gt;assertEquals(\'foo\', $bar);\r\n$this-&gt;assertCount(1,$times);\r\n$this-&gt;assertResponseOk();\r\n$this-&gt;assertResponseStatus(403);\r\n$this-&gt;assertRedirectedTo(\'foo\');\r\n$this-&gt;assertRedirectedToRoute(\'route.name\');\r\n$this-&gt;assertRedirectedToAction(\'Controller@method\');\r\n$this-&gt;assertViewHas(\'name\');\r\n$this-&gt;assertViewHas(\'age\', $value);\r\n$this-&gt;assertSessionHasErrors();\r\n// Asserting the session has errors for a given key...\r\n$this-&gt;assertSessionHasErrors(\'name\');\r\n// Asserting the session has errors for several keys...\r\n$this-&gt;assertSessionHasErrors(array(\'name\', \'age\'));\r\n$this-&gt;assertHasOldInput();\r\n                </pre>\r\n                <h6>Calling routes</h6>\r\n                <pre>$response = $this-&gt;call($method, $uri, $parameters, $files, $server, $content);\r\n$response = $this-&gt;callSecure(\'GET\', \'foo/bar\');\r\n$this-&gt;session([\'foo\' =&gt; \'bar\']);\r\n$this-&gt;flushSession();\r\n$this-&gt;seed();\r\n$this-&gt;seed($connection);\r\n                </pre>\r\n\r\n                <h4><a name=\"SSH\" href=\"http://www.skillbooker.com/tutorials/laravel/laravel_5_cheat_sheet/#SSH\">SSH</a> <a href=\"http://laravel.com/docs/ssh\" title=\"SSH @ Laravel Docs\"><i class=\"icon-file-text\"></i></a>\r\n                </h4>\r\n                <h6>Executing Commands</h6>\r\n                <pre>SSH::run(array $commands);\r\nSSH::into($remote)-&gt;run(array $commands); // specify remote, otherwise assumes default\r\nSSH::run(array $commands, function($line)\r\n{\r\n	echo $line.PHP_EOL;\r\n});\r\n                </pre>\r\n\r\n                <h6>Tasks</h6>\r\n                <pre>SSH::define($taskName, array $commands); // define\r\nSSH::task($taskName, function($line) // execute\r\n{\r\n	echo $line.PHP_EOL;\r\n});\r\n                </pre>\r\n\r\n                <h6>SFTP Uploads</h6>\r\n                <pre>SSH::put($localFile, $remotePath);\r\nSSH::putString($string, $remotePath);\r\n                </pre>\r\n\r\n                <h6>Filesystem/Cloud Storage</h6>\r\n                <pre>Storage::disk(\'s3\');\r\nStorage::disk(\'local\')-&gt;put(\'file.txt\', \'Contents\');\r\nStorage::disk(\'local\')-&gt;get(\'file.jpg\');\r\nStorage::disk(\'s3\')-&gt;exists(\'file.jpg\');\r\nStorage::get(\'file.jpg\');\r\nStorage::put(\'file.jpg\', $contents);\r\nStorage::size(\'file1.jpg\');\r\nStorage::lastModified(\'file1.jpg\');\r\nStorage::copy(\'old/file1.jpg\', \'new/file1.jpg\');\r\nStorage::move(\'old/file1.jpg\', \'new/file1.jpg\');\r\nStorage::prepend(\'file.log\', \'Prepended Text\');\r\nStorage::append(\'file.log\', \'Appended Text\');\r\nStorage::delete([\'file1.jpg\', \'file2.jpg\']);\r\nStorage::files($directory);\r\nStorage::allFiles($directory);\r\nStorage::directories($directory);\r\nStorage::allDirectories($directory);\r\nStorage::makeDirectory($directory);\r\nStorage::deleteDirectory($directory);\r\n                </pre>' , '' , '1' , '457' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('67' , '1 minute Video on Testing & Assessment' , 'video_testing_assessment' , '10' , '20' , '1' , '1 minute video on testing and assessment which skillbooker.com does in the crm' , '<h2>Skillbooker\'s CRM has the capability to test and assess and compare different candidates</h2>\r\n<BR>\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/NKygQ0bOx90\" frameborder=\"0\" allowfullscreen></iframe>' , '' , '0' , '154' , '2016-06-01' , '2018-01-18' ); INSERT INTO tutorials VALUES('68' , 'Create Controller Action / Function without A View' , 'create_controller_action_function_without_a_view' , '1' , '20' , '1' , 'cakephp controller action without a view' , '<p>Add&nbsp;</p>\r\n\r\n<p><span style=\"color: rgb(50, 50, 50); font-family: Helvetica, Arial, &quot;Lucida Grande&quot;, sans-serif; font-size: 16px; line-height: 26px;\">$this-&gt;autoRender = false;</span></p>\r\n\r\n<p><span style=\"color: rgb(50, 50, 50); font-family: Helvetica, Arial, &quot;Lucida Grande&quot;, sans-serif; font-size: 16px; line-height: 26px;\">To your function inside your controller</span></p>\r\n' , '' , '1' , '261' , '2016-07-11' , '2018-01-18' ); INSERT INTO tutorials VALUES('69' , 'How to install CakePHP 3 on Xampp using composer' , 'how_to_install_cakephp_3_on_xampp' , '1' , '20' , '1' , 'how to install cakephp3 on Xampp' , '<p style=\"margin:0px 0px 1em\">At first it was a huge problem to me, use Composer someone said. What&#39;s that? Where do I start. But once I used it I realise it was easy peasy.</p>\r\n\r\n<p style=\"margin:0px 0px 1em\">Before you start do the following.</p>\r\n\r\n<p style=\"margin:0px 0px 1em\">Please ensure following things are enabled and installed on your machine.</p>\r\n\r\n<ol style=\"margin:0px 0px 1em 30px\">\r\n	<li style=\"margin:0px 0px 0.5em\">Install Xampp</li>\r\n	<li style=\"margin:0px 0px 0.5em\">You must have PHP 5.4.16 or above installed on your machine.</li>\r\n	<li style=\"margin:0px 0px 0.5em\">Go to php.ini and activate the intl plugin - do this BEFORE you go on.</li>\r\n	<li style=\"margin:0px\">mbstring extension and intl extension must be enabled to install CakePHP 3 on your machine.</li>\r\n</ol>\r\n\r\n<p style=\"margin:0px 0px 1em\">Next Install Composer. For windows users it&#39;s very easy just download installer file from composer site.</p>\r\n\r\n<p style=\"margin:0px 0px 1em\">Here is the .exe installer link to download&nbsp;<a href=\"https://getcomposer.org/Composer-Setup.exe\" style=\"margin:0px\">Composer-Setup.exe</a></p>\r\n\r\n<p style=\"margin:0px 0px 1em\">METHOD 1: Once You installed composer successfully. Go to &#39;Start&#39; then &nbsp;type in &#39;<strong>cmd</strong>&#39; then by using change directory (cd ../) navigate to the location on your PC (normally in C:/xampp/htdocs/ ) where you want to install the CakePHP3. Then run following command in terminal window.</p>\r\n\r\n<p style=\"margin:0px 0px 1em\">(METHOD 2: also works install git bash, once installed you can right click in the folder where you want to run composer, so you don&#39;t need to cd into that folder using comand line)</p>\r\n\r\n<pre class=\"lang-php prettyprint prettyprinted\">\r\n<code style=\"margin:0px\"><span class=\"pln\" style=\"margin:0px\">composer create</span><span class=\"pun\" style=\"margin:0px\">-</span><span class=\"pln\" style=\"margin:0px\">project </span><span class=\"pun\" style=\"margin:0px\">--</span><span class=\"pln\" style=\"margin:0px\">prefer</span><span class=\"pun\" style=\"margin:0px\">-</span><span class=\"pln\" style=\"margin:0px\">dist cakephp</span><span class=\"pun\" style=\"margin:0px\">/</span><span class=\"pln\" style=\"margin:0px\">app cquiz</span></code></pre>\r\n\r\n<p style=\"margin:0px 0px 1em\">Voila, now give Cakephp write access to the temp folder by typing in &#39;Y&#39;</p>\r\n\r\n<p style=\"margin:0px 0px 1em\"><img alt=\"install cakephp\" src=\"http://www.skillbooker.com//img/tutorials/cakephp/how_to_install_cakephp_3_on_xampp/1468255200hl.png\" style=\"float:left\" /></p>\r\n\r\n<p style=\"margin:0px 0px 1em\">&nbsp;</p>\r\n' , '' , '2' , '400' , '2016-07-11' , '2018-01-19' ); INSERT INTO tutorials VALUES('129' , 'Use a function from one controller in another controller' , 'use_a_function_from_on_controller_in_another_controller' , '1' , '20' , '1' , 'Use a function from one controller in another controller' , '<p>There is two ways to re-use functionality in CakePHP. One way it by place your code in a component and then reference the component. This is probably more correct, but I find the component does not have access to the Cakephp elements&nbsp;like sessions, save(), find() etc. So to keep it simple I prefer to place the functionality I need in a controller and reference the function in the controller with $this-&gt;myfunction(); then I can also use it in another controller like this</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">App::import(\'Controller\', \'Nameofcontroller\');\r\n$calledcontroller = new NameofcontrollerController;\r\n$calledcontroller-&gt;functionIwantToAccess();</code></pre>\r\n' , '' , '1' , '315' , '2016-12-05' , '2018-01-18' ); INSERT INTO tutorials VALUES('126' , 'Load DebugKit for CakePHP 3 with command line' , 'load_debugkit_for_cakephp_3_with_command_line' , '1' , '20' , '1' , 'Load DebugKit for CakePHP 3 with command line' , '<p>If you use windows command line go to &#39;start&#39; type in cmd, in the command line <strong>cd</strong> into the to your cake php app. Then cd into the bin folder. Then interface paste in (right click paste)&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">composer require --dev cakephp/debug_kit \"~3.0\"</code></pre>\r\n\r\n<p>then activate the plugin by&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-bash\">cake plugin load DebugKit</code></pre>\r\n\r\n<p>voila !</p>\r\n' , '' , '1' , '324' , '2016-12-02' , '2018-01-18' ); INSERT INTO tutorials VALUES('132' , 'What is \'Migrations\' in Laravel 5 and CakePHP 3' , 'what_is_migrations_in_laravel_5_and_cakephp_3' , '9' , '20' , '1' , 'What is \'Migrations\' in Laravel 5 and CakePHP 3' , '<p>Migrations in Laravel 5 comes as standard in CakePHP3 it is a plugin which you mention in your composer file then run the command in you command line &#39;</p>\r\n\r\n<pre>\r\ncomposer require cakephp/migrations:~1.0&#39; \r\n</pre>\r\n\r\n<p>Basically what <strong>migrations</strong> do is: they have the database table name and structure in your <strong>code</strong>. So from you code you can build your database tables.</p>\r\n\r\n<p>With <strong>Cake Bake and Laravel Artisan</strong> you can do it the other way around. You can build your code (ie controller, views and models) (CRUD statements) with your database as reference.</p>\r\n\r\n<p>Hope this helps a newbie!</p>\r\n' , '' , '1' , '706' , '2016-12-05' , '2018-01-19' ); INSERT INTO tutorials VALUES('140' , 'Test to see if JQuery works' , 'test_to_see_if_jquery_works' , '11' , '20' , '1' , 'Test to see if JQuery works' , '<p>This is the best way I have found to test if jQuery works. A simple colour change. Place this in your header before the body tags</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">  &lt;script&gt;\r\n$(function(){\r\n  $(\"button\").mouseover(function(){\r\n    var $p = $(\"#P44\");\r\n    $p.stop()\r\n      .css(\"background-color\",\"yellow\")\r\n      .hide(1500, function() {\r\n          $p.css(\"background-color\",\"red\")\r\n            .show(1500);\r\n      });\r\n  });\r\n});\r\n&lt;/script&gt;</code></pre>\r\n\r\n<p>place this in the &lt;body&gt; tags:</p>\r\n\r\n<p>&lt;button&gt;Test&lt;/button&gt;</p>\r\n\r\n<p>&lt;p id=&quot;P44&quot; class=&quot;test&quot;&gt;<br />\r\n&nbsp; &nbsp; Testing...<br />\r\n&lt;/p&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '324' , '2016-12-08' , '2018-01-18' ); INSERT INTO tutorials VALUES('70' , 'How to go back to the previous page in Cakephp' , 'how_to_go_back_to_the_previous_page_in_cakephp' , '1' , '20' , '1' , 'How to go back to the previous page in Cakephp' , '<p>In your controller use this to go back to the previous page:</p>\r\n\r\n<p>$this-&gt;redirect($this-&gt;referer());<br />\r\nor use the referer&#39;s parameters like this:<br />\r\n$this-&gt;redirect($this-&gt;referer(array(&lsquo;action&rsquo;=&gt;&rsquo;index&rsquo;), true));</p>\r\n' , '' , '2' , '423' , '2016-07-11' , '2018-01-19' ); INSERT INTO tutorials VALUES('71' , 'How to use CakeBake on CakePHP3 on a Windows Xampp or Wamp enviroment' , 'how_to_use_cakebake_on_cakephp3_on_a_windows_xampp_or_wamp_enviroment' , '1' , '20' , '1' , 'How to use CakeBake on CakePHP3 on a Windows Xampp or Wamp enviroment' , '<p>This probably works like most thing once you done it once you&#39;ll realise it is extremely easy. Once you have set up Cakephp with Composer (see our little tutorial <a href=\"http://www.skillbooker.com/tutorials/cakephp/how_to_install_cakephp_3_on_xampp\" target=\"_blank\">&#39;How to install CakePHP 3 on Xampp&#39;</a>&nbsp;) All you have to do is the following.</p>\r\n\r\n<p>Before you start with Cakebake. Cakebake Bakes a database, so you will need a database schema, either you have to build the database yourself in PHPMyAdmin or download on.<br />\r\nCrucially every table needs an PRIMARY KEY. So each one of my tables starts with an ID which is a PRIMARY KEY and also is set to&nbsp;<span style=\"color: rgb(0, 0, 0); font-family: sans-serif; font-size: 13.12px; line-height: normal; white-space: nowrap;\">AUTO_INCREMENT</span></p>\r\n\r\n<p><strong>EXAMPLE:</strong></p>\r\n\r\n<p><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 13.12px; line-height: normal; white-space: nowrap;\">TABLE: USERS</span></font><br />\r\n<font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 13.12px; line-height: normal; white-space: nowrap;\">id, user_name, user_email.</span></font></p>\r\n\r\n<p><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 13.12px; line-height: normal; white-space: nowrap;\">TABLE ORDERS<br />\r\nid, users_id, order_name</span></font></p>\r\n\r\n<p><font color=\"#000000\" face=\"sans-serif\"><span style=\"font-size: 13.12px; line-height: normal; white-space: nowrap;\">So that if you have dependencies between id&#39;s that they use the correct format for CakeBake to read.<br />\r\nYour database is your <strong>MOST CRUCIAL STEP IN THIS WHOLE PROCESS. </strong>So make sure it is as close to perfect as you can get it spend proper time on this.</span></font><br />\r\n<br />\r\nNow, configure your CakePHP3 installation tell it which database to use. In the &#39;core.php&#39; file, update the HOST, USER, PASSWORD, DATABASE</p>\r\n\r\n<p>So for a local Xampp or Wamp installation it will be host (localhost or 127.0.0.1) user (root), password (&#39;&#39;), database (&#39;yourdatabase&#39;)</p>\r\n\r\n<ul>\r\n	<li>In windows click start, type in cmd this will open the command prompt.</li>\r\n	<li>navigate using cd ../ or cd foldername to get to the following location in xampp C:/<span style=\"line-height: 20.8px;\">xampp/htdocs/app/bin</span></li>\r\n	<li><span style=\"line-height: 20.8px;\">To view all CakeBake&nbsp;commands type in <em>cake bake</em></span></li>\r\n	<li><span style=\"line-height: 20.8px;\">To view all tables that can be baked type in <em>cake bake all</em></span></li>\r\n	<li><span style=\"line-height: 20.8px;\">To bake all models in one go type in <em>cake bake model all</em></span></li>\r\n	<li><span style=\"line-height: 20.8px;\">To bake all controllers in one go <em>cake bake controller all</em></span></li>\r\n	<li><span style=\"line-height: 20.8px;\">To bake all &#39;views&#39; &#39;in cake bake type in <em>cake bake template all</em></span></li>\r\n	<li><span style=\"line-height: 20.8px;\">To bake a specific controller/view/model type in<em> cake bake controller/view/model table name</em></span></li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"line-height: 20.8px;\"><em>Please feel free to email me or comment if you have any questions</em></span></p>\r\n' , '' , '1' , '350' , '2016-07-14' , '2018-01-18' ); INSERT INTO tutorials VALUES('72' , 'What to do when some has applied for a job' , 'what_to_do_when_some_has_applied_for_a_job' , '10' , '20' , '1' , 'What to do when some has applied for a job' , 'We aim to keep our videos short and to the point. Here is a list of quick &#39;How to do it&#39; videos that might answer some questions.<br />\r\n<BR>\r\n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/fNBbhwkUtUE\" width=\"420\"></iframe><br />\r\n<a href=\"https://youtu.be/fNBbhwkUtUE\" target=\"_blank\"><u>View it on Fullscreen</u></a>' , '' , '1' , '186' , '2016-08-25' , '2018-01-18' ); INSERT INTO tutorials VALUES('76' , 'How to create \'Modules\' on a Laravel 5.3 installation' , 'how_to_create_modules_on_a_laravel_5_installation' , '9' , '20' , '1' , '' , '<p><strong>Step1:</strong> Create Folder &ldquo;Modules&rdquo; inside &ldquo;app/&rdquo;<br />\r\n<strong>Step2:</strong> In Modules folder create your Module (Module1( suppose admin Module))<br />\r\n&nbsp;Inside admin module : create the following folder&nbsp;</p>\r\n\r\n<p>&nbsp;1. Controllers &nbsp;(here will your controller files)<br />\r\n&nbsp;2. Views &nbsp;(here will your View files)<br />\r\n&nbsp;3. Models &nbsp;(here will your Model files)<br />\r\n&nbsp;4. routes.php (here will your route code in this file)</p>\r\n\r\n<p>Similarly, You can create another module</p>\r\n\r\n<p>Module2( suppose API )<br />\r\n-Controllers<br />\r\n-Views<br />\r\n-Models<br />\r\n-routes.php<br />\r\nSimilarly, you can create multiple modules</p>\r\n\r\n<p><strong>Step3 :</strong> Create ModuleServiceProvider.php inside &ldquo;app/Providers/&rdquo; Folder</p>\r\n\r\n<p><strong>Step4 :</strong> Paste following code inside ModuleServiceProvider.php</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">namespace App\\Providers;\r\n\r\nuse Illuminate\\Support\\ServiceProvider;\r\n\r\nclass ModuleServiceProvider extends ServiceProvider\r\n{\r\n    /**\r\n     * Will make sure that the required modules have been fully loaded\r\n     * @return void\r\n     */\r\n    public function boot()\r\n    {\r\n        // For each of the registered modules, include their routes and Views\r\n        $modules = config(\"module.modules\");\r\n\r\n        while (list(,$module) = each($modules)) {\r\n       \r\n            // Load the routes for each of the modules\r\n            if(file_exists(base_path(\'app/Modules/\'.$module.\'/routes.php\'))) {\r\n                include base_path(\'app/Modules/\'.$module.\'/routes.php\');\r\n            }\r\n\r\n            // Load the views                                           \r\n            if(is_dir(base_path(\'app/Modules/\'.$module.\'/Views\'))) {\r\n                $this-&gt;loadViewsFrom(base_path(\'app/Modules/\'.$module.\'/Views\'), $module);\r\n            }\r\n        }\r\n    }\r\n\r\n    public function register() {}\r\n}</code></pre>\r\n\r\n<p><br />\r\n<strong>Step5 :</strong> Add following line inside &lsquo;config/app.php&rsquo; file</p>\r\n\r\n<p><strong>App\\Providers\\ModuleServiceProvider::class,</strong></p>\r\n\r\n<p><strong>Step6 :</strong> Create module.php file inside &lsquo;config&rsquo; folder</p>\r\n\r\n<p><strong>Step7 :</strong> Add following code inside module.php (path =&gt; &ldquo;config/module.php&rdquo;)</p>\r\n\r\n<blockquote>\r\n<p>return [</p>\r\n\r\n<p>&nbsp; &nbsp; &#39;modules&#39; =&gt; [</p>\r\n\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &#39;User&#39;,<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &#39;Theme&#39;, &nbsp;<br />\r\n&nbsp; &nbsp; ],</p>\r\n\r\n<p>];</p>\r\n</blockquote>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Note : You can add your module name whichever you have created. Here there are modules.</p>\r\n\r\n<p><strong>Step8 :</strong> Run this command<br />\r\ncomposer dump-autoload &nbsp;- for updating</p>\r\n\r\n<p>We will add more information here so stay tuned...</p>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '943' , '2016-11-09' , '2018-01-18' ); INSERT INTO tutorials VALUES('75' , 'Expand Marketing Capabilities and target a very specific audience using LinkedIn and Skillbooker' , 'expand_marketing_capabilities_and_target_a_very_specific_audience_using_linkedin_and_skillbooker' , '10' , '20' , '1' , 'Expanding your marketing capabilities, target a very specific audience by combining LinkedIn contacts and Skillbooker contact sorting - a bit of working importing and exporting but if you have thousands of contacts in LinkedIn - it could make your li' , '<p>Expanding your marketing capabilities, target a very specific audience by combining LinkedIn contacts and Skillbooker contact sorting - a bit of working importing and exporting but if you have thousands of contacts in LinkedIn - it could make your life so much easier</p>\r\n\r\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/TnPd_Sp86mw\" width=\"560\"></iframe></p>\r\n\r\n<ul style=\"color: rgb(70, 70, 70); font-family: arial, sans-serif; font-size: 16px; line-height: 16px;\"><br />\r\n	<li style=\"margin-left: 15px;\">Sign into&nbsp;<strong>LinkedIn</strong></li>\r\n	<li style=\"margin-left: 15px;\">In LinkedIn click on &#39;My Network&#39; -&gt; &#39;Connections&#39;</li>\r\n	<li style=\"margin-left: 15px;\">Click on the little gear cock to the right, which will bring you to &#39;<a data-saferedirecturl=\"https://www.google.com/url?hl=en&amp;q=https://www.linkedin.com/connected/manage_sources&amp;source=gmail&amp;ust=1474275065372000&amp;usg=AFQjCNGDiY1xESntFKxwhHgsNo8rabHxWw\" href=\"https://www.linkedin.com/connected/manage_sources\" style=\"color: rgb(17, 85, 204);\" target=\"_blank\">https://www.linkedin.com/<wbr />connected/manage_sources</a>&#39;</li>\r\n	<li style=\"margin-left: 15px;\">Click on &#39;Export LinkedIn Connections&#39;</li>\r\n	<li style=\"margin-left: 15px;\">Select &#39;Microsoft Outlook.CSV&#39; - download the file to your local computer.</li>\r\n	<li style=\"margin-left: 15px;\">Sign into&nbsp;<strong>Skillbooker.com</strong></li>\r\n	<li style=\"margin-left: 15px;\">Click on &#39;Contacts&#39; -&gt; &#39;Import contacts&#39;</li>\r\n	<li style=\"margin-left: 15px;\">Import your downloaded file.</li>\r\n	<li style=\"margin-left: 15px;\">Now you can sort your LinkedIn Connections by sorting them into different categories</li>\r\n	<li style=\"margin-left: 15px;\">Go to &#39;Contacts&#39; -&gt; &#39;Contact Categories&#39;</li>\r\n	<li style=\"margin-left: 15px;\">Create a category</li>\r\n	<li style=\"margin-left: 15px;\">Click on &#39;Add Contact&#39; next to the category created</li>\r\n	<li style=\"margin-left: 15px;\">In the search box search for the job title you want to filter in</li>\r\n	<li style=\"margin-left: 15px;\">Click the radio boxes for the ones you like to include or the &#39;all&#39; radio box</li>\r\n	<li style=\"margin-left: 15px;\">Click &#39;submit&#39;</li>\r\n	<li style=\"margin-left: 15px;\">Now your connections are sorted into categories and are ready to use in your email program to target a specific audience</li>\r\n	<li style=\"margin-left: 15px;\">The next step would be to export to CSV and import into an email program like MailChimp</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '485' , '2016-09-17' , '2018-01-18' ); INSERT INTO tutorials VALUES('77' , 'Best way to earn contract or permanent employee?' , 'best_way_to_earn_contract_or_permanent_employee' , '7' , '20' , '1' , 'why contractors earn more than permanent employeesc' , '<h2>Let&#39;s compare the Employee and the Contractor</h2>\r\n\r\n<p>If you are a permanent employee you are paid &pound;40,000 or so a year. Taking into account the employers NI that is being paid by the employer, the gross earnings are &pound;44,785. This is the gross earnings for the worker before tax.</p>\r\n\r\n<p>Once the &pound;4,474 NI tax is paid by the employer further taxes of &pound;10,933 are paid in PAYE and employees NI, leaving the worker &pound;29,067.</p>\r\n\r\n<p>A contractor receives &pound;36,372 on the same payment.</p>\r\n\r\n<p>The Contractor takes home <strong>&pound;7,305</strong> more than the employee</p>\r\n\r\n<p><u><strong>Here&rsquo;s how it works for the contractor:</strong></u></p>\r\n\r\n<p>The contractor charges &pound;44,474 for their services and takes the necessary steps to ensure they are outside IR35. The cost to the company is the same.</p>\r\n\r\n<h2>Tax</h2>\r\n\r\n<p>The contractor pays themselves a small salary of &pound;6,000 per year which incurs employers NI (&pound;122), employees NI (&pound;105), and PAYE (&pound;97). The rest is company profit which is subject to corporation tax (&pound;7287). This all leaves a distributable company profit of &pound;31,065 which is declared as a dividend and will be subject to a further tax on dividends (&pound;491).</p>\r\n\r\n<p>The contractors net income after taxes is &pound;36,372, which is 82% of their earnings. This means they need a 22% return on their money if invested to get back to where they started before the government took their cut.</p>\r\n\r\n<p>Suffice it to say, being a contractor and working via a limited company has significant tax advantages. And that&rsquo;s not all&hellip;</p>\r\n\r\n<p>being a contractor and working via a limited company has significant tax advantages</p>\r\n\r\n<h2>Expenses</h2>\r\n\r\n<p>Everyone who works incurs expenses. You have to eat lunch. You have to take the Tube, whatever.</p>\r\n\r\n<p>These expenses are &ldquo;wholly and exclusively&rdquo; due to the nature of your work, to cite the definition the Revenue gives</p>\r\n\r\n<p>When the permanent employee eats lunch, it comes out of his or her own pocket. Not so the contractor.</p>\r\n\r\n<p>The contractor pays for their lunch out of pre-tax expenses. This makes a considerable difference.</p>\r\n\r\n<p>For example, lets assume a cost of &pound;100 per week in expenses. This costs the permanent employee the full &pound;100 from their net income. However, the contractor can claim these expenses resulting in only a &pound;61 drop in their net income.</p>\r\n\r\n<p>And the contractor can claim expenses for all of their work-related equipment, things like laptops, mobile phones, office equipment, broadband connections and so on.</p>\r\n' , '' , '1' , '208' , '2016-11-16' , '2018-01-18' ); INSERT INTO tutorials VALUES('78' , 'Top Laravel 5.3 Tutorials from Beginners to Expert' , 'top_laravel_5_3_tutorials_from_beginners_to_expert' , '9' , '20' , '1' , 'Our top Laravel 5.3 tutorials from beginners to expert' , '<p>Here is our top laravel tutorials from beginners to expert. It consist of 25 videos at the end of the 25 videos if you are registered with Skillbooker.com please email us and we will send you a link to test your knowledge of Laravel. This will appear on your ONLINE CV / RESUME. So let&#39;s start here is the first video.</p>\r\n\r\n<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/a8ZpAf_tNh0\" width=\"560\"></iframe></p>\r\n' , '' , '1' , '378' , '2016-11-16' , '2018-01-18' ); INSERT INTO tutorials VALUES('103' , 'How to install Laravel 5.3 on Xampp on Windows with Login and Registration all working in 5 minutes' , 'how_to_install_laravel_5_3_on_xampp_on_windows_with_login_and_registration_all_working_in_5_minutes' , '9' , '20' , '1' , 'How to install Laravel 5.3 on Xampp on Windows with Login and Registration all working in 5 minutes' , '<p>Installation of <strong>Laravel 5.3</strong> is a breeze. IF you know how and you can do it in 5 minutes if you local development enviroment is set up.</p>\r\n\r\n<ul>\r\n	<li>Set up your local develpment enviroment like <strong>Xampp</strong></li>\r\n	<li>Go to <strong>Github</strong> and search for Laravel 5.3 - download it, unzip it and paste the code in your local domain where you want the site to be run.</li>\r\n	<li>If you set up &nbsp;a local domain ( <a href=\"http://www.skillbooker.com/tutorials/other/how_to_setup_spesific_local_domain_virtual_hosts_using_xampp_on_windows\" target=\"_blank\">HERE is HOW</a> ) make sure it points to the &#39;<strong>public</strong>&#39; folder.</li>\r\n	<li>Rename the file <strong>.env.example</strong> to <strong>.env</strong> and change the values basically the main one is the database connection - I find this does not work well in notepad so try another ide I use a free IDE (PSPAD). I will past my .env contents below.</li>\r\n	<li>Download <strong>Git Bash</strong> (https://github.com/msysgit/msysgit/releases/) or use any other command line interface you like.</li>\r\n	<li>With Git bash installed you can right click with in the folder where your &#39;app&#39; folder and files of your site resides. Then select &#39;<strong>Git Bash Here</strong>&#39; - this means you will automatically install things in the right location and you don&#39;t have to change directory ( /cd) as with other commandline interfaces.</li>\r\n</ul>\r\n\r\n<p>No is the easy part.</p>\r\n\r\n<ul>\r\n	<li>Copy&nbsp;. &#39;<strong>php artisan make:auth</strong>&#39; right click on Git Bash or commandline and paste run it.</li>\r\n	<li>(this will automatically install the controllers, views and models to handel all login, registration and email verification services)</li>\r\n	<li>Copy&nbsp;. &#39;<strong>php artisan migrate</strong>&#39; right click on Git Bash or commandline and paste run it.</li>\r\n	<li>(This will install all the databases tables you need, your database connection in the .env file is crucial here)&nbsp;</li>\r\n	<li>Now if you like you can install a debugger to help you in development&nbsp;(https://laravel-news.com/2015/02/laravel-debugbar/ )</li>\r\n	<li>You have to run:&nbsp;<strong>composer require barryvdh/laravel-debugbar </strong>in your command line</li>\r\n</ul>\r\n\r\n<p>Happy days ! And that all for now folks, if it does not work for some reason or I missed somethings else please leave a comment below and I will adjust the instructions.</p>\r\n' , '' , '1' , '268' , '2016-11-18' , '2018-01-18' ); INSERT INTO tutorials VALUES('79' , 'How To Setup Spesific Local Domain ( Virtual Hosts ) Using XAMPP on Windows' , 'how_to_setup_spesific_local_domain_virtual_hosts_using_xampp_on_windows' , '6' , '20' , '1' , 'How To Setup Spesific Local Domain ( Virtual Hosts ) Using XAMPP on Windows' , '<p>Here is some instruction how to setup a spesific domain name on Xampp using a Windows 7 machine. Routes might change contact us if you stuggle.</p>\r\n\r\n<p>First make sure you have downloaded and installed <strong>Xampp</strong></p>\r\n\r\n<p>Take Notepad or your favourite IDE and go to&nbsp;&nbsp;<strong>C:/xampp/apache/conf/extra/httpd-vhosts.conf</strong><br />\r\nOpen this file and at the bottom of this file paste:</p>\r\n\r\n<p>&lt;VirtualHost *:80&gt;<br />\r\n&nbsp; &nbsp; ServerAdmin <strong>my-new-domain</strong><br />\r\n&nbsp; &nbsp; DocumentRoot &quot;C:/xampp/htdocs/<strong>my-new-domain</strong>&quot;<br />\r\n&nbsp; &nbsp; ServerName <strong>my-new-domain</strong><br />\r\n&nbsp; &nbsp; ErrorLog &quot;logs/dummy-host2.example.com-error.log&quot;<br />\r\n&nbsp; &nbsp; CustomLog &quot;logs/dummy-host2.example.com-access.log&quot; common<br />\r\n&lt;/VirtualHost&gt;</p>\r\n\r\n<p>Now in your &#39;start&#39; button, right click right on Notepad, select &#39;<strong>run as administrator</strong>&#39;, in Notepad go File-&gt;Open navigate to&nbsp;<strong>C:/Windows/System32/drivers/etc/hosts&nbsp;</strong>open up hosts</p>\r\n\r\n<p>Copy the line&nbsp;<br />\r\n<strong>127.0.0.1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; localhost</strong></p>\r\n\r\n<p>paste and change to&nbsp;</p>\r\n\r\n<p><strong>127.0.0.1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; my-new-domain</strong></p>\r\n\r\n<p>(add as many as you like or have defined in your apache vhost file)</p>\r\n\r\n<p><strong>Restart Apache&nbsp;</strong></p>\r\n\r\n<p>Voila ! Happy days</p>\r\n' , '' , '1' , '586' , '2016-11-18' , '2018-01-19' ); INSERT INTO tutorials VALUES('116' , 'How to display selected options in a multi select drop down in Laravel' , 'how_to_display_selected_options_in_a_multi_select_drop_down_in_laravel' , '9' , '20' , '1' , 'How to display selected options in a multi select drop down in Laravel' , '<p>Laravel gives you the option to have default values on drop down boxes. When doing form elements in Laravel you can use normal HTML or the Form helper which generates the HTML. With a multi select drop down list. You can use the <a href=\"https://select2.github.io/\" target=\"_blank\">jquery select2 </a>or <a href=\"https://github.com/FaroeMedia/selectator\" target=\"_blank\">Selectator</a>&nbsp;which can make pretty up your normal multi select drop down into selectable and unselectable little buttons.</p>\r\n\r\n<p>In Laravel, the Form helper does not support default values for this. Here you have two options you can either use Javascript to do this for you as described in this <a href=\"https://www.youtube.com/watch?v=haMQWBi2O14\" target=\"_blank\">youtube tutorial</a>&nbsp;or you can do it in PHP in the controller then display it in the view.</p>\r\n\r\n<p>Here we are going to explain to you PHP way to do it.<br />\r\nFirstly let&#39;s say you want to add tags from a multi select drop down list to a post.</p>\r\n\r\n<p>So you have three tables, the post table, the tag table and the post_tag many to many table.</p>\r\n\r\n<p>So in the post controller in the edit function I will place the following code:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">$post = Posts::where(\'slug\',$slug)-&gt;first();\r\n// get the post values\r\n\r\n\r\n		$poststags = PostsTag::all()-&gt;where(\'posts_id\', \'=\', $post-&gt;id);\r\n		$poststags = $poststags-&gt;toArray();\r\n\r\n// get the selected tags from the many to many post_table\r\n\r\n		$selectedtags = array();\r\n		foreach($poststags as $key =&gt; $value){\r\n			$selectedtags[$key] = $value[\'tag_id\'];\r\n		}\r\n\r\n// take the array which you get from the toArray(); function and manipulate it even more\r\n		\r\n		$tags =  Tag::all();\r\n		$tags2 = array();\r\n		foreach($tags as $tag){\r\n			if (in_array($tag-&gt;id, $selectedtags)) {\r\n			 $tags2[$tag-&gt;id] =\'&lt;option value=\"\'.$tag-&gt;id.\'\" selected=\"selected\"&gt;\'.$tag-&gt;name.\'&lt;/option&gt;\';\r\n			 } else {\r\n			 $tags2[$tag-&gt;id] =\'&lt;option value=\"\'.$tag-&gt;id.\'\"&gt;\'.$tag-&gt;name.\'&lt;/option&gt;\';	\r\n			 }	\r\n		}\r\n\r\n// loop through the array and insert the html with the selected=selected for the once which was inserted previously\r\n\r\n &lt;select multiple size=\"6\" class=\"form-control select2-multi\"  name=\"tags[]\"&gt;\r\n   @foreach($tags as $ktag =&gt; $vtag)\r\n     {!! $vtag !!}\r\n   @endforeach\r\n &lt;/select&gt;\r\n\r\n// display it in the view</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '406' , '2016-11-24' , '2018-01-18' ); INSERT INTO tutorials VALUES('123' , 'How to install cakephp 3  on localhost without composer' , 'how_to_install_cakephp_3_on_localhost_without_composer' , '1' , '20' , '1' , 'How to install cakephp 3  on Xampp or Wamp without composer' , '<p><strong>Here is how you install cakephp 3 on xampp or wamp without composer</strong></p>\r\n\r\n<ul>\r\n	<li>First download the latest version cakephp 3 file <a href=\"https://github.com/cakephp/cakephp/releases/download/3.2.7/cakephp-3-2-7.zip\">zip from here</a>&nbsp;</li>\r\n	<li>Second Unzip this file into&nbsp;example &nbsp; (xampp/htdocs/NewCakeProject)&nbsp;</li>\r\n	<li>Thirdly create your database into mysql locate to the localhost/phpmyadmin and create a new database with name like (ex - NewCakeProject)</li>\r\n	<li>Then go to local disk c:/xampp/htdocs/NewCakeProject/config/app.php</li>\r\n	<li>Edit your&nbsp;username password and dbname</li>\r\n</ul>\r\n\r\n<p>ex - &nbsp; &nbsp; &nbsp; &#39;username&#39; =&gt; &#39;root&#39;, &nbsp;//username is always root for localhost<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;password&#39; =&gt; &#39;&#39;, &nbsp; //password is always blank for localhost<br />\r\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#39;database&#39; =&gt; &#39;NewCakeProject&#39;,</p>\r\n\r\n<p>This might be online 228</p>\r\n\r\n<p>Open your broswer and navigate to localhost/NewCakeProject to view the Cakephp default page</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>NOTE: it is better to use composer as it will give you the option to add &#39;dependencies&#39; later when you need them.</p>\r\n' , 'How to install cakephp 3  on localhost without composer' , '1' , '463' , '2016-12-02' , '2018-01-18' ); INSERT INTO tutorials VALUES('164' , 'Cakephp 3 define variable in AppController, use in other controllers and views' , 'cakephp_3_define_variable_in_appcontroller_use_in_other_controllers_and_views' , '1' , '20' , '1' , 'Cakephp 3 define variable in AppController, use in other controllers and views' , '<p>In the appController in Cakephp 3 you can do the following:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">        $site = $this-&gt;Sitesettings-&gt;get(\'1\');\r\n        \r\n        $sitename = $site-&gt;site;\r\n        $this-&gt;set(\'sitedefaultname\', $sitedefaultname);\r\n        \r\n        $sitedescription = $site-&gt;description;\r\n        $this-&gt;set(\'sitedefaultdescription\', $sitedefaultdescription);\r\n        \r\n        $sitekeywords = $site-&gt;keywords;\r\n        $this-&gt;set(\'sitedefaultkeywords\', $sitedefaultkeywords);\r\n        \r\n        $sitedefaultcountryid = $site-&gt;country_id;\r\n        $this-&gt;set(\'sitedefaultcountryid\', $sitedefaultcountryid);\r\n        \r\n        $sitedefaultstateid = $site-&gt;state_id;\r\n        $this-&gt;set(\'sitedefaultstateid\', $sitedefaultstateid);</code></pre>\r\n\r\n<p>THEN</p>\r\n\r\n<p>In the controller you want to use:</p>\r\n\r\n<pre>\r\n<code>   public function index()\r\n    {\r\n        $sitedefaultcountryid = $this-&gt;viewVars[\'sitedefaultcountryid\'];\r\n        $states = $this-&gt;paginate($this-&gt;States, [\'conditions\' =&gt; [\'States.country_id\' =&gt; $sitedefaultcountryid]]);\r\n\r\n        $this-&gt;set(compact(\'states\'));\r\n        $this-&gt;set(\'_serialize\', [\'states\']);\r\n    }</code></pre>\r\n\r\n<p>Also you can use it an a view by just using the variable like $sitedefaultcountryid;</p>\r\n' , '' , '1' , '362' , '2016-12-14' , '2018-01-18' ); INSERT INTO tutorials VALUES('171' , 'Standard Terms of Business for the Introduction of Permanent Positions' , 'standard_terms_of_business_for_the_introduction_of_permanent_positions' , '7' , '20' , '1' , 'Standard Terms of Business for the Introduction of Permanent Positions' , '<h1>SKILLBOOKER Standard Terms of Business for the Introduction of Permanent Positions</h1>\r\n\r\n<p>(TO BE DIRECTLY EMPLOYED BY THE CLIENT)</p>\r\n\r\n<p>1.<strong>DEFINITIONS</strong><br />\r\nIn these Terms of Business the following definitions apply:</p>\r\n\r\n<p>&ldquo;<strong>Applicant</strong>&rdquo; means the person introduced by the Agency to the Client for an Engagement including any officer or employee of the Applicant if the Applicant is a limited company, or a member of the Agency&rsquo;s own staff;</p>\r\n\r\n<p>&ldquo;<strong>Client</strong>&rdquo; means the person; firm or corporate body together with any subsidiary or associated Company as defined by the Companies Act 1985 to which the Applicant is introduced;</p>\r\n\r\n<p>&ldquo;<strong>Agency</strong>&rdquo; means Skillbooker Ltd</p>\r\n\r\n<p>&ldquo;<strong>Engagement</strong>&rdquo; means the engagement, employment or use of the Applicant by the Client or any third party on<br />\r\na permanent or temporary basis, whether under a contract of service or for services; under an agency, licence, franchise or partnership agreement; or any other engagement; directly or through a limited company of which the Applicant is an officer or employee</p>\r\n\r\n<p>&ldquo;<strong>Introduction</strong>&rdquo;&nbsp;&nbsp; &nbsp;means (i) the Client&rsquo;s interview of an Applicant in person or by telephone, following the Client&rsquo;s instruction to the Agency to search for an Applicant; or (ii) the passing to the Client of a curriculum vit&aelig; or information which identifies the Applicant; and which leads to an Engagement of that Applicant;</p>\r\n\r\n<p>&ldquo;<strong>Remuneration</strong>&rdquo; includes base salary or fees, guaranteed and/or anticipated bonus and commission earnings, allowances, inducement payments, the benefit of a company car and all other payments and taxable (and, where applicable, non-taxable) emoluments payable to or receivable by the Applicant for services rendered to or on behalf of the Client. Where the Client provides a company car, a notional amount of &pound;5,000 will be added to the salary in order to calculate the Agency&rsquo;s fee.</p>\r\n\r\n<p><br />\r\n2. <strong>THE CONTRACT</strong><br />\r\n2.1 These Terms constitute the contract between the Agency and the Client and are deemed to be accepted by the Client by virtue of an Introduction to, or the Engagement of an Applicant or the passing of any information about the Applicant to any third party following an Introduction.</p>\r\n\r\n<p>2.2 These terms contain the entire agreement between the parties and unless otherwise agreed in writing by a director of the Agency, these Terms of Business prevail over any other terms of business or purchase conditions put forward by the Client.</p>\r\n\r\n<p>2.3 No variation or alteration to these Terms shall be valid unless the details of such variation are agreed between the Agency and the Client and are set out in writing and a copy of the varied terms is given to the Client stating the date on or after which such varied terms shall apply.</p>\r\n\r\n<p>3. <strong>NOTIFICATION AND FEES</strong><br />\r\n3.1 The Client agrees:<br />\r\na) To notify the Agency immediately of any offer of an Engagement which it makes to the Applicant;<br />\r\nb) To notify the Agency immediately that its offer of an Engagement to the Applicant has been accepted and to provide details of the Remuneration to the Agency; and<br />\r\nc) To pay the Agency&rsquo;s fees within 30 days from the date of invoice.<br />\r\n3.2 Except in the circumstances set out in clause 5.1, no fee is incurred by the Client until the Applicant commences the Engagement when the Agency will render an invoice to the Client for its fees.</p>\r\n\r\n<p>3.3 The Agency reserves the right to charge interest on invoiced amounts unpaid by the due date in accordance with &ldquo;The Late Payment of Commercial Debt (interest) ACT 1998&rdquo;.</p>\r\n\r\n<p>3.4 The fee payable to the Agency by the Client for an Introduction resulting in an Engagement is 10% of the first year&rsquo;s remuneration. VAT will be charged on the fee if applicable.</p>\r\n\r\n<p>3.5 In the event that the Engagement is for a fixed term of less than 12 months, the fee in clause 3.4 will apply pro-rata. If the Engagement is extended beyond the initial fixed term or if the Client re-engages the Applicant within 6 calendar months from the date of termination of the first Engagement the Client shall be liable to pay a further fee based on the additional Remuneration applicable for the period of Engagement following the initial fixed term up to the termination of the second Engagement or the first anniversary of its commencement, whichever is the sooner.</p>\r\n\r\n<p>3.6 If the Client subsequently engages or re-engages the Applicant within the period of 6 calendar months from the date of termination of the Engagement or withdrawal of the offer, a full fee calculated in accordance with clause 3.4 above becomes payable.</p>\r\n\r\n<p>4. <strong>DISCOUNT GUARANTEE</strong><br />\r\nIn order to qualify for the Discount Guarantee;-</p>\r\n\r\n<p>The Client must pay the Agency&rsquo;s fee within the credit terms of the invoice.<br />\r\nThe Engagement is terminated by the Applicant or by the Applicant&rsquo;s death or by the Client within 12 weeks from the date of Engagement<br />\r\nThe Client must notify the Agency in writing of the termination of the Engagement within 7 days of its termination and, if applicable, supply a copy of the Applicant&rsquo;s letter of termination.<br />\r\nNeither the Client nor any subsidiary nor associated company nor person shall engage the Applicant within 12 months of the termination of the Engagement<br />\r\nThe termination is not due to redundancy and the Client does not owe any other overdue sums to the Agency<br />\r\nProvided there is qualification to the Discount Guarantee then:-</p>\r\n\r\n<p>The Discount Guarantee Details:-</p>\r\n\r\n<p>The Agency guarantees to discount a proportion of the next invoice as follows<br />\r\nTermination 0 to 4 weeks from date of Engagement = 100% less a &pound;50 administration charge.<br />\r\nTermination 5 to 8 weeks from date of Engagement = 50%<br />\r\nTermination 9 to 12 weeks from date of Engagement = 25%<br />\r\nthereafter - no discount</p>\r\n\r\n<p>This Discount Guarantee is applicable only to full permanent placements and not to fixed term appointments. The Discount Guarantee is only given where the Agency has replaced the terminated Applicant and charged at the Standard Fee rate. The Agency will only apply the discount to the next invoice for the replacement Applicant.</p>\r\n\r\n<p><br />\r\n5. <strong>CANCELLATION FEE</strong><br />\r\n5.1 If, after an offer of Engagement has been made to the Applicant, the Client decides for any reason to withdraw it, the Client shall be liable to pay the Agency a minimum fee of &pound;3,000.</p>\r\n\r\n<p>6. <strong>INTRODUCTIONS</strong><br />\r\n6.1 Introductions of Applicants are confidential. The disclosure by the Client to a third party of any details regarding an Applicant introduced by the Agency which results in an Engagement with that third party within 12 months of the Introduction renders the Client liable to payment of the Agency&rsquo;s fee as set out in clause 3.4 with no entitlement to any refund.</p>\r\n\r\n<p>6.2 An introduction fee calculated in accordance with clause 3.4 will be charged in relation to any Applicant engaged as a consequence of or resulting from an introduction by or through the Agency, whether direct or indirect, within 6 months from the date of the Agency&rsquo;s Introduction.</p>\r\n\r\n<p>6.3 Where the amount of the actual Remuneration is not known the Agency will charge a fee calculated in accordance with clause 3.4 on the minimum level of remuneration applicable for the position in which the Applicant has been engaged with regard to any information supplied to the Agency by the Client and/or comparable positions in the market generally for such positions.</p>\r\n\r\n<p>6.4 In the event that any employee of the Agency with whom the Client has had personal dealings accepts an Engagement with the Client within 6 months of leaving the Agency&rsquo;s employment, the Client shall be liable to pay an introduction fee to the Agency in accordance with clause 3.4.</p>\r\n\r\n<p>7. <strong>APPLICANT SUITABILITY AND REFERENCES</strong><br />\r\n7.1 The Agency confirms that it undertakes rigorous checks on all Applicants to Home Office standards on the eligibility to work in the UK prior to an Applicant accepting an offer of Engagement. Where practical references are requested from previous employers. Where an Engagement requires specific skills, experience, authorisation required by law or any professional body, the Agency undertakes to take all reasonable steps to ensure an Applicant is so qualified.</p>\r\n\r\n<p>7.2 At the same time as proposing an Applicant to the Client the Agency shall inform the Client of such matters in clause 7.1 as they have obtained confirmation of. Where such information is not given in paper form or by electronic means it shall be confirmed by such means by the end of the third business day (excluding Saturday, Sunday and any public or Bank holiday) following, save where the Applicant is being proposed for a position which is the same as one in which the Applicant has worked within the previous five business days and such information has already been given to the Client.</p>\r\n\r\n<p>7.3 The Agency endeavours to take all such steps as are reasonably practicable to ensure that the Client and Applicant are aware of any requirements imposed by law or any professional body to enable the Applicant to work in the position which the Client seeks to fill.</p>\r\n\r\n<p>7.4 The Agency endeavours to take all such steps as are reasonably practicable to ensure that it would not be detrimental to the interests of either the Client or the Applicant for the Applicant to work in the position which the Client seeks to fill.</p>\r\n\r\n<p>7.5 Notwithstanding clauses 7.1, 7.2, 7.3 and 7.4 above the Client shall satisfy itself as to the suitability of the Applicant and the Client shall take up any references provided by the Applicant to it or the Agency before engaging such Applicant. The Client is responsible for obtaining work permits and/or such other permission to work as may be required, for the arrangement of medical examinations and/or investigations into the medical history of any Applicant, and satisfying any medical and other requirements, qualifications or permission required by law of the country in which the Applicant is engaged to work.</p>\r\n\r\n<p>7.6 To enable the Agency to comply with its obligations under clauses 7.1, 7.2, 7.3 and 7.4 above, the Client undertakes to provide to the Agency details of the position which the Client seeks to fill, including the type of work that the Applicant would be required to do; the location and hours of work; the experience, training, qualifications and any authorisation which the Client considers necessary or which are required by law or any professional body for the Applicant to possess in order to work in the position; and any risks to health or safety known to the Client and what steps the Client has taken to prevent or control such risks. In addition the Client shall provide details of the date the Client requires the Applicant to commence, the duration or likely duration of the work; the minimum rate of remuneration, expenses and any other benefits that would be offered; the intervals of payment of remuneration and the length of notice that the Applicant would be entitled to give and receive to terminate the employment with the Client.</p>\r\n\r\n<p>8. <strong>SPECIAL SITUATIONS</strong><br />\r\n8.1 Where the Applicant is required by law, or any professional body to have any qualifications or authorisations to work in the position which the Client seeks to fill; or the work involves caring for or attending one or more persons under the age of eighteen, or any person who by reason of age, infirmity or who is otherwise in need of care or attention, the Agency will take all reasonably practicable steps to obtain and offer to provide copies of any relevant qualifications or authorisations of the Applicant, two references from persons not related to the Applicant who have agreed that the references they provide may be disclosed to the Client and has taken all reasonably practicable steps to confirm that the Applicant is suitable for the position. If the Agency is unable to do any of the above it shall inform the Client of the steps it has taken to obtain this information in any event.</p>\r\n\r\n<p>9. <strong>LIABILITY</strong><br />\r\n9.1 The Agency shall not be liable under any circumstances for any loss, expense, damage, delay, costs or compensation (whether direct, indirect or consequential) which may be suffered or incurred by the Client arising from or in any way connected with the Agency seeking an Applicant for the Client or from the Introduction to or Engagement of any Applicant by the Client or from the failure of the Agency to introduce any Applicant. For the avoidance of doubt, the Agency does not exclude liability for death or personal injury arising from its own negligence.</p>\r\n\r\n<p>10.<strong> LAW</strong><br />\r\n10.1 These Terms are governed by the law of England &amp; Wales and are subject to the exclusive jurisdiction of the Courts of England &amp; Wales</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Signed on behalf of the Client</strong>: _____________________________________________</p>\r\n\r\n<p><br />\r\n<strong>Print Name</strong>: ____________________________________________________________</p>\r\n\r\n<p><br />\r\n<strong>Date</strong>: _________________________________________________________________</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Signed on behalf of the Agency</strong>: ____________________________________________</p>\r\n\r\n<p><br />\r\n<strong>Print Name</strong>: ____________________________________________________________</p>\r\n\r\n<p><br />\r\n<strong>Date</strong>: _________________________________________________________________<br />\r\n&nbsp;</p>\r\n\r\n<p>: _________________________________________________________________</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>This contracts is provided by Skillbooker LTD</p>\r\n\r\n<pre>\r\nCopyright (c) 2016  SKILLBOOKER LTD.\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms are permitted\r\nprovided that the above copyright notice and this paragraph are\r\nduplicated in all such forms and that any documentation,\r\nadvertising materials, and other materials related to such\r\ndistribution and use acknowledge that the software was developed\r\nby the &lt;organization&gt;. The name of the\r\n&lt;organization&gt; may not be used to endorse or promote products derived\r\nfrom this software without specific prior written permission.\r\nTHIS SOFTWARE IS PROVIDED ``AS IS&#39;&#39; AND WITHOUT ANY EXPRESS OR\r\nIMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED\r\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.</pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '154' , '2016-12-15' , '2018-01-19' ); INSERT INTO tutorials VALUES('172' , 'Pre-employment checks and Gates for recruiting candidates ' , 'pre-employment_checks_and_gates_for_recruiting_candidates' , '7' , '20' , '1' , 'Pre-employment checks and Gates for recruiting candidates ' , '<p>This graph will basically show recruiters the process for checking candidates applications for positions:</p>\r\n\r\n<h2>Pre-employment checks</h2>\r\n\r\n<ul>\r\n	<li>Academic references</li>\r\n	<li>Non-academic references</li>\r\n	<li>Right to work</li>\r\n	<li>Satisfactory health assessment</li>\r\n	<li>Proof of identity</li>\r\n	<li>Gaps in employment</li>\r\n	<li>Right to return</li>\r\n	<li>DBS checks</li>\r\n	<li>Additional checks</li>\r\n	<li>Proof of Qualifications</li>\r\n</ul>\r\n\r\n<h2>Pre-employment stages</h2>\r\n\r\n<ul>\r\n	<li>Application</li>\r\n	<li>Shortlisting</li>\r\n	<li>Interview</li>\r\n	<li>Verbal offer</li>\r\n	<li>Conditional offer</li>\r\n	<li>1st day - two months</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><img alt=\"pre-employment checks and gates graph\" \r\nsrc=\"http://www.skillbooker.com//img/tutorials/recruiters/pre-employment_checks_and_gates_for_recruiting_candidates/1481807014r1x.png\" style=\"float:right; padding:10px; width:100%; height:auto;\" /></p>\r\n' , '' , '1' , '518' , '2016-12-15' , '2018-01-18' ); INSERT INTO tutorials VALUES('173' , 'CakePHP 3: ImageComponent Code and how to use it' , 'cakephp_3_imagecomponent_code_and_how_to_use_it' , '1' , '20' , '1' , 'CakePHP 3: ImageComponent Code and how to use it' , '<p>Here is a quick Tutorial for an Image Component for Cakephp 3 ( we have one for 2 - email us if you need it).</p>\r\n\r\n<p>Firstly in the view you have to have these two bits:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?= $this-&gt;Form-&gt;create($user, [\'enctype\' =&gt; \'multipart/form-data\']) ?&gt;</code></pre>\r\n\r\n<p>This is to create the form with the multipart enctype<br />\r\nalso your&nbsp;</p>\r\n\r\n<pre>\r\n<code>Â  Â  echo $this-&gt;Form-&gt;input(\'avatar\', [\'class\'=&gt;\'form-control\', \'label\' =&gt; \'Profile Avatar\', \'type\' =&gt; \'file\']);</code></pre>\r\n\r\n<p>In your usercontroller - or what ever controller you use..</p>\r\n\r\n<p>We are going to say, if the image gets posted then take it and engage the image component.</p>\r\n\r\n<p>Like so:</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">          if (!empty($this-&gt;request-&gt;data[\'avatar\'][\'name\'])) {\r\n          \r\n            $this-&gt;loadComponent(\'Image\');\r\n            $location = WWW_ROOT . \'/img/avatars/\';\r\n            $image = $this-&gt;Image-&gt;uploadimage($location, $this-&gt;request-&gt;data[\'avatar\']);        \r\n  \r\n              if(!empty($image)){\r\n      \r\n                    $this-&gt;Image-&gt;load($location.$image);\r\n                    $this-&gt;Image-&gt;resizeToWidth(140);\r\n                    $this-&gt;Image-&gt;save($location.$image);\r\n                    $user-&gt;avatar = $image;\r\n                    \r\n              } else {\r\n                  $this-&gt;Flash-&gt;error(__(\'Avatar has te be jpg, jpeg, gif or png\'));\r\n                  return $this-&gt;redirect([\'action\' =&gt; \'index\']);\r\n              }\r\n \r\n          } </code></pre>\r\n\r\n<p>All that you have to do now is to load the ImageComponent in the Controllers/Component folder.. HERE is the code.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\n\r\nnamespace App\\Controller\\Component;\r\n\r\nuse Cake\\Controller\\Component;\r\n\r\nclass ImageComponent extends Component\r\n{\r\n   \r\n   var $image;\r\n   var $image_type;\r\n   var $location;\r\n \r\n   function load($filename) {\r\n      $image_info = getimagesize($filename);\r\n      $this-&gt;image_type = $image_info[2];\r\n      if( $this-&gt;image_type == IMAGETYPE_JPEG ) {\r\n         $this-&gt;image = imagecreatefromjpeg($filename);\r\n      } elseif( $this-&gt;image_type == IMAGETYPE_GIF ) {\r\n         $this-&gt;image = imagecreatefromgif($filename);\r\n      } elseif( $this-&gt;image_type == IMAGETYPE_PNG ) {\r\n         $this-&gt;image = imagecreatefrompng($filename);\r\n      }\r\n   }\r\n   \r\n\r\n   \r\n   function save($filename, $image_type=IMAGETYPE_JPEG, $compression=75, $permissions=null) {\r\n      if( $image_type == IMAGETYPE_JPEG ) {\r\n         imagejpeg($this-&gt;image,$filename,$compression);\r\n      } elseif( $image_type == IMAGETYPE_GIF ) { \r\n            \r\n         imagegif($this-&gt;image,$filename);         \r\n      } elseif( $image_type == IMAGETYPE_PNG ) {\r\n         imagepng($this-&gt;image,$filename);\r\n      }   \r\n      if( $permissions != null) {\r\n         chmod($filename,$permissions);\r\n      }\r\n   }\r\n   \r\n   function output($image_type=IMAGETYPE_JPEG) {\r\n      if( $image_type == IMAGETYPE_JPEG ) {\r\n         imagejpeg($this-&gt;image);\r\n      } elseif( $image_type == IMAGETYPE_GIF ) {\r\n         imagegif($this-&gt;image);         \r\n      } elseif( $image_type == IMAGETYPE_PNG ) {\r\n         imagepng($this-&gt;image);\r\n      }   \r\n   }\r\n   function getWidth() {\r\n      return imagesx($this-&gt;image);\r\n   }\r\n   function getHeight() {\r\n      return imagesy($this-&gt;image);\r\n   }\r\n   function resizeToHeight($height) {\r\n      $ratio = $height / $this-&gt;getHeight();\r\n      $width = $this-&gt;getWidth() * $ratio;\r\n      $this-&gt;resize($width,$height);\r\n   }\r\n   function resizeToWidth($width) {\r\n      $ratio = $width / $this-&gt;getWidth();\r\n      $height = $this-&gt;getheight() * $ratio;\r\n      $this-&gt;resize($width,$height);\r\n   }\r\n   function scale($scale) {\r\n      $width = $this-&gt;getWidth() * $scale/100;\r\n      $height = $this-&gt;getheight() * $scale/100; \r\n      $this-&gt;resize($width,$height);\r\n   }\r\n   function resize($width,$height) {\r\n      $new_image = imagecreatetruecolor($width, $height);\r\n      $color = imagecolorallocatealpha($new_image, 255, 255, 255, 127);\r\n      imagefill($new_image, 0, 0, $color);\r\n      imagesavealpha($new_image, TRUE);\r\n      imagecopyresampled($new_image, $this-&gt;image, 0, 0, 0, 0, $width, $height, $this-&gt;getWidth(), $this-&gt;getHeight());\r\n      $this-&gt;image = $new_image;   \r\n   }\r\n   \r\n//// own stuff added 14/06/2010\r\n   \r\n    function getType($filetype) {\r\n      if( $filetype == \'image/jpg\' ) {\r\n         $ext = \'jpg\';\r\n      } elseif( $filetype == \'image/jpeg\' ) {\r\n         $ext = \'jpg\';\r\n      } elseif( $filetype == \'image/gif\'  ) {\r\n         $ext = \'gif\';\r\n      } elseif( $filetype == \'image/png\' ) {\r\n         $ext = \'png\';\r\n      }\r\n      return $ext;\r\n   }\r\n   \r\n   \r\n   function randomise(){\r\n   \r\n 	// Get a random set of 3 chars which we will append to the filename to prevent duplicate file names.\r\n	$keychars = \"abcdefghijklmnopqrstuvwxyz0123456789\";\r\n	$length = 3;\r\n	$randkey = \"\";\r\n	for ($i=0;$i&lt;$length;$i++)  $randkey .= substr($keychars, rand(1, strlen($keychars) ), 1); \r\n\r\n	// Set the name of the file  (current time + the random value + . + the file extension)\r\n	$filename = time().$randkey;\r\n	\r\n	return $filename;\r\n  \r\n  //another way $filename = time() . \"_\" . rand(000000, 999999);\r\n     \r\n   }\r\n\r\n   \r\n   function uploadimage($location, $upload) {\r\n \r\n	   $ext = $this-&gt;getType($upload[\'type\']);\r\n	   $newfilename = $this-&gt;randomise();\r\n\r\n			if($ext &lt;&gt; \"\"){\r\n\r\n        $file = $newfilename.\".\".$ext;\r\n				$uploadfile = $location.$file;\r\n            \r\n    				if (move_uploaded_file($upload[\"tmp_name\"], $uploadfile)){\r\n    				    return $file;\r\n    				}				\r\n		    }				\r\n	   \r\n    }      \r\n}\r\n?&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '535' , '2016-12-16' , '2018-01-18' ); INSERT INTO tutorials VALUES('195' , 'Set up an Amazon Ubuntu Ec2 instance with Mysql, PHP, Apache and PHPMyAdmin - on WINDOWS + CAKEPHP3' , 'set_up_an_amazon_ubuntu_ec2_instance_with_mysql_php_apache_and_phpmyadmin_-_on_windows_cakephp3' , '1' , '20' , '1' , 'How Set up an Amazon Ubuntu Ec2 instance with Mysql, PHP, Apache and PHPMyAdmin, Curl for Paypal to use on Cakephp 3' , '<p><iframe allowfullscreen=\"\" frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/B6McRWaiX-U\" width=\"560\"></iframe></p>\r\n&nbsp;\r\n\r\n<p>For the first time user especially trying to setup and configure and amazon instance is daunting and can be quite confusing as&nbsp;<br />\r\nthere are no clear step by step instructions to tell you how to. Amazon does cover a lot but not all. Once the Amazon Instance is configured we are going to configure Cakephp 3 aswell. Developed on a local xampp server. Questions are welcome</p>\r\n\r\n<p>The first time I did this Ubuntu on Amazon used PHP5 the second time I did this it was upgraded to PHP7 I have inserted the settings for PHP7 which is slighly different.</p>\r\n\r\n<p>So here is our step by step instructions tailored for the absolute beginning.</p>\r\n\r\n<ol>\r\n	<li>Create and Amazon account,&nbsp;</li>\r\n	<li>Click on &#39;Launch instance&#39; select the type of instance you like, we select Ubuntu</li>\r\n	<li>Once you have launched you instance, alter the security, the make the outbound available to all and also the INBOUND</li>\r\n	<li>While launching the instance it will ask you to download the file with extention .pem</li>\r\n	<li>Download and install download WINSCP which come bundled with Putty or just download putty on it&#39;s own</li>\r\n	<li>Use Putty KeyGen and generate a private key to use when loggin into your instance - for testing I did not use the &#39;generate&#39; option in the key gen but simply imported the PEM file and saved in to the PPK equivalent in keygen</li>\r\n	<li>If you are not familiar with Putty, read a tutorial how to use it, once you have done it once it is easy. You need to use the private file you generated as a password to SSH you Amazon instance - techno speak for access you Amazon Cloud server.</li>\r\n	<li>sudo apt-get update</li>\r\n	<li>sudo apt-get dist-upgrade</li>\r\n	<li>sudo apt-get install apache2</li>\r\n	<li>sudo nano /etc/apache2/apache2.conf</li>\r\n	<li>change var/www to AllowOverride All&nbsp;</li>\r\n	<li>change user/var to AllowOverride All&nbsp;</li>\r\n	<li>CTRL + X save</li>\r\n	<li>sudo a2enmod rewrite</li>\r\n	<li>sudo apt-get install libapache2-mod-php5</li>\r\n	<li>sudo service apache2 restart</li>\r\n	<li>View you in browser on your ip address</li>\r\n	<li>Create a .htaccess file that point to index.php with phpinfo() in it. - for testing</li>\r\n	<li>sudo apt-get install mysql-server&nbsp;l - remember your password</li>\r\n	<li>sudo apt-get install php5-mysq FOR PHP7 (php -v) you need&nbsp;sudo apt-get install php7.0-fpm php7.0-mysql</li>\r\n	<li>sudo apt-get install phpmyadmin</li>\r\n	<li>sudo nano /etc/apache2/apache2.conf</li>\r\n	<li>Go back insert the following &#39;Include /etc/phpmyadmin/apache.conf&#39; (ctl + o = save)</li>\r\n	<li>Installing cakephp 3 extentions &nbsp;sudo apt-get install php5-intl FOR PHP&amp; sudo apt-get install php7.0-intl</li>\r\n	<li>Fpr Paypal you need Curl --- sudo apt-get install php-curl</li>\r\n	<li>sudo service apache2 restart</li>\r\n	<li>show extentions: php -m</li>\r\n	<li>sudo apt-get install php5-sqlite FOR PHP7 use&nbsp;sudo apt-get install php-sqlite3</li>\r\n	<li>sudo service apache2 restart</li>\r\n	<li>change permissions to tmp, logs and img folders recursivley</li>\r\n	<li>If you stuggle with permissions in SSH make yourself root by sudo -i</li>\r\n	<li>change file permissions like sudo chmod -R o+rw /var/www</li>\r\n\r\n	<li>In PHP7 version I get a&nbsp;sql_mode=only_full_group_by error: to fix it I did:</li>\r\n	<li><code>sudo nano /etc/mysql/my.cnf</code></li>\r\n	<li><code>edit at bottom of file:&nbsp;</code>\r\n	<pre>\r\n<code>[mysqld]  \r\nsql_mode = &quot;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&quot;</code></pre>\r\n	</li>\r\n</ol>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>sudo service mysql restart</p>\r\n\r\n<p>https://help.ubuntu.com/community/phpMyAdmin<br />\r\nhttp://archive.gregk.me/2011/installing-pdo-sqlite3-support-on-ubuntu/</p>\r\n\r\n<p>&nbsp;</p>\r\n' , 'Gabriel Kolbe' , '1' , '1243' , '2017-01-25' , '2018-09-17' ); INSERT INTO tutorials VALUES('228' , 'Rackspace class to upload, delete, show, list files and images on rackspace' , 'rackspace_class_to_upload_delete_show_list_files_and_images_on_rackspace' , '3' , '20' , '1' , 'Rackspace class that has functions in to connect, upload, delete, show and list files and images on rackspace' , '<p>This is a <strong>Rackspace</strong> class that has functions in to connect, upload, delete, show and list files and images on rackspace. It consist of the base class - with also have a class that extends the base class and deals with all the actions required. There might be functions in here that deal with updating the model and database of the application it comes from. <ins>Please note: this is for relative advanced developers.</ins></p>\r\n\r\n<h2>Rackspace Base class</h2>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\n\r\nnamespace Rackspace\\Component;\r\n// in a framework you will need to adjust the namespace here\r\n\r\nclass Rackspace\r\n{\r\n    //Scoped Variables\r\n    const USERNAME = \" \"; // username\r\n    const KEY = \" \"; // api key\r\n    const CONTAINER = \" \"; // Pinpoint Container\r\n    const HANDSET_CACHE_CONTAINER = \" \";\r\n    const HANDSET_CACHE_DEV_CONTAINER = \" \";\r\n    const HANDSET_SECURE_URL = \"https://... ....rackcdn.com/\";\r\n    const HANDSET_SECURE_DEV_URL = \"https://... ....rackcdn.com/\";\r\n    const URL = \"https://... ....rackcdn.com/\";\r\n    const SECURE_URL = \"https://... ....rackcdn.com/\";\r\n\r\n\r\n    public static function determineHandsetContainer()\r\n    {\r\n        if (false === getenv(\'FORCE_DEV_CDN\')) {\r\n            return Rackspace::CACHE_CONTAINER;\r\n        }\r\n\r\n        return Rackspace::CACHE_DEV_CONTAINER;\r\n    }\r\n\r\n    public static function determineHandsetURL()\r\n    {\r\n        if (false === getenv(\'FORCE_DEV_CDN\')) {\r\n            return Rackspace::RACKSPACE_SECURE_URL;\r\n        }\r\n\r\n        return Rackspace::RACKSPACE_SECURE_DEV_URL;\r\n    }\r\n\r\n    public function listFiles()\r\n    {\r\n        $container = $this-&gt;connect();\r\n        return $container-&gt;list_objects();\r\n    }\r\n\r\n    public function findFileByName($fileName)\r\n    {\r\n        $url = null;\r\n\r\n        $files = $this-&gt;listFiles();\r\n\r\n        if (is_array($files)) {\r\n            $pos = strpos(implode(\'|\', $files), $fileName);\r\n            if ($pos &gt; 0) {\r\n                $url = self::URL . \'/\' . $fileName;\r\n            }\r\n        }\r\n\r\n        return $url;\r\n    }\r\n\r\n    public function uploadRawFileData($fileData, $filename)\r\n    {\r\n        $container = $this-&gt;connect();\r\n\r\n        // upload file data to Rackspace\r\n        $object = $container-&gt;create_object($filename);\r\n\r\n        //Prevent attempted md5 checksum of file data\r\n        $object-&gt;set_etag(null);\r\n\r\n        //Prevent attempt to determine mime type based on non-existent extension\r\n        $object-&gt;content_type = \"image/png\";\r\n        $uploadToRackspace = $object-&gt;write($fileData, (float)strlen($fileData));\r\n\r\n        return $uploadToRackspace;\r\n    }\r\n\r\n    /**\r\n     * @return bool|string\r\n     */\r\n    private function connect()\r\n    {\r\n        $auth = new \\CF_Authentication(self::USERNAME, self::KEY);\r\n        $auth-&gt;authenticate();\r\n        $conn = new \\CF_Connection($auth);\r\n        return $conn-&gt;get_container(self::CONTAINER);\r\n    }\r\n\r\n    public function uploadFile($localFile, $filename)\r\n    {\r\n        $container = $this-&gt;connect();\r\n\r\n        $object = $container-&gt;create_object($filename);\r\n\r\n        if (!$object-&gt;content_type &amp;&amp; (string)is_file($localFile) &amp;&amp; function_exists(\"mime_content_type\")) {\r\n            $object-&gt;content_type = @mime_content_type($filename);\r\n\r\n        } else {\r\n            $extension = end(explode(\'.\', $filename));\r\n            $object-&gt;content_type = $this-&gt;getMimeTypeFromExtension($extension) ;\r\n\r\n        }\r\n\r\n        $extension = end(explode(\'.\', $filename));\r\n        $this-&gt;allowExtension($extension);\r\n\r\n        return $object-&gt;load_from_filename($localFile);\r\n\r\n    }\r\n\r\n    private function allowExtension($extension, $extentionlist=null)\r\n{\r\n    $extentionlist = array(\"jpg\", \"jpeg\", \"jpe\", \"png\");\r\n    if ((in_array($extension, $extentionlist))) {\r\n\r\n    } else {\r\n        die (\"File extention is not on our list.\");\r\n    }\r\n}\r\n\r\n    private function getMimeTypeFromExtension($extension)\r\n    {\r\n        switch ($extension) {\r\n            case \"js\":\r\n                return \"application/x-javascript\";\r\n\r\n            case \"json\":\r\n                return \"application/json\";\r\n\r\n            case \"jpg\":\r\n            case \"jpeg\":\r\n            case \"jpe\":\r\n                return \"image/jpg\";\r\n\r\n            case \"png\":\r\n            case \"gif\":\r\n            case \"bmp\":\r\n            case \"tiff\":\r\n                return \"image/\" . $extension;\r\n\r\n            case \"css\":\r\n                return \"text/css\";\r\n\r\n            case \"xml\":\r\n                return \"application/xml\";\r\n\r\n            case \"doc\":\r\n            case \"docx\":\r\n                return \"application/msword\";\r\n\r\n            case \"xls\":\r\n            case \"xlt\":\r\n            case \"xlm\":\r\n            case \"xld\":\r\n            case \"xla\":\r\n            case \"xlc\":\r\n            case \"xlw\":\r\n            case \"xll\":\r\n                return \"application/vnd.ms-excel\";\r\n\r\n            case \"ppt\":\r\n            case \"pps\":\r\n                return \"application/vnd.ms-powerpoint\";\r\n\r\n            case \"rtf\":\r\n                return \"application/rtf\";\r\n\r\n            case \"pdf\":\r\n                return \"application/pdf\";\r\n\r\n            case \"html\":\r\n            case \"htm\":\r\n            case \"php\":\r\n                return \"text/html\";\r\n\r\n            case \"txt\":\r\n                return \"text/plain\";\r\n\r\n            case \"mpeg\":\r\n            case \"mpg\":\r\n            case \"mpe\":\r\n                return \"video/mpeg\";\r\n\r\n            case \"mp3\":\r\n                return \"audio/mpeg3\";\r\n\r\n            case \"wav\":\r\n                return \"audio/wav\";\r\n\r\n            case \"aiff\":\r\n            case \"aif\":\r\n                return \"audio/aiff\";\r\n\r\n            case \"avi\":\r\n                return \"video/msvideo\";\r\n\r\n            case \"wmv\":\r\n                return \"video/x-ms-wmv\";\r\n\r\n            case \"mov\":\r\n                return \"video/quicktime\";\r\n\r\n            case \"zip\":\r\n                return \"application/zip\";\r\n\r\n            case \"tar\":\r\n                return \"application/x-tar\";\r\n\r\n            case \"swf\":\r\n                return \"application/x-shockwave-flash\";\r\n\r\n            default:\r\n                if (function_exists(\"mime_content_type\")) {\r\n                    $extension = mime_content_type($extension);\r\n                }\r\n\r\n                return \"unknown/\" . trim($extension, \".\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @param $filename\r\n     * @return bool|string\r\n     */\r\n    public function deleteFile($filename)\r\n    {\r\n        $container = $this-&gt;connect();\r\n\r\n        try {\r\n            $container-&gt;delete_object($filename);\r\n        } catch (\\Exception $e) {\r\n            return $e-&gt;getMessage();\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n</code></pre>\r\n\r\n<h2>Rackspace base class extended wrapper</h2>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\n\r\nnamespace Rackspace\\Component;\r\n// in a framework you will need to adjust the namespace here\r\n\r\n\r\nclass RackspaceFileHandler extends Rackspace\r\n{\r\n    protected $isLive;\r\n    protected $fileSizeLimit;\r\n    protected $fileImgMaxWidth;\r\n    protected $fileImgMaxHeight;\r\n    protected $exactSize;\r\n\r\n    public function __construct(\r\n        $isLive = true,\r\n        $fileSizeLimit = 5,\r\n        $fileImgMaxWidth = null,\r\n        $fileImgMaxHeight = null,\r\n        $exactSize = false\r\n    ) {\r\n        $this-&gt;isLive = $isLive;\r\n        $this-&gt;fileSizeLimit = $fileSizeLimit;\r\n        $this-&gt;fileImgMaxWidth = $fileImgMaxWidth;\r\n        $this-&gt;fileImgMaxHeight = $fileImgMaxHeight;\r\n        $this-&gt;exactSize = $exactSize;\r\n    }\r\n\r\n    public function uploadToRackspaceImage($fileKey, $fileDirectory, $filename, $fileIndex = null)\r\n    {\r\n        $cloudFileKey = $this-&gt;createCloudFileKey($fileKey, $fileDirectory, $filename, $fileIndex);\r\n\r\n        if ($cloudFileKey !== null) {\r\n            $resultData = $this-&gt;uploadImageWithCloudKey($fileKey, $cloudFileKey, $fileIndex);\r\n\r\n            if ($resultData[\'success\'] === true) {\r\n                $resultData[\'cloudFileKey\'] = $cloudFileKey;\r\n            }\r\n            return $resultData;\r\n        }\r\n    }\r\n\r\n\r\n    public function deleteFileFromRackspace($cloudFileKey)\r\n    {\r\n        if (!empty($cloudFileKey)) {\r\n            return $this-&gt;deleteFile($cloudFileKey);\r\n        }\r\n        $result[\'error\'][] = \"File could not be deleted.\";\r\n    }\r\n\r\n    public function showFileFromRackspace($cloudFileKey)\r\n    {\r\n        if (!empty($cloudFileKey)) {\r\n            return $this-&gt;findFileByName($cloudFileKey);\r\n        } else {\r\n            $result[\'error\'][] = \"Image could not be displayed.\";\r\n        }\r\n    }\r\n\r\n    protected function createCloudFileKey($fileKey, $fileDirectory, $filename, $fileIndex = null)\r\n    {\r\n        if (!is_null($fileIndex)) {\r\n            $tmpName = $_FILES[$fileKey][\'tmp_name\'][$fileIndex];\r\n            $fileType = $_FILES[$fileKey][\'type\'][$fileIndex];\r\n        } else {\r\n            $tmpName = $_FILES[$fileKey][\'tmp_name\'];\r\n            $fileType = $_FILES[$fileKey][\'type\'];\r\n        }\r\n\r\n        if (empty($tmpName) === false) {\r\n            $fileMd5 = md5_file($tmpName);\r\n            $filename = preg_replace(\"/[^a-z0-9]/\", \'\', strtolower($filename));\r\n            $fileExt = end(explode(\'/\', $fileType));\r\n            return $fileDirectory . $fileMd5 . \'_\' . $filename . \'.\' . $fileExt;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected function uploadImageWithCloudKey($fileKey, $cloudFileKey, $fileIndex = null)\r\n    {\r\n        $result = array(\'success\' =&gt; false);\r\n\r\n        if ($fileIndex !== null) {\r\n            $fileName = $_FILES[$fileKey][\'name\'][$fileIndex];\r\n            $fileTmpName = $_FILES[$fileKey][\'tmp_name\'][$fileIndex];\r\n            $fileType = $_FILES[$fileKey][\'type\'][$fileIndex];\r\n            $fileSize = $_FILES[$fileKey][\'size\'][$fileIndex];\r\n            $fileError = $_FILES[$fileKey][\'error\'][$fileIndex];\r\n        } else {\r\n            $fileName = $_FILES[$fileKey][\'name\'];\r\n            $fileTmpName = $_FILES[$fileKey][\'tmp_name\'];\r\n            $fileType = $_FILES[$fileKey][\'type\'];\r\n            $fileSize = $_FILES[$fileKey][\'size\'];\r\n            $fileError = $_FILES[$fileKey][\'error\'];\r\n        }\r\n\r\n        if (empty($fileName)) {\r\n            return array(\'success\' =&gt; false);\r\n        }\r\n\r\n        try {\r\n            if ($fileSize / 1024 / 1024 &gt; $this-&gt;fileSizeLimit) {\r\n                $result[\'error\'][] = \"Image size exceeds \" . $this-&gt;fileSizeLimit . \" MB\";\r\n            }\r\n\r\n            if ($this-&gt;fileImgMaxWidth || $this-&gt;fileImgMaxHeight) {\r\n                $imageData = getimagesize($fileTmpName);\r\n                if (empty($imageData) === false) {\r\n                    $imageWidth = $imageData[0];\r\n                    $imageHeight = $imageData[1];\r\n\r\n                    if (!$this-&gt;exactSize) {\r\n                        if ($this-&gt;fileImgMaxWidth &amp;&amp; $imageWidth &gt; $this-&gt;fileImgMaxWidth) {\r\n                            $result[\'error\'][] = \"Image width exceeds max value of \" . $this-&gt;fileImgMaxWidth . \"px\";\r\n                        }\r\n                        if ($this-&gt;fileImgMaxHeight &amp;&amp; $imageHeight &gt; $this-&gt;fileImgMaxHeight) {\r\n                            $result[\'error\'][] = \"Image height exceeds \" . $this-&gt;fileImgMaxHeight . \" px\";\r\n                        }\r\n                    } else {\r\n                        if ($this-&gt;fileImgMaxWidth &amp;&amp; $imageWidth !== $this-&gt;fileImgMaxWidth) {\r\n                            $result[\'error\'][] = \"Image width must be \" . $this-&gt;fileImgMaxWidth . \"px\";\r\n                        }\r\n                        if ($this-&gt;fileImgMaxHeight &amp;&amp; $imageHeight !== $this-&gt;fileImgMaxHeight) {\r\n                            $result[\'error\'][] = \"Image height must be \" . $this-&gt;fileImgMaxHeight . \" px\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ($fileError &gt; 0) {\r\n                switch ($fileError) {\r\n                    case UPLOAD_ERR_INI_SIZE:\r\n                        $message = \"The uploaded file exceeds the upload_max_filesize directive in php.ini\";\r\n                        break;\r\n                    case UPLOAD_ERR_FORM_SIZE:\r\n                        $message = \"The uploaded file exceeds the MAX_FILE_SIZE directive that was specified in the HTML form\";\r\n                        break;\r\n                    case UPLOAD_ERR_PARTIAL:\r\n                        $message = \"The uploaded file was only partially uploaded\";\r\n                        break;\r\n                    case UPLOAD_ERR_NO_FILE:\r\n                        $message = \"No file was uploaded\";\r\n                        break;\r\n                    case UPLOAD_ERR_NO_TMP_DIR:\r\n                        $message = \"Missing a temporary folder\";\r\n                        break;\r\n                    case UPLOAD_ERR_CANT_WRITE:\r\n                        $message = \"Failed to write file to disk\";\r\n                        break;\r\n                    case UPLOAD_ERR_EXTENSION:\r\n                        $message = \"File upload stopped by extension\";\r\n                        break;\r\n\r\n                    default:\r\n                        $message = \"Unknown upload error\";\r\n                        break;\r\n                }\r\n                $result[\'error\'][] = \"Error(s) uploading file \'$fileName\':&lt;br&gt;$message&lt;br&gt;\";\r\n            }\r\n\r\n            if (count($result[\'error\']) &gt; 0) {\r\n                return $result;\r\n            }\r\n\r\n            if ($this-&gt;isLive === true) {\r\n                $isUploaded = $this-&gt;uploadFile($fileTmpName, $cloudFileKey);\r\n            } else {\r\n                $isUploaded = $this-&gt;uploadToLocal($fileKey, $cloudFileKey);\r\n            }\r\n\r\n            if (!$isUploaded) {\r\n                $result[\'error\'][] = \"Error uploading image to cloud.\";\r\n            } else {\r\n                $result[\'success\'] = true;\r\n            }\r\n        } catch (\\Exception $e) {\r\n            $result[\'error\'][] = \"Error uploading file to cloud.  See error log for details.\";\r\n            error_log($e);\r\n        }\r\n\r\n        return $result;\r\n    }\r\n\r\n    protected function uploadToLocal($fileKey, $cloudFileKey)\r\n    {\r\n        $uploadDir = __DIR__ . \'/../tests/uploads\';\r\n\r\n        if (!file_exists($uploadDir)) {\r\n            mkdir($uploadDir, 0755, true);\r\n        }\r\n\r\n        $fileDirectories = $uploadDir . \'/\' . dirname($cloudFileKey);\r\n\r\n        if (file_exists($fileDirectories) === false) {\r\n            mkdir($fileDirectories, 0755, true);\r\n        }\r\n\r\n        $uploadFilePath = $uploadDir . \'/\' . $cloudFileKey;\r\n\r\n        return move_uploaded_file($_FILES[$fileKey][\"tmp_name\"], $uploadFilePath);\r\n    }\r\n}\r\n</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '371' , '2017-03-22' , '2018-01-18' ); INSERT INTO tutorials VALUES('227' , 'Simple php annual - yearly - calendar' , 'simple_php_annual_-_yearly_-_calendar' , '3' , '20' , '1' , 'Simple yearly annual php calendar script' , '<p>Here is a simple annual yearly php calendar script. I got it from the internet (&nbsp;www.gaijin.at/en/scrphpcalj.php ) , then I updated it into a function and removing the layout part from tables to bootstrap 3. &nbsp;You can use the function in your controller then you echo $calendar in your view. I display the code twice once as a simple calendar and the second time I get values from my events in my database then insert it into an array then if it is there I have a a href link that click through to the event.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code>public function calendar()\r\n{    \r\n\r\n$month=date(\'n\');\r\n$year=date(\'Y\');\r\n$day=date(\'d\');\r\n$months=array(\'January\',\'February\',\'March\',\'April\',\'May\',\'June\',\'July\',\'August\',\'September\',\'October\',\'November\',\'December\');\r\n\r\n\r\n$calendar = \'&lt;span align=center style=\"font-family:Verdana; font-size:18pt; color:#ff9900;\"&gt;\'.$year.\'&lt;/span&gt;\';\r\n$calendar .= \'&lt;div class=\"row\"&gt;\';\r\n\r\nfor ($line=1; $line&lt;=3; $line++) {\r\n	$calendar .= \'&lt;div class=\"col-md-12\"&gt;&lt;div class=\"row\"&gt;\';\r\n	for ($column=1; $column&lt;=4; $column++) {\r\n		$this_month=($line-1)*4+$column;\r\n		$first=date(\'w\',mktime(0,0,0,$this_month,1,$year));\r\n		$total=date(\'t\',mktime(0,0,0,$this_month,1,$year));\r\n		if ($first==0) $first=7;\r\n		$calendar .= \'&lt;div class=\"col-md-3\"&gt;\';\r\n		$calendar .= \'&lt;table border=0 align=center style=\"font-size:8pt; font-family:Verdana\"&gt;\';\r\n		$calendar .=  \'&lt;th colspan=7 align=center style=\"font-size:12pt; font-family:Arial; color:#666699;\"&gt;\'.$months[$this_month-1].\'&lt;/th&gt;\';\r\n		$calendar .=  \'&lt;tr&gt;&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Mon&lt;/b&gt;&lt;/td&gt;&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Tue&lt;/b&gt;&lt;/td&gt;\';\r\n		$calendar .=  \'&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Wed&lt;/b&gt;&lt;/td&gt;&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Thu&lt;/b&gt;&lt;/td&gt;\';\r\n		$calendar .=  \'&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Fri&lt;/b&gt;&lt;/td&gt;&lt;td style=\"color:#0000cc\"&gt;&lt;b&gt;Sat&lt;/b&gt;&lt;/td&gt;\';\r\n		$calendar .=  \'&lt;td style=\"color:#cc0000\"&gt;&lt;b&gt;Sun&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;\';\r\n		$calendar .=  \'&lt;tr&gt;&lt;br&gt;\';\r\n		$i=1;\r\n		while ($i&lt;$first) {\r\n			$calendar .=  \'&lt;td&gt; &lt;/td&gt;\';\r\n			$i++;\r\n		}\r\n		$i=1;\r\n		while ($i&lt;=$total) {\r\n			$rest=($i+$first-1)%7;\r\n			if (($i==$day) &amp;&amp; ($this_month==$month)) {\r\n				$calendar .= \'&lt;td style=\"font-size:8pt; font-family:Verdana; background:#ff0000;\" align=center&gt;\';\r\n			} else {\r\n				$calendar .= \'&lt;td style=\"font-size:8pt; font-family:Verdana\" align=center&gt;\';\r\n			}\r\n	if (($i==$day) &amp;&amp; ($this_month==$month)) {      \r\n \r\n       	$calendar .= \'&lt;span style=\"color:#ffffff;\"&gt;\'.$i.\'&lt;/span&gt;\';\r\n\r\n			}	else if ($rest==6) {\r\n\r\n				$calendar .= \'&lt;span style=\"color:#0000cc\"&gt;\'.$i.\'&lt;/span&gt;\';\r\n      \r\n      }  else if ($rest==0) {\r\n      \r\n          $calendar .= \'&lt;span style=\"color:#cc0000\"&gt;\'.$i.\'&lt;/span&gt;\';\r\n          \r\n      } else {\r\n				$calendar .= $i;\r\n			}\r\n   \r\n			$calendar .= \"&lt;/td&gt;\\n\";\r\n			if ($rest==0) $calendar .= \"&lt;/tr&gt;\\n&lt;tr&gt;\\n\";\r\n			$i++;\r\n		}\r\n		$calendar .= \'&lt;/tr&gt;\';\r\n		$calendar .= \'&lt;/table&gt;\';\r\n		$calendar .= \'&lt;/div&gt;\';\r\n	}\r\n	$calendar .= \'&lt;/div&gt;&lt;/div&gt;\';\r\n}\r\n\r\n$calendar .= \'&lt;/div&gt;\';\r\n$this-&gt;set(\'calendar\' , $calendar );\r\n$this-&gt;set(\'calevents\' , $calevents );\r\n\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>The second part is where I am queried each day to see if there is an event for that day. I am sure there are much better ways to do this but I had a time constraint so did what I could in a short time.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n<code> public function calenar()\r\n    {\r\n    \r\n    if(is_null($this-&gt;Auth-&gt;user(\'id\'))){\r\n        $this-&gt;Flash-&gt;success(__(\'Please login to access this page.\'));\r\n        return $this-&gt;redirect([\'controller\' =&gt; \'users\', \'action\' =&gt; \'login\']);\r\n    } \r\n \r\n       \r\n            $this-&gt;loadModel(\'Posts\');\r\n            $events = $this-&gt;Posts-&gt;find(\'all\', [\r\n            \'fields\' =&gt; [\'Posts.slug\', \'Posts.startdate\', ],\r\n            \'conditions\' =&gt; [\'`Posts`.`contenttype_id` = 14 AND Posts.status_id = 1\']                        \r\n        ]);\r\n\r\n        $calevents = array();\r\n        foreach($events as $event){\r\n         $startdate = $event-&gt;startdate;\r\n         $newdate = $startdate-&gt;year.\'-\'.$startdate-&gt;month.\'-\'.$startdate-&gt;day;\r\n         $calevents[$newdate] = $newdate;\r\n        }\r\n        \r\n        \r\n        //return debug($calevents);\r\n\r\n$month=date(\'n\');\r\n$year=date(\'Y\');\r\n$day=date(\'d\');\r\n$months=array(\'January\',\'February\',\'March\',\'April\',\'May\',\'June\',\'July\',\'August\',\'September\',\'October\',\'November\',\'December\');\r\n\r\n\r\n$calendar = \'&lt;span align=center style=\"font-family:Verdana; font-size:18pt; color:#ff9900;\"&gt;\'.$year.\'&lt;/span&gt;\';\r\n$calendar .= \'&lt;BR&gt;&lt;span style=\"color:#0000cc;\"&gt;Events are Blue&lt;/span&gt;&lt;BR&gt;\';\r\n$calendar .= \'&lt;div class=\"row\"&gt;\';\r\n\r\nfor ($line=1; $line&lt;=3; $line++) {\r\n	$calendar .= \'&lt;div class=\"col-md-12\"&gt;&lt;div class=\"row\"&gt;\';\r\n	for ($column=1; $column&lt;=4; $column++) {\r\n		$this_month=($line-1)*4+$column;\r\n		$first=date(\'w\',mktime(0,0,0,$this_month,1,$year));\r\n		$total=date(\'t\',mktime(0,0,0,$this_month,1,$year));\r\n		if ($first==0) $first=7;\r\n		$calendar .= \'&lt;div class=\"col-md-3\"&gt;\';\r\n		$calendar .= \'&lt;table border=0 align=center style=\"font-size:8pt; font-family:Verdana;\"&gt;\';\r\n		$calendar .=  \'&lt;th colspan=7 align=center style=\"font-size:12pt; font-family:Arial; color:#666699;\"&gt;\'.$months[$this_month-1].\'&lt;/th&gt;\';\r\n		$calendar .=  \'&lt;tr&gt;&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Mon&lt;/b&gt;&lt;/td&gt;&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Tue&lt;/b&gt;&lt;/td&gt;\';\r\n		$calendar .=  \'&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Wed&lt;/b&gt;&lt;/td&gt;&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Thu&lt;/b&gt;&lt;/td&gt;\';\r\n		$calendar .=  \'&lt;td style=\"color:#666666\"&gt;&lt;b&gt;Fri&lt;/b&gt;&lt;/td&gt;&lt;td style=\"color:#0000cc\"&gt;&lt;b&gt;Sat&lt;/b&gt;&lt;/td&gt;\';\r\n		$calendar .=  \'&lt;td style=\"color:#cc0000\"&gt;&lt;b&gt;Sun&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;\';\r\n		$calendar .=  \'&lt;tr&gt;&lt;br&gt;\';\r\n		$i=1;\r\n		while ($i&lt;$first) {\r\n			$calendar .=  \'&lt;td&gt; &lt;/td&gt;\';\r\n			$i++;\r\n		}\r\n		$i=1;\r\n		while ($i&lt;=$total) {\r\n			$rest=($i+$first-1)%7;\r\n      \r\n      $dayid = $year.\'-\'.$this_month.\'-\'.$i;\r\n            \r\n			if (($i==$day) &amp;&amp; ($this_month==$month)) {\r\n      \r\n      if (in_array($dayid, $calevents)) {    \r\n				$calendar .= \'&lt;td style=\"font-size:8pt; font-family:Verdana; background:#0000cc;\" align=center&gt;\';\r\n      } else {\r\n				$calendar .= \'&lt;td style=\"font-size:8pt; font-family:Verdana; background:#ff0000;\" align=center&gt;\';\r\n      }\r\n      \r\n\r\n			} else {\r\n      \r\n      if (in_array($dayid, $calevents)) {    \r\n				$calendar .= \'&lt;td style=\"font-size:8pt; font-family:Verdana; background:#0000cc;\" align=center&gt;\';\r\n      } else {\r\n				$calendar .= \'&lt;td style=\"font-size:8pt; font-family:Verdana\" align=center&gt;\';\r\n      }\r\n      \r\n\r\n			}\r\n      \r\n			if (($i==$day) &amp;&amp; ($this_month==$month)) {\r\n      \r\n      \r\n      if (in_array($dayid, $calevents)) {    \r\n        $calendar .= \'&lt;a href=\"/events?date=\'.$dayid.\'\" style=\"color:#fff;\"&gt;\'.$i.\'&lt;/a&gt;\';\r\n      } else {\r\n       	$calendar .= \'&lt;span style=\"color:#fff;\"&gt;\'.$i.\'&lt;/span&gt;\';\r\n      }\r\n\r\n			}	else if ($rest==6) {\r\n      \r\n      if (in_array($dayid, $calevents)) {    \r\n        $calendar .= \'&lt;a href=\"/events?date=\'.$dayid.\'\" style=\"color:#fff;\"&gt;\'.$i.\'&lt;/a&gt;\';\r\n      } else {\r\n				$calendar .= \'&lt;span style=\"color:#0000cc\"&gt;\'.$i.\'&lt;/span&gt;\';\r\n      }\r\n                      \r\n\r\n			} else if ($rest==0) {\r\n      \r\n\r\n      if (in_array($dayid, $calevents)) {    \r\n        $calendar .= \'&lt;a href=\"/events?date=\'.$dayid.\'\" style=\"color:#fff;\"&gt;\'.$i.\'&lt;/a&gt;\';\r\n      } else {\r\n				$calendar .= \'&lt;span style=\"color:#cc0000\"&gt;\'.$i.\'&lt;/span&gt;\';\r\n      }\r\n      \r\n\r\n			} else {\r\n      \r\n        if (in_array($dayid, $calevents)) {    \r\n        $calendar .= \'&lt;a href=\"/events?date=\'.$dayid.\'\" style=\"color:#fff;\"&gt;\'.$i.\'&lt;/a&gt;\';\r\n      } else {\r\n        $calendar .= $i;\r\n      }\r\n\r\n			}\r\n   \r\n			$calendar .= \"&lt;/td&gt;\\n\";\r\n			if ($rest==0) $calendar .= \"&lt;/tr&gt;\\n&lt;tr&gt;\\n\";\r\n			$i++;\r\n		}\r\n		$calendar .= \'&lt;/tr&gt;\';\r\n		$calendar .= \'&lt;/table&gt;\';\r\n		$calendar .= \'&lt;/div&gt;\';\r\n	}\r\n	$calendar .= \'&lt;/div&gt;&lt;/div&gt;\';\r\n}\r\n\r\n$calendar .= \'&lt;/div&gt;\';\r\n\r\n$this-&gt;set(\'calendar\' , $calendar );\r\n\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '119' , '2017-03-21' , '2018-01-18' ); INSERT INTO tutorials VALUES('224' , 'Simple PHP pagination script ' , 'simple_php_pagination_script' , '3' , '20' , '1' , 'Simple php script that does pagination' , '<p>This is a simple php script which I used in a custom frame work basen on a old version of cakephp. I thought it might be good to keep as it is so simple but works so well.</p>\r\n\r\n<h2>In controller</h2>\r\n\r\n<pre>\r\n<code class=\"language-php\">// do a count query on mysql database\r\n// example: SELECT count(*) as Count FROM users WHERE is_active = 1 GROUP BY id\r\n// for example purposes I have simplified the queries, they might be in a model in a php frame work if you use one\r\n\r\nÂ  Â  Â  Â  $offset = 0;\r\nÂ  Â  Â  Â  $currentpage = $_GET[\'page\'];\r\nÂ  Â  Â  Â  if(!empty($currentpage)) {\r\nÂ  Â  Â  Â  Â  Â  if($currentpage &gt; 1) {\r\nÂ  Â  Â  Â  Â  Â  Â  Â  $offset = ($currentpage - 1) * 10;\r\nÂ  Â  Â  Â  Â  Â  }\r\nÂ  Â  Â  Â  }\r\n\r\nÂ  Â  Â  Â  $pages = $count / 10;\r\nÂ  Â  Â  Â  $pages = ceil($pages);\r\n\r\nÂ  Â  Â  Â  if($currentpage &gt; 3) { $startpage = $currentpage - 3; } else { Â $startpage = 1; }\r\nÂ  Â  Â  Â  if($currentpage &lt; ($pages - 3)) { $endpage = $currentpage + 2; } else { $endpage = $pages; }\r\n\r\n// if you are in a framework like cakephp, laravel etc you want to pass the values to your view\r\n// like so:\r\n\r\nÂ  Â  Â  Â  $this-&gt;set(\'startpage\', $startpage);\r\nÂ  Â  Â  Â  $this-&gt;set(\'endpage\', $endpage);\r\nÂ  Â  Â  Â  $this-&gt;set(\'currentpage\', $currentpage);\r\nÂ  Â  Â  Â  $this-&gt;set(\'count\', $count);\r\n\r\n\r\n// query mysql insert \'$offset\' into the query.\r\n// example: $query = \'SELECT * FROM users WHERE is_active = 1 GROUP BY id ORDER BY id LIMIT \'.$offset.\',10;</code></pre>\r\n\r\n<h2>In view</h2>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;style&gt;\r\nÂ  Â  .pagination {\r\nÂ  Â  Â  Â  display: inline-block;\r\nÂ  Â  Â  Â  padding-left: 0;\r\nÂ  Â  Â  Â  margin-top: 10px;\r\nÂ  Â  Â  Â  border-radius: 4px;\r\nÂ  Â  Â  Â  margin-bottom: 1px;\r\nÂ  Â  }\r\nÂ  Â  .pagination &gt; li {\r\nÂ  Â  Â  Â  display: inline;\r\nÂ  Â  }\r\nÂ  Â  .pagination &gt; li &gt; a, .pagination &gt; li &gt; span {\r\nÂ  Â  Â  Â  position: relative;\r\nÂ  Â  Â  Â  float: left;\r\nÂ  Â  Â  Â  padding: 6px 12px;\r\nÂ  Â  Â  Â  margin-left: -1px;\r\nÂ  Â  Â  Â  line-height: 1.42857143;\r\nÂ  Â  Â  Â  color: #428bca;\r\nÂ  Â  Â  Â  text-decoration: none;\r\nÂ  Â  Â  Â  background-color: #fff;\r\nÂ  Â  Â  Â  border: 1px solid #ddd;\r\nÂ  Â  }\r\nÂ  Â  .pagination &gt; .active &gt; a {\r\nÂ  Â  Â  Â  z-index: 2;\r\nÂ  Â  Â  Â  color: #fff;\r\nÂ  Â  Â  Â  cursor: default;\r\nÂ  Â  Â  Â  background-color: #00214E;\r\nÂ  Â  Â  Â  border-color: #00214E;\r\nÂ  Â  }\r\n&lt;/style&gt;\r\n\r\n&lt;div class=\'pull-left\'&gt;\r\n&lt;?php if($count &gt; 10){ ?&gt;\r\n&lt;ul class=\"pagination\"&gt;\r\n&lt;li&gt;&lt;a href=\"/cwsinsurance/imagemanager/\'\"&gt;First&lt;/a&gt;&lt;/li&gt;\r\n&lt;?php\r\nÂ  Â  for ($i = $startpage; $i &lt;= $endpage; $i++) {\r\n\r\nÂ  Â  Â  Â  echo \'&lt;li class=\';\r\nÂ  Â  Â  Â  if( $currentpage == $i){ echo \' \"active\" \'; }\r\nÂ  Â  Â  Â  echo \'&gt;&lt;a href=\"/cwsinsurance/imagemanager/?page=\'.$i.\'\"&gt;\'.$i.\'&lt;/a&gt;&lt;/li&gt;\';\r\nÂ  Â  }\r\n?&gt;\r\n&lt;li&gt;&lt;a href=\"/cwsinsurance/imagemanager/?page=&lt;?= $pages ?&gt;\"&gt;Last&lt;/a&gt;&lt;/li&gt;\r\n&lt;/ul&gt;\r\n&lt;?php } ?&gt;\r\n&lt;/div&gt;\r\nÂ  &lt;div class=\'pull-right\'&gt;\r\nTotal gadgets: Â &lt;?= $count ?&gt;\r\n&lt;/div&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '177' , '2017-03-17' , '2018-01-18' ); INSERT INTO tutorials VALUES('231' , 'Bootstrap modal boxes with Jquery Ajax -  examples' , 'bootstrap_modal_boxes_with_jquery_ajax_-_examples' , '11' , '20' , '1' , 'examples of bootstrap modal boxes powered by ajax and jquery' , '<h2>Modal boxes</h2>\r\n\r\n<p>As far as modal boxes are concerned - they have taken website by storm and rightly so, they make sites more user friendly with the advantage that they look good and that they help the UI interaction and usability. They keep the user on the main page while performing actions related to it.</p>\r\n\r\n<p><ins>There are 3 types of modal boxes:</ins></p>\r\n\r\n<ul>\r\n	<li>Modal boxes that has static <strong>HTML</strong> in it.</li>\r\n	<li>Modal boxes that generate information that are passed to it via <strong>JQUERY</strong></li>\r\n	<li>And modal boxes that interacts with a programming language like PHP that operate via <strong>AJAX </strong>and display information from the database on it.</li>\r\n</ul>\r\n\r\n<p>The HTML modal box is easy, you just hide it and display it when the box is activated via a link. All the modal boxes we are displaying here are in conjunction with <strong>Bootstrap 3,&nbsp; </strong>bootstrap 3 is the easiest and way to integrate modal boxes into your site. If you don&#39;t want to use the whole bootstrap style sheet - the bootstrap site has the option to just download the modal aspect and not the whole stylesheet.<br />\r\n<br />\r\nSo first we are going to deal with <strong>JQUERY modal boxes</strong></p>\r\n\r\n<h2>JQuery Modal box</h2>\r\n\r\n<p>HERE is the Jquery modal boxes: We have to &#39;uploadimage&#39; and &#39;deleteimage&#39; - we are going to have a list of users, each user might or might not have an image connected to it. Our &#39;user list page&#39; can be generated by a PHP or in a Framework like Symfony, Cakephp, Laravel etc. On our &#39;user list page&#39; can either just paste in our modal boxes our use PHP to include them. We are including them, have a look at our &#39;user list page&#39;</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;h1&gt;Users list&lt;/h1&gt;\r\n    &lt;div data-table-filter class=\"pull-right\"&gt;\r\n        &lt;input class=\"form-control\" type=\"text\" placeholder=\"Filter results here\"&gt;\r\n    &lt;/div&gt;\r\n    &lt;br&gt;&lt;br&gt;\r\n&lt;table class=\"table table-bordered table-paginated table-sortable table-filterable\"&gt;\r\n    &lt;thead&gt;\r\n        &lt;th&gt;Name&lt;/th&gt;\r\n        &lt;th&gt; &lt;/th&gt;\r\n    &lt;/thead&gt;\r\n    &lt;tbody&gt;\r\n&lt;?php if(!empty($users)) { ?&gt;\r\n       &lt;?php foreach($users as $user) { ?&gt;\r\n    &lt;tr&gt;\r\n        &lt;td&gt;&lt;?php echo $user-&gt;name; ?&gt;&lt;/td&gt;\r\n        &lt;td&gt;\r\n            &lt;?php if(!empty($user-&gt;image)) { ?&gt;\r\n\r\n                &lt;a\r\n                        href=\"#deleteimage\"\r\n                        role=\"button\"\r\n                        class=\"btn btn-danger pull-right\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#deleteimage\"\r\n                        data-id=\"&lt;?php echo $user-&gt;id; ?&gt;\"\r\n                &gt;\r\n                    &lt;i class=\"icon-trash\"&gt;&lt;/i&gt;\r\n                &lt;/a&gt;\r\n\r\n                &lt;a\r\n                        href=\"#viewimage\"\r\n                        role=\"button\"\r\n                        class=\"btn btn-success pull-right viewimg\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#viewimage\"\r\n                        data-id=\"&lt;?php echo $user-&gt;id; ?&gt;\"\r\n                &gt;\r\n                    &lt;i class=\"icon-eye-open\"&gt;&lt;/i&gt;\r\n                &lt;/a&gt;\r\n\r\n          &lt;?php } else { ?&gt;\r\n                &lt;a\r\n                        href=\"#uploadimage\"\r\n                        role=\"button\"\r\n                        class=\"btn btn-primary pull-right\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#uploadimage\"\r\n                        data-id=\"&lt;?php echo $user-&gt;id; ?&gt;\"\r\n                &gt;\r\n                    &lt;i class=\"icon-upload\"&gt;&lt;/i&gt;\r\n                &lt;/a&gt;\r\n          &lt;?php } ?&gt;\r\n\r\n        &lt;/td&gt;\r\n    &lt;/tr&gt;\r\n?php } ?&gt;\r\n?php } ?&gt;\r\n    &lt;/tbody&gt;\r\n&lt;/table&gt;\r\n&lt;?php include(\'deleteimage_modal.php\'); ?&gt;\r\n&lt;?php include(\'viewimage_modal.php\'); ?&gt;\r\n&lt;?php include(\'uploadimage_modal.php\'); ?&gt;</code></pre>\r\n\r\n<p>Now have a look at the two files we included, which feeds information to it via <strong>JQUERY</strong>, ( <span>obviously</span> you need to include or link to jquery somewhere on your page )</p>\r\n\r\n<h2>deleteimage_modal page</h2>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;div class=\"modal fade\" id=\"deleteimage\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"&gt;\r\n    &lt;div class=\"modal-dialog\" role=\"document\"&gt;\r\n        &lt;div class=\"modal-content\"&gt;\r\n            &lt;div class=\"modal-header\"&gt;\r\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"&gt;&lt;span aria-hidden=\"true\"&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;\r\n                &lt;h4 class=\"modal-title\" id=\"myModalLabel\"&gt;Are you sure?&lt;/h4&gt;\r\n            &lt;/div&gt;\r\n                &lt;div class=\"modal-body\"&gt;\r\n                    &lt;p&gt;Are you sure that you wish to delete this image?&lt;/p&gt;\r\n                    &lt;p&gt;&lt;strong&gt;This action cannot be undone!&lt;/strong&gt;&lt;/p&gt;\r\n                &lt;/div&gt;\r\n            &lt;div class=\"modal-footer\"&gt;\r\n                &lt;button class=\"btn pull-left\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;Cancel&lt;/button&gt;\r\n                &lt;form method=\"POST\" action=\"/users/deleteimage\"  accept-charset=\"utf-8\"&gt;\r\n                    &lt;input type=\"hidden\" id=\"deletevalue\" value=\"\" name=\"id\" &gt;\r\n                    &lt;button type=\"submit\" class=\"btn btn-primary pull-right\"&gt;Yes, I am sure&lt;/button&gt;\r\n                &lt;/form&gt;\r\n            &lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n\r\n<p>in the &#39;userlist page&#39;, the &#39;#deleteimage&#39; will activate this modal box (if you have your links to bootstrap 3 in place)<br />\r\nThe same for the &#39;#uploadimage&#39; it will activate the &#39;uploadimage_modal.php&#39; window.</p>\r\n\r\n<p>Can you see this hidden field in the &#39;deleteimage_modal.php&#39; page?<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-php\"> &lt;input type=\"hidden\" id=\"deletevalue\" value=\"\" name=\"id\" &gt;</code></pre>\r\n\r\n<p>We are going to pass the id via JQuery to this field, then when you submit this page it will post to that function and perform the action - in this case delete the image. They way we do this is by including a javascript file. Like this</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">    $(\'#deleteimage\').on(\'show.bs.modal\', function(event) {\r\n        $(\"#deletevalue\").val($(event.relatedTarget).data(\'id\'));\r\n    });</code></pre>\r\n\r\n<p>The id is in the list in <span>data-id=</span><span>&quot;&lt;?php echo $user-&gt;id; ?&gt;&quot;&nbsp; then it gets send to the jquery file that inserts into the modal, which does the rest. </span></p>\r\n\r\n<p><span>The same for the viewimage modal</span><br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">    $(\'#uploadimage\').on(\'show.bs.modal\', function(event) {\r\n        console.log($(event.relatedTarget).data(\'id\'));\r\n        $(\"#uploadvalue\").val($(event.relatedTarget).data(\'id\'));\r\n});</code></pre>\r\n\r\n<h2>Uploadimage_modal page</h2>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;div class=\"modal fade\" id=\"uploadimage\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"&gt;\r\n    &lt;div class=\"modal-dialog\" role=\"document\"&gt;\r\n        &lt;div class=\"modal-content\"&gt;\r\n            &lt;div class=\"modal-header\"&gt;\r\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"&gt;&lt;span aria-hidden=\"true\"&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;\r\n                &lt;h4 class=\"modal-title\" id=\"myModalLabel\"&gt;Upload an Image&lt;/h4&gt;\r\n            &lt;/div&gt;\r\n            &lt;form method=\"POST\" action=\"/uploadimage\" enctype=\"multipart/form-data\" accept-charset=\"utf-8\"&gt;\r\n                &lt;div class=\"modal-body\"&gt;\r\n                    &lt;fieldset&gt;\r\n                        &lt;input type=\"file\" name=\"fileuploads\" id=\"fileuploads\"&gt;\r\n                        &lt;input type=\"hidden\" id=\"uploadvalue\" value=\"\" name=\"id\"&gt;\r\n                    &lt;/fieldset&gt;\r\n                &lt;/div&gt;\r\n                &lt;div class=\"modal-footer\"&gt;\r\n                    &lt;button type=\"submit\" class=\"btn btn-primary pull-right\"&gt;Submit&lt;/button&gt;\r\n                &lt;/div&gt;\r\n            &lt;/form&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>When you click submit on the deleteimage it will do the action on the deleteimage() function and the same for the uploadimage() function.</p>\r\n\r\n<p>Here is an example of how the controller with these functions in might look like, below once we have dealt the how AJAX work, I will post the whole javascript file aswell.</p>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;?php\r\n\r\nclass UserimagesController extends Controller\r\n{\r\n\r\n    public function imageManager()\r\n    {\r\n        $this-&gt;jsfiles[] = $this-&gt;link(\'/js/imagemanager.js\');\r\n        $this-&gt;stylesheets[] = \"/css/font-awesome.min.css\";\r\n\r\n       // $results =\r\n       // Query database here and get results to display in list\r\n        $this-&gt;set(\'results\', $results);\r\n\r\n    }\r\n\r\n\r\n         public function upLoadImage()\r\n    {\r\n        if ($_POST) {\r\n\r\n            // do some validation to see if you get the values you expect\r\n\r\n            if (empty($_POST[\'id\'])) {\r\n                $this-&gt;flash(\"You have to select an image, please try again\", \"error\");\r\n                $this-&gt;redirect(\'/imagemanager\');\r\n            } else {\r\n                $id = htmlspecialchars($_POST[\'id\']); // do some escaping to make your site secure\r\n            }\r\n\r\n            if (empty($_FILES[\'fileuploads\'][\'name\'])) {\r\n                $this-&gt;flash(\"You have to select an Image, please try again\", \"error\");\r\n                $this-&gt;redirect(\'uploadimage/\' . $id);\r\n            }\r\n\r\n            // here I will load the function that deals with image uploads, rename, resize etc\r\n\r\n        }\r\n\r\n    }\r\n\r\n        public function deleteImage($id)\r\n        {\r\n            if ($_POST) {\r\n\r\n                // do some validation to see if you get the values you expect\r\n\r\n                if (empty($_POST[\'id\'])) {\r\n                    $this-&gt;flash(\"You have to select an image, please try again\", \"error\");\r\n                    $this-&gt;redirect(\'/imagemanager\');\r\n                } else {\r\n                    $id = htmlspecialchars($_POST[\'id\']); // do some escaping to make your site secure\r\n                }\r\n\r\n                // access a function here that help you retrieve the image name based on the id\r\n\r\n                $image = $result[\'image_name\'];\r\n\r\n                if ($image === true) {\r\n                    // delete your image here and update the database function can be accessed here\r\n                    $this-&gt;flash(\"The image has been deleted\", \"success\");\r\n                    $this-&gt;redirect(\'/imagemanager\');\r\n                } else {\r\n                    $this-&gt;flash(\"Sorry, the image was not deleted\", \"error\");\r\n                    $this-&gt;redirect(\'/imagemanager\');\r\n                }\r\n\r\n                $this-&gt;layout = null;\r\n            }\r\n        }\r\n\r\n    public function displayImage($id)\r\n    {\r\n        if (!$this-&gt;isAjax()) {\r\n            return $this-&gt;requestBadRequest400();\r\n        }\r\n\r\n        if (empty($id)) {\r\n            $this-&gt;flash(\"Please select and image to view\", \"error\");\r\n            $this-&gt;redirect(\'imagemanager\');\r\n        }\r\n\r\n        $id = htmlspecialchars($id); // some escaping\r\n\r\n        // access a function here that help you retrieve the image name based on the id\r\n\r\n        $image = $result[\'image_name\'];\r\n\r\n        $values[\'id\'] = $result[\'id\'];\r\n        $values[\'name\'] = $result[\'user\'];\r\n        $values[\'image\'] = \'&lt;img src=\"\'.$image.\'\" alt=\"\'.$result[\'user\'].\' style=\"max-width:400px;\"&gt;\';\r\n\r\n        $this-&gt;sendJsonResponse($values);\r\n\r\n    }\r\n\r\n\r\n    private function requestBadRequest400()\r\n    {\r\n        header(\"HTTP/1.0 400 Bad Request\");\r\n        echo \'Bad request.\';\r\n        exit;\r\n    }\r\n\r\n    /**\r\n     * @param $data mixed\r\n     */\r\n    private function sendJsonResponse($data)\r\n    {\r\n        $json = json_encode($data);\r\n        header(\"HTTP/1.1 200 OK\");\r\n        header(\'Content-type: application/json\');\r\n        echo $json;\r\n        exit;\r\n    }\r\n\r\n}\r\n</code></pre>\r\n\r\n<p>The is all we need to have the JQUERY - Bootstrap modal boxes work</p>\r\n\r\n<h2>Ajax - bootstrap modal boxes</h2>\r\n\r\n<p>Let&#39;s start backwards with the ajax way of doing this, the end result is we want to hit the &#39;displayimage()&#39; function and then display that in our modal. As you see in the &#39;displayimage()&#39; function - we tell it it is 1. Ajax, 2. We output the values we get from the database then 3. Json_encode them.</p>\r\n\r\n<p>We are using the javascript below to display the values from our function to our&nbsp; modal box..</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">    $(\".viewimg\").on(\"click\",function () {\r\n        var dataID = $(this).data(\'id\');\r\n\r\n        $.ajax({\r\n            url: \'/users/viewImage/\' + dataID,\r\n            type:\'GET\',\r\n            dataType: \'json\',\r\n            context: this,\r\n            success: function(values)\r\n            {\r\n                $(\'.id\').html(values.id);\r\n                $(\'.user\').html(values.make);\r\n                $(\'.image\').html(values.image);\r\n                // log all values to the javascript console in your browser\r\n                console.log(values);\r\n                $(\".loader\").hide();\r\n            },\r\n            fail: function () {\r\n                modal.find(\'.modal-body\').append(\'&lt;div class=\"alert alert-error\"&gt;Oops! something went wrong&lt;/div&gt;\');\r\n                $(\".loader\").hide();\r\n            }\r\n        });\r\n    });</code></pre>\r\n\r\n<p>In the javascript we tie the values we get from the function in php to the javascript console then we&#39;ll display them, once they are loaded we tell the imageloader to stop displaying.</p>\r\n\r\n<h2>Viewimage_modal page</h2>\r\n\r\n<pre>\r\n<code class=\"language-php\">&lt;div class=\"modal fade\" id=\"viewimage\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"&gt;\r\n    &lt;div class=\"modal-dialog\" role=\"document\"&gt;\r\n        &lt;div class=\"modal-content\"&gt;\r\n            &lt;div class=\"modal-header\"&gt;\r\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"&gt;&lt;span aria-hidden=\"true\"&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;\r\n                &lt;h4 class=\"modal-title\" id=\"myModalLabel\"&gt;&lt;span class=\"user\"&gt; &lt;/span&gt;&lt;/h4&gt;\r\n            &lt;/div&gt;\r\n            &lt;div class=\"modal-body\" style=\"text-align:center;\"&gt;\r\n                &lt;div class=\"loader\" id=\"loader\"&gt;&lt;img src=\"/img/progress.gif\"/&gt;&lt;span&gt;Loading, please wait...&lt;/span&gt;&lt;/div&gt;\r\n                &lt;span class=\"image\"&gt; &lt;/span&gt;\r\n            &lt;/div&gt;\r\n            &lt;div class=\"modal-footer\"&gt;\r\n            &lt;/div&gt;\r\n        &lt;/div&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;</code></pre>\r\n\r\n<p>here are the complete javascript file for both the ajax and jquery modal boxes together..</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">$(document).ready(function() {\r\n\r\n    $(\".viewimg\").on(\"click\",function () {\r\n        var dataID = $(this).data(\'id\');\r\n\r\n        $.ajax({\r\n            url: \'/viewImage/\' + dataID,\r\n            type:\'GET\',\r\n            dataType: \'json\',\r\n            context: this,\r\n            success: function(values)\r\n            {\r\n                $(\'.id\').html(values.id);\r\n                $(\'.user\').html(values.make);\r\n                $(\'.image\').html(values.image);\r\n                // log all values to the javascript console in your browser\r\n                console.log(values);\r\n                $(\".loader\").hide();\r\n            },\r\n            fail: function () {\r\n                modal.find(\'.modal-body\').append(\'&lt;div class=\"alert alert-error\"&gt;Oops! something went wrong&lt;/div&gt;\');\r\n                $(\".loader\").hide();\r\n            }\r\n        });\r\n    });\r\n\r\n    $(\'#uploadimage\').on(\'show.bs.modal\', function(event) {\r\n        console.log($(event.relatedTarget).data(\'id\'));\r\n        $(\"#uploadvalue\").val($(event.relatedTarget).data(\'id\'));\r\n});\r\n\r\n    $(\'#deleteimage\').on(\'show.bs.modal\', function(event) {\r\n        $(\"#deletevalue\").val($(event.relatedTarget).data(\'id\'));\r\n    });\r\n\r\n});</code></pre>\r\n\r\n<BR><BR>\r\n' , '' , '1' , '410' , '2017-03-27' , '2018-01-18' ); INSERT INTO tutorials VALUES('233' , 'Jquery and Javascript Validation easy peasy' , 'jquery_and_javascript_validation_easy_peasy' , '11' , '20' , '1' , 'Jquery and javascript validation explained' , '<p>There are multiple ways to do validation:</p>\r\n\r\n<ul>\r\n	<li>Server side validationJquery is very robust but it depends often on the page reloading or submitting before you can see if an field validate or not</li>\r\n	<li>Client side you can validate with Jquery, Javaascript or Html5.</li>\r\n	<li>The advantage of doing jquery validation above Html 5 validation is that is cross browser and &#39;it just works&#39; which</li>\r\n</ul>\r\n\r\n<p>Jquery validation is easy peasy as you will see.</p>\r\n\r\n<p>First you need to include JQuery on your page plust the jQuery validation scripts. No need downloading them just reference them. Like so.</p>\r\n\r\n<pre>\r\n<code>&lt;script src=\"https://code.jquery.com/jquery-2.2.4.min.js\" integrity=\"sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\r\n &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.16.0/jquery.validate.min.js\"&gt;&lt;/script&gt;\r\n &lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.16.0/additional-methods.js\"&gt;&lt;/script&gt;</code></pre>\r\n\r\n<h2>JQuery Validate an image size and filetype</h2>\r\n\r\n<p>The form<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code> &lt;form method=\"POST\" action=\"/uploadimage\" id=\"loadimage\" enctype=\"multipart/form-data\" accept-charset=\"utf-8\"&gt;\r\n                &lt;div class=\"modal-body\"&gt;\r\n                    &lt;fieldset&gt;\r\n                        &lt;input type=\"file\" name=\"fileuploads\" id=\"fileuploads\"&gt;\r\n                        &lt;input type=\"hidden\" id=\"uploadvalue\" value=\"\" name=\"plu\"&gt;\r\n                    &lt;/fieldset&gt;\r\n                &lt;/div&gt;\r\n                &lt;div class=\"modal-footer\"&gt;\r\n                    &lt;small&gt;&lt;u&gt;Max size&lt;/u&gt;: 5mb, &lt;u&gt;File types:&lt;/u&gt; jpg, jpeg, jpe, png, gif, bmp, tiff&lt;/small&gt;\r\n                    &lt;button type=\"submit\" class=\"btn btn-primary pull-right\"&gt;Submit&lt;/button&gt;\r\n                &lt;/div&gt;\r\n            &lt;/form&gt;</code></pre>\r\n\r\n<p>the jquery<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">$(document).ready(function () {\r\n    \r\njQuery(function ($) {\r\n        \"use strict\";\r\n        $(\'#loadimage\').validate({  //&lt;&lt; the id of the form you are submitting\r\n            rules: {\r\n                fileuploads: { //&lt;&lt; the name of the file you are submitting\r\n                    required: true,\r\n                    extension: \"jpg,jpeg,jpe,png,gif,bmp,tiff\",\r\n                    filesize: 5,\r\n                }\r\n            },\r\n        });\r\n    });\r\n\r\n});</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>validating other form ffields..<br />\r\nthe form<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>&lt;form id=\"myform\"&gt;\r\n    &lt;input type=\"text\" name=\"field1\" /&gt;\r\n    &lt;input type=\"text\" name=\"field2\" /&gt;\r\n    &lt;input type=\"submit\" /&gt;\r\n&lt;/form&gt;</code></pre>\r\n\r\n<p>the jquery<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code>$(document).ready(function () {\r\n\r\n    $(\'#myform\').validate({ // initialize the plugin\r\n        rules: {\r\n            field1: {\r\n                required: true,\r\n                email: true\r\n            },\r\n            field2: {\r\n                required: true,\r\n                minlength: 5\r\n            }\r\n        }\r\n    });\r\n\r\n});</code></pre>\r\n\r\n<p>other jquery methods available for validating</p>\r\n\r\n<p>maxWords<br />\r\nminWords<br />\r\nrangeWords<br />\r\nletterswithbasicpunc<br />\r\nalphanumeric<br />\r\nlettersonly<br />\r\nnowhitespace<br />\r\nziprange<br />\r\nzipcodeUS<br />\r\ninteger<br />\r\nvinUS<br />\r\ndateITA<br />\r\ndateNL<br />\r\ntime<br />\r\ntime12h<br />\r\nphoneUS<br />\r\nphoneUK<br />\r\nmobileUK<br />\r\nphonesUK<br />\r\npostcodeUK<br />\r\nstrippedminlength<br />\r\nemail2 (optional TLD)<br />\r\nurl2 (optional TLD)<br />\r\ncreditcardtypes<br />\r\nipv4<br />\r\nipv6<br />\r\npattern<br />\r\nrequire_from_group<br />\r\nskip_or_fill_minimum<br />\r\naccept<br />\r\nextension</p>\r\n\r\n<h2>Javascript validation</h2>\r\n\r\n<p>Javascript validation is more work but lighter..<br />\r\n&nbsp;</p>\r\n\r\n<pre>\r\n<code class=\"language-javascript\">$(document).ready(function(){\r\n\r\n$(\'.submit\').click(function(){\r\n    validateForm();   \r\n});\r\n\r\nfunction validateForm(){\r\n\r\n\r\n    var nameReg = /^[A-Za-z]+$/;\r\n    var numberReg =  /^[0-9]+$/;\r\n    var emailReg = /^([\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4})?$/;\r\n\r\n    var names = $(\'#nameInput\').val();\r\n    var company = $(\'#companyInput\').val();\r\n    var email = $(\'#emailInput\').val();\r\n    var telephone = $(\'#telInput\').val();\r\n    var message = $(\'#messageInput\').val();\r\n\r\n    var inputVal = new Array(names, company, email, telephone, message);\r\n\r\n    var inputMessage = new Array(\"name\", \"company\", \"email address\", \"telephone number\", \"message\");\r\n\r\n     $(\'.error\').hide();\r\n\r\n        if(inputVal[0] == \"\"){\r\n            $(\'#nameLabel\').after(\'&lt;span class=\"error\"&gt; Please enter your \' + inputMessage[0] + \'&lt;/span&gt;\');\r\n        }\r\n        else if(!nameReg.test(names)){\r\n            $(\'#nameLabel\').after(\'&lt;span class=\"error\"&gt; Letters only&lt;/span&gt;\');\r\n        }\r\n\r\n        if(inputVal[1] == \"\"){\r\n            $(\'#companyLabel\').after(\'&lt;span class=\"error\"&gt; Please enter your \' + inputMessage[1] + \'&lt;/span&gt;\');\r\n        }\r\n\r\n        if(inputVal[2] == \"\"){\r\n            $(\'#emailLabel\').after(\'&lt;span class=\"error\"&gt; Please enter your \' + inputMessage[2] + \'&lt;/span&gt;\');\r\n        }\r\n        else if(!emailReg.test(email)){\r\n            $(\'#emailLabel\').after(\'&lt;span class=\"error\"&gt; Please enter a valid email address&lt;/span&gt;\');\r\n        }\r\n\r\n        if(inputVal[3] == \"\"){\r\n            $(\'#telephoneLabel\').after(\'&lt;span class=\"error\"&gt; Please enter your \' + inputMessage[3] + \'&lt;/span&gt;\');\r\n        }\r\n        else if(!numberReg.test(telephone)){\r\n            $(\'#telephoneLabel\').after(\'&lt;span class=\"error\"&gt; Numbers only&lt;/span&gt;\');\r\n        }\r\n\r\n        if(inputVal[4] == \"\"){\r\n            $(\'#messageLabel\').after(\'&lt;span class=\"error\"&gt; Please enter your \' + inputMessage[4] + \'&lt;/span&gt;\');\r\n        }       \r\n}   \r\n\r\n});</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '1' , '630' , '2017-03-28' , '2018-01-18' ); INSERT INTO tutorials VALUES('234' , 'SQL /  MySql Table joins explained, Inner, outer, left, right table joins' , '' , '12' , '20' , '1' , 'Sql or mysql table joins explained. Explain inner joins, outer joins, right and left joins' , '<p>There are different types of joins available in SQL:</p>\r\n\r\n<p><strong>INNER JOIN</strong>: returns rows when there is a match in both tables.</p>\r\n\r\n<p><strong>LEFT JOIN</strong>: returns all rows from the left table, even if there are no matches in the right table.</p>\r\n\r\n<p><strong>RIGHT JOIN</strong>: returns all rows from the right table, even if there are no matches in the left table.</p>\r\n\r\n<p><strong>FULL JOIN</strong>: returns rows when there is a match in one of the tables.</p>\r\n\r\n<p><strong>SELF JOIN</strong>: is used to join a table to itself as if the table were two tables, temporarily renaming at least one table in the SQL statement.</p>\r\n\r\n<p><strong>CARTESIAN JOIN</strong>: returns the Cartesian product of the sets of records from the two or more joined tables.</p>\r\n\r\n<p><img alt=\"mysql sql table joins, inner, outer, left, right explained\" src=\"http://www.skillbooker.com//img/tutorials/sql-mysql//1492944522ty5.png\" style=\"float:left; width:600px; padding:10px;\" /></p>\r\n\r\n<p>WE can take each first four joins in Details :</p>\r\n\r\n<p>We have two tables with the following values.</p>\r\n\r\n<blockquote>\r\n<p>TableA</p>\r\n</blockquote>\r\n\r\n<pre>\r\n<code>id  firstName                  lastName\r\n.......................................\r\n1   arun                        prasanth                 \r\n2   ann                         antony                   \r\n3   sruthy                      abc                      \r\n6   new                         abc                                           </code></pre>\r\n\r\n<blockquote>\r\n<p>TableB</p>\r\n</blockquote>\r\n\r\n<pre>\r\n<code>id2 age Place\r\n................\r\n1   24  kerala\r\n2   24  usa\r\n3   25  ekm\r\n5   24  chennai</code></pre>\r\n\r\n<p>....................................................................</p>\r\n\r\n<p><strong>INNER JOIN</strong></p>\r\n\r\n<p><strong>Note</strong>&nbsp;:it gives the intersection of the two tables, i.e. rows they have common in TableA and TableB</p>\r\n\r\n<p>Syntax</p>\r\n\r\n<pre>\r\n<code>SELECT table1.column1, table2.column2...\r\nFROM table1\r\nINNER JOIN table2\r\nON table1.common_field = table2.common_field;</code></pre>\r\n\r\n<p>Apply it in our sample table :</p>\r\n\r\n<pre>\r\n<code>SELECT TableA.firstName,TableA.lastName,TableB.age,TableB.Place\r\nFROM TableA\r\nINNER JOIN TableB\r\nON TableA.id = TableB.id2;</code></pre>\r\n\r\n<p>Result Will Be</p>\r\n\r\n<pre>\r\n<code>firstName       lastName       age  Place\r\n..............................................\r\narun            prasanth        24  kerala\r\nann             antony          24  usa\r\nsruthy          abc             25  ekm</code></pre>\r\n\r\n<p><strong>LEFT JOIN</strong></p>\r\n\r\n<p><strong>Note</strong>&nbsp;: will give all selected rows in TableA, plus any common selected rows in TableB.</p>\r\n\r\n<p>Syntax</p>\r\n\r\n<pre>\r\n<code>SELECT table1.column1, table2.column2...\r\nFROM table1\r\nLEFT JOIN table2\r\nON table1.common_field = table2.common_field;</code></pre>\r\n\r\n<p>Apply it in our sample table :</p>\r\n\r\n<pre>\r\n<code>SELECT TableA.firstName,TableA.lastName,TableB.age,TableB.Place\r\nFROM TableA\r\nLEFT JOIN TableB\r\nON TableA.id = TableB.id2;</code></pre>\r\n\r\n<p>Result</p>\r\n\r\n<pre>\r\n<code>firstName                   lastName                    age   Place\r\n...............................................................................\r\narun                        prasanth                    24    kerala\r\nann                         antony                      24    usa\r\nsruthy                      abc                         25    ekm\r\nnew                         abc                         NULL  NULL</code></pre>\r\n\r\n<p><strong>RIGHT JOIN</strong></p>\r\n\r\n<p><strong>Note</strong>&nbsp;: will give all selected rows in TableB, plus any common selected rows in TableA.</p>\r\n\r\n<p>Syntax</p>\r\n\r\n<pre>\r\n<code>SELECT table1.column1, table2.column2...\r\nFROM table1\r\nRIGHT JOIN table2\r\nON table1.common_field = table2.common_field;</code></pre>\r\n\r\n<p>Apply it in our sample table :</p>\r\n\r\n<pre>\r\n<code>SELECT TableA.firstName,TableA.lastName,TableB.age,TableB.Place\r\nFROM TableA\r\nRIGHT JOIN TableB\r\nON TableA.id = TableB.id2;</code></pre>\r\n\r\n<p>Result</p>\r\n\r\n<pre>\r\n<code>firstName                   lastName                    age     Place\r\n...............................................................................\r\narun                        prasanth                    24     kerala\r\nann                         antony                      24     usa\r\nsruthy                      abc                         25     ekm\r\nNULL                        NULL                        24     chennai</code></pre>\r\n\r\n<p><strong>FULL JOIN</strong></p>\r\n\r\n<p><strong>Note</strong>&nbsp;: It is same as union operation, it will return all selected values from both tables.</p>\r\n\r\n<p>Syntax</p>\r\n\r\n<pre>\r\n<code>SELECT table1.column1, table2.column2...\r\nFROM table1\r\nFULL JOIN table2\r\nON table1.common_field = table2.common_field;</code></pre>\r\n\r\n<p>Apply it in our sample table :</p>\r\n\r\n<pre>\r\n<code>SELECT TableA.firstName,TableA.lastName,TableB.age,TableB.Place\r\nFROM TableA\r\nFULL JOIN TableB\r\nON TableA.id = TableB.id2;</code></pre>\r\n\r\n<p>Result</p>\r\n\r\n<pre>\r\n<code>firstName                   lastName                    age    Place\r\n...............................................................................\r\narun                        prasanth                    24    kerala\r\nann                         antony                      24    usa\r\nsruthy                      abc                         25    ekm\r\nnew                         abc                         NULL  NULL\r\nNULL                        NULL                        24    chennai</code></pre>\r\n\r\n<blockquote>\r\n<p>Interesting Fact</p>\r\n</blockquote>\r\n\r\n<p>For INNER joins the order doesn&#39;t matter</p>\r\n\r\n<p>For (LEFT, RIGHT or FULL) OUTER joins,the order matter</p>\r\n' , '' , '1' , '783' , '2017-04-07' , '2018-01-19' ); INSERT INTO tutorials VALUES('266' , 'Single click login into Google use api with in PHP / CakePHP ' , '' , '1' , '20' , '1' , 'Single click login into Google use api with in PHP / CakePHP ' , '<h2>Google Login API</h2>\r\n\r\n<p>We are going to login to our Cakephp 2 website (which does not use composer) with a Google api. We are going to update our Social user&#39;s table and our normal users table. Basically if a user exist we are going to update other wise add the user.</p>\r\n\r\n<h3>Our first table is:</h3>\r\n\r\n<pre>\r\n<code>CREATE TABLE IF NOT EXISTS `user_socials` (\r\n  `id` int(11) NOT NULL,\r\n  `oauth_provider` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `oauth_uid` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `link` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `picture` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `created` datetime NOT NULL,\r\n  `modified` datetime NOT NULL\r\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;</code></pre>\r\n\r\n<h3>Our users table is:</h3>\r\n\r\n<pre>\r\n<code>CREATE TABLE IF NOT EXISTS `users` (\r\n  `id` int(11) NOT NULL,\r\n  `user_role_id` int(1) NOT NULL,\r\n  `firstname` varchar(100) NOT NULL,\r\n  `lastname` varchar(100) NOT NULL,\r\n  `google_id` varchar(255) DEFAULT NULL,\r\n  `facebook_id` varchar(255) DEFAULT NULL,\r\n  `linkedin_id` varchar(255) DEFAULT NULL,\r\n  `email` varchar(100) NOT NULL,\r\n  `password` varchar(100) NOT NULL,\r\n  `created` date NOT NULL,\r\n  `modified` date NOT NULL\r\n) ENGINE=MyISAM AUTO_INCREMENT=1334 DEFAULT CHARSET=latin1;</code></pre>\r\n\r\n<p>we have optained the google api files at <a href=\"https://github.com/Skillbooker/google_oauth\">https://github.com/Skillbooker/google_oauth</a></p>\r\n\r\n<h3>The Google function</h3>\r\n\r\n<p>This google function has to go in your controller.</p>\r\n\r\n<pre>\r\n<code>public function google() {\r\n	\r\nif(!session_id()) {\r\n	session_start();\r\n}\r\n\r\n\r\ndefine(\"SITEURL\", \"http://www.skillbooker.com/\");    \r\ndefine(\"GOOGLE_KEY\", \"0000000000000000\");\r\n//your google key\r\ndefine(\"GOOGLE_SECRET\", \"000000000000000\");\r\n//your google secret key\r\ndefine(\"GOOGLE_REROUTE\", \"social/google\");\r\n	\r\nrequire_once(APP . \'Vendor\' . DS . \'googlelogin\' . DS . \'Google_Client.php\');\r\nrequire_once(APP . \'Vendor\' . DS . \'googlelogin\' . DS . \'contrib\' . DS . \'Google_Oauth2Service.php\');    \r\n\r\n######### edit details ##########\r\n$clientId = GOOGLE_KEY;\r\n$clientSecret = GOOGLE_SECRET;\r\n$redirectUrl = SITEURL.GOOGLE_REROUTE;\r\n\r\n\r\n$gClient = new Google_Client();\r\n$gClient-&gt;setApplicationName(\'Login to Skillbooker.com\');\r\n$gClient-&gt;setClientId($clientId);\r\n$gClient-&gt;setClientSecret($clientSecret);\r\n$gClient-&gt;setRedirectUri($redirectUrl);\r\n \r\n$google_oauthV2 = new Google_Oauth2Service($gClient);\r\n\r\nif(isset($_GET[\'code\'])){\r\n    $gClient-&gt;authenticate($_GET[\'code\']);\r\n    $_SESSION[\'token\'] = $gClient-&gt;getAccessToken();\r\n}\r\n\r\nif (isset($_SESSION[\'token\'])) {\r\n    $gClient-&gt;setAccessToken($_SESSION[\'token\']);\r\n}\r\n\r\nif ($gClient-&gt;getAccessToken()) {\r\n    //Get user profile data from google\r\n    $userProfile = $google_oauthV2-&gt;userinfo-&gt;get();\r\n	         \r\n			//$_SESSION[\'google_profile\'] = $userProfile;\r\n            \r\n			$social[\'oauth_provider\'] = \'google\'; \r\n			$social[\'oauth_uid\'] = $userProfile[\'id\'];        \r\n            $social[\'picture\']  = $userProfile[\'picture\'];\r\n            $social[\'link\']  = $userProfile[\'link\'];\r\n            \r\n            $user[\'lastname\'] = $userProfile[\'family_name\'];\r\n            $user[\'firstname\'] = $userProfile[\'given_name\'];\r\n            $user[\'username\']  = $userProfile[\'name\'];\r\n			$user[\'email\']  = $userProfile[\'email\'];\r\n			$user[\'user_role_id\']  = $role;\r\n\r\n            $email  = $userProfile[\'email\'];\r\n            \r\n            $this-&gt;socialcheck($social, $user, $email);\r\n	\r\n	\r\n	} else {\r\n	\r\n	$authUrl = $gClient-&gt;createAuthUrl();\r\n	header(\'Location: \' . $authUrl);\r\n	\r\n	}\r\n\r\n}</code></pre>\r\n\r\n<h3>now the function that updates our social users tables and users tables</h3>\r\n\r\n<p>this function will be used for our facebook, google, linkedin, twitter and all other one click social login systems</p>\r\n\r\n<pre>\r\n<code>function socialcheck($social, $user, $email) {\r\n	\r\n	$this-&gt;loadModel(\'UserSocial\');\r\n	$options = array(\'conditions\' =&gt; array(\'UserSocial.oauth_uid\' =&gt; $social[\'oauth_uid\']));\r\n	$findsocialuser = $this-&gt;UserSocial-&gt;find(\'first\',$options);\r\n	\r\n	if(!empty($findsocialuser)){\r\n	\r\n		$userdata[\'id\']	=	$findsocialuser[\'UserSocial\'][\'id\'];\r\n		$userdata[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n		\r\n		$this-&gt;UserSocial-&gt;save($userdata,false);\r\n		$social_id = $findsocialuser[\'UserSocial\'][\'id\'];\r\n	\r\n	} else {\r\n		\r\n		$userdata = $social;	\r\n		$userdata[\'created\']	=	date(\"Y-m-d H:i:s\");\r\n		$userdata[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n		\r\n		$this-&gt;UserSocial-&gt;save($userdata,false);      \r\n\r\n	}\r\n    \r\n		$this-&gt;loadModel(\'User\');\r\n		\r\n		$options = array(\'conditions\' =&gt; array(\'User.email\' =&gt; $email));\r\n		$finduser = $this-&gt;User-&gt;find(\'first\',$options);\r\n		\r\n		if($social[\'oauth_provider\'] == \'google\') { $data[\'google_id\'] = $social[\'oauth_uid\']; }\r\n		if($social[\'oauth_provider\'] == \'facebook\') { $data[\'facebook_id\'] = $social[\'oauth_uid\']; }\r\n		if($social[\'oauth_provider\'] == \'linkedin\') { $data[\'linkedin_id\'] = $social[\'oauth_uid\']; }\r\n    \r\n	if(!empty($finduser)){\r\n		\r\n		$data[\'id\']	=	$finduser[\'User\'][\'id\'];\r\n		$data[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n	\r\n		$this-&gt;User-&gt;save($data,false);\r\n		\r\n	} else {\r\n			\r\n		$data  = $user;\r\n		// setting data to the user data that will contain the first names email addresses ect\r\n		\r\n		$data[\'password\']	=	AuthComponent::password($user[\'firstname\']);\r\n		// creating a password for the user in our database --&gt;this can be emailed to the user\r\n	\r\n		$this-&gt;User-&gt;save($data, false);\r\n	\r\n	}\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '0' , '1377' , '2017-05-12' , '2018-01-19' ); INSERT INTO tutorials VALUES('264' , 'Single click login into Facebook use api with in PHP / CakePHP ' , '' , '1' , '20' , '1' , 'Single click login into Facebook use api with in PHP / CakePHP ' , '<p>We are going to login to our Cakephp 2 website (which does not use composer) with a Facebook api. We are going to update our Social user&#39;s table and our normal users table. Basically if a user exist we are going to update other wise add the user.</p>\r\n\r\n<h3>Our first table is:</h3>\r\n\r\n<pre>\r\n<code>CREATE TABLE IF NOT EXISTS `user_socials` (\r\nÂ  `id` int(11) NOT NULL,\r\nÂ  `oauth_provider` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\nÂ  `oauth_uid` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\nÂ  `link` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\nÂ  `picture` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\nÂ  `created` datetime NOT NULL,\r\nÂ  `modified` datetime NOT NULL\r\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;</code></pre>\r\n\r\n<h3>Our users table is:</h3>\r\n\r\n<pre>\r\n<code>CREATE TABLE IF NOT EXISTS `users` (\r\nÂ  `id` int(11) NOT NULL,\r\nÂ  `user_role_id` int(1) NOT NULL,\r\nÂ  `firstname` varchar(100) NOT NULL,\r\nÂ  `lastname` varchar(100) NOT NULL,\r\nÂ  `google_id` varchar(255) DEFAULT NULL,\r\nÂ  `facebook_id` varchar(255) DEFAULT NULL,\r\nÂ  `linkedin_id` varchar(255) DEFAULT NULL,\r\nÂ  `email` varchar(100) NOT NULL,\r\nÂ  `password` varchar(100) NOT NULL,\r\nÂ  `created` date NOT NULL,\r\nÂ  `modified` date NOT NULL\r\n) ENGINE=MyISAM AUTO_INCREMENT=1334 DEFAULT CHARSET=latin1;</code></pre>\r\n\r\n<p>we have optained the facbook api files at <a href=\"https://github.com/Skillbooker/facebook_oauth\">https://github.com/Skillbooker/facebook_oauth</a></p>\r\n\r\n<h3>The facebook function</h3>\r\n\r\n<p>This facebook function has to go in your controller.</p>\r\n\r\n<pre>\r\n<code>public function facebook() {\r\n\r\ndefine(\"SITEURL\", \"http://www.skillbooker.com/\");Â Â  Â \r\ndefine(\"FACEBOOK_KEY\", \"0000000000000000\");\r\n//your facebook key\r\ndefine(\"FACEBOOK_SECRET\", \"000000000000000\");\r\n//your facebook secret key\r\ndefine(\"FACEBOOK_REROUTE\", \"social/facebook\");\r\n\r\nÂ Â  Â \r\nÂ Â  Â if(!session_id()) {\r\nÂ  Â  Â Â  Â session_start();\r\nÂ Â  Â }\r\nÂ Â  Â \r\nÂ Â  Â require_once(APP . \'Vendor\' . DS . \'facebooker\' . DS . \'src\' . DS . \'Facebook\' . DS . \'autoload.php\');\r\n\r\nÂ  Â  $fb = new Facebook\\Facebook([\r\nÂ  Â  Â  Â  \'app_id\' =&gt; FACEBOOK_KEY,\r\nÂ  Â  Â  Â  \'app_secret\' =&gt; FACEBOOK_SECRET,\r\nÂ  Â  Â  Â  \'default_graph_version\' =&gt; \'v2.4\',\r\nÂ  Â  Â  ]);\r\n\r\nÂ  Â  $helper = $fb-&gt;getRedirectLoginHelper();\r\n\r\nÂ  Â  $permissions = [\'email\']; // optional\r\nÂ  Â  Â  Â Â \r\nÂ  Â  try {\r\nÂ  Â  Â  Â  if (isset($_SESSION[\'token\'])) {\r\nÂ  Â  Â  Â  Â  Â  $accessToken = $_SESSION[\'token\'];\r\nÂ  Â  Â  Â  } else {\r\nÂ  Â  Â  Â  Â  Â  $accessToken = $helper-&gt;getAccessToken();\r\nÂ  Â  Â  Â  }\r\nÂ  Â  } catch(Facebook\\Exceptions\\FacebookResponseException $e) {\r\nÂ  Â  Â  Â  // When Graph returns an error\r\nÂ Â  Â Â Â  Â $error = \'Graph returned an error: \' . $e-&gt;getMessage();\r\nÂ Â  Â Â Â  Â $this-&gt;Session-&gt;setFlash($error,\'error\');\r\nÂ  Â  Â  Â  exit;\r\nÂ  Â  } catch(Facebook\\Exceptions\\FacebookSDKException $e) {\r\nÂ  Â  Â  Â  // When validation fails or other local issues\r\nÂ  Â  Â  Â  $error = \'Facebook SDK returned an error: \' . $e-&gt;getMessage();\r\nÂ Â  Â Â Â  Â $this-&gt;Session-&gt;setFlash($error,\'error\');\r\nÂ  Â  Â  Â  exit;\r\nÂ  Â  Â }\r\nÂ Â  Â Â \r\n\r\nÂ  Â  if (isset($accessToken)) {\r\nÂ Â  Â Â Â  Â \r\nÂ  Â  Â  Â  if (isset($_SESSION[\'token\'])) {\r\nÂ  Â  Â  Â  Â  Â  $fb-&gt;setDefaultAccessToken($_SESSION[\'token\']);\r\nÂ  Â  Â  Â  } else {\r\nÂ  Â  Â  Â  Â  Â  // getting short-lived access token\r\nÂ  Â  Â  Â  Â  Â  $_SESSION[\'token\'] = (string) $accessToken;\r\n\r\nÂ  Â  Â  Â  Â  Â  // OAuth 2.0 client handler\r\nÂ  Â  Â  Â  Â  Â  $oAuth2Client = $fb-&gt;getOAuth2Client();\r\n\r\nÂ  Â  Â  Â  Â  Â  // Exchanges a short-lived access token for a long-lived one\r\nÂ  Â  Â  Â  Â  Â  $longLivedAccessToken = $oAuth2Client-&gt;getLongLivedAccessToken($_SESSION[\'token\']);\r\n\r\nÂ  Â  Â  Â  Â  Â  $_SESSION[\'token\'] = (string) $longLivedAccessToken;\r\n\r\nÂ  Â  Â  Â  Â  Â  // setting default access token to be used in script\r\nÂ  Â  Â  Â  Â  Â  $fb-&gt;setDefaultAccessToken($_SESSION[\'token\']);\r\nÂ  Â  Â  Â  }\r\n\r\nÂ  Â  Â  Â  // redirect the user back to the same page if it has \"code\" GET variable\r\nÂ  Â  Â  Â  if (isset($_GET[\'code\'])) {\r\nÂ  Â  Â  Â  Â  Â  header(\'Location: ./\');\r\nÂ  Â  Â  Â  }\r\n\r\nÂ  Â  Â  Â  // getting basic info about user\r\nÂ  Â  Â  Â  try {\r\nÂ  Â  Â  Â  Â  Â  $profile_request = $fb-&gt;get(\'/me?fields=name,first_name,last_name,email,link\');\r\nÂ  Â  Â  Â  Â  Â  $userProfile = $profile_request-&gt;getGraphNode()-&gt;asArray();\r\nÂ  Â  Â  Â  } catch(Facebook\\Exceptions\\FacebookResponseException $e) {\r\nÂ  Â  Â  Â  Â  Â  // When Graph returns an error\r\nÂ Â  Â Â Â  Â Â Â  Â $error = \'Graph returned an error: \' . $e-&gt;getMessage();\r\nÂ Â  Â Â Â  Â Â Â  Â $this-&gt;Session-&gt;setFlash($error,\'error\');\r\nÂ  Â  Â  Â  Â  Â  session_destroy();\r\nÂ  Â  Â  Â  Â  Â  // redirecting user back to app login page\r\nÂ  Â  Â  Â  Â  Â  header(\"Location: ./\");\r\nÂ  Â  Â  Â  Â  Â  exit;\r\nÂ  Â  Â  Â  } catch(Facebook\\Exceptions\\FacebookSDKException $e) {\r\nÂ  Â  Â  Â  Â  Â  // When validation fails or other local issues\r\nÂ  Â  Â  Â  Â  Â  $error = \'Facebook SDK returned an error: \' . $e-&gt;getMessage();\r\nÂ Â  Â Â Â  Â Â Â  Â $this-&gt;Session-&gt;setFlash($error,\'error\');\r\nÂ  Â  Â  Â  Â  Â  exit;\r\nÂ  Â  Â  Â  }\r\nÂ  Â  Â  Â Â \r\nÂ  Â  Â  Â  // printing $profile array on the screen which holds the basic info about user\r\nÂ  Â  Â  Â  //$_SESSION[\'facebook_profile\'] = $userProfile;\r\nÂ Â  Â Â Â  Â Â Â  Â  Â  Â  Â  Â  Â Â \r\nÂ Â  Â Â Â  Â $social[\'oauth_provider\'] = \'facebook\';Â \r\nÂ Â  Â Â Â  Â $social[\'oauth_uid\'] = $userProfile[\'id\']; Â  Â  Â  Â \r\nÂ Â  Â  Â  Â $picture = \'http://graph.facebook.com/\'.$userProfile[\'id\'].\'/picture\';\r\nÂ  Â  Â  Â  $social[\'picture\'] Â = $picture;\r\nÂ Â  Â Â Â  Â $social[\'link\'] Â = $userProfile[\'link\'];\r\nÂ Â  Â Â Â  Â \r\nÂ Â  Â Â Â  Â $user[\'lastname\'] = $userProfile[\'last_name\'];\r\nÂ Â  Â Â Â  Â $user[\'firstname\'] = $userProfile[\'first_name\'];\r\nÂ Â  Â Â Â  Â $user[\'email\'] Â = $userProfile[\'email\'];\r\n\r\nÂ Â  Â Â Â  Â $email Â = $userProfile[\'email\'];\r\n\r\nÂ  Â  Â  Â  Â $this-&gt;socialcheck($social, $user, $email);\r\nÂ Â  Â Â Â  Â Â \r\nÂ  Â  } else {\r\nÂ  Â  Â  Â  // replace your website URL same as added in the developers.facebook.com/apps e.g. if you used http instead of https and you used non-www version or www version of your website then you must add the same here\r\nÂ  Â  Â  Â  $loginUrl = $helper-&gt;getLoginUrl(SITEURL.FACEBOOK_REROUTE.\'/\'.$permissions);\r\nÂ  Â  Â  Â  $login = Â \'&lt;a href=\"\' . $loginUrl . \'\"&gt;Log in with Facebook!&lt;/a&gt;\';\r\nÂ Â  Â Â Â  Â $this-&gt;set(\'login\',$login);\r\nÂ  Â  }\r\n}</code></pre>\r\n\r\n<h3>now the function that updates our social users tables and users tables</h3>\r\n\r\n<p>this function will be used for our facebook, google, linkedin, twitter and all other one click social login systems</p>\r\n\r\n<pre>\r\n<code>function socialcheck($social, $user, $email) {\r\n	\r\n	$this-&gt;loadModel(\'UserSocial\');\r\n	$options = array(\'conditions\' =&gt; array(\'UserSocial.oauth_uid\' =&gt; $social[\'oauth_uid\']));\r\n	$findsocialuser = $this-&gt;UserSocial-&gt;find(\'first\',$options);\r\n	\r\n	if(!empty($findsocialuser)){\r\n	\r\n		$userdata[\'id\']	=	$findsocialuser[\'UserSocial\'][\'id\'];\r\n		$userdata[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n		\r\n		$this-&gt;UserSocial-&gt;save($userdata,false);\r\n		$social_id = $findsocialuser[\'UserSocial\'][\'id\'];\r\n	\r\n	} else {\r\n		\r\n		$userdata = $social;	\r\n		$userdata[\'created\']	=	date(\"Y-m-d H:i:s\");\r\n		$userdata[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n		\r\n		$this-&gt;UserSocial-&gt;save($userdata,false);      \r\n\r\n	}\r\n    \r\n		$this-&gt;loadModel(\'User\');\r\n		\r\n		$options = array(\'conditions\' =&gt; array(\'User.email\' =&gt; $email));\r\n		$finduser = $this-&gt;User-&gt;find(\'first\',$options);\r\n		\r\n		if($social[\'oauth_provider\'] == \'google\') { $data[\'google_id\'] = $social[\'oauth_uid\']; }\r\n		if($social[\'oauth_provider\'] == \'facebook\') { $data[\'facebook_id\'] = $social[\'oauth_uid\']; }\r\n		if($social[\'oauth_provider\'] == \'linkedin\') { $data[\'linkedin_id\'] = $social[\'oauth_uid\']; }\r\n    \r\n	if(!empty($finduser)){\r\n		\r\n		$data[\'id\']	=	$finduser[\'User\'][\'id\'];\r\n		$data[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n	\r\n		$this-&gt;User-&gt;save($data,false);\r\n		\r\n	} else {\r\n			\r\n		$data  = $user;\r\n		// setting data to the user data that will contain the first names email addresses ect\r\n		\r\n		$data[\'password\']	=	AuthComponent::password($user[\'firstname\']);\r\n		// creating a password for the user in our database --&gt;this can be emailed to the user\r\n	\r\n		$this-&gt;User-&gt;save($data, false);\r\n	\r\n	}\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '0' , '7' , '2017-05-09' , '0000-00-00' ); INSERT INTO tutorials VALUES('265' , 'Single click login into LinkedIn use api with in PHP / CakePHP ' , '' , '1' , '20' , '1' , 'Single click login into LinkedIn use api with in PHP / CakePHP ' , '<h2>LinkedIn Login API</h2>\r\n\r\n<p>We are going to login to our Cakephp 2 website (which does not use composer) with a LinkedIn api. We are going to update our Social user&#39;s table and our normal users table. Basically if a user exist we are going to update other wise add the user.</p>\r\n\r\n<h3>Our first table is:</h3>\r\n\r\n<pre>\r\n<code>CREATE TABLE IF NOT EXISTS `user_socials` (\r\n  `id` int(11) NOT NULL,\r\n  `oauth_provider` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `oauth_uid` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `link` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `picture` varchar(255) COLLATE utf8_unicode_ci NOT NULL,\r\n  `created` datetime NOT NULL,\r\n  `modified` datetime NOT NULL\r\n) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;</code></pre>\r\n\r\n<h3>Our users table is:</h3>\r\n\r\n<pre>\r\n<code>CREATE TABLE IF NOT EXISTS `users` (\r\n  `id` int(11) NOT NULL,\r\n  `user_role_id` int(1) NOT NULL,\r\n  `firstname` varchar(100) NOT NULL,\r\n  `lastname` varchar(100) NOT NULL,\r\n  `google_id` varchar(255) DEFAULT NULL,\r\n  `facebook_id` varchar(255) DEFAULT NULL,\r\n  `linkedin_id` varchar(255) DEFAULT NULL,\r\n  `email` varchar(100) NOT NULL,\r\n  `password` varchar(100) NOT NULL,\r\n  `created` date NOT NULL,\r\n  `modified` date NOT NULL\r\n) ENGINE=MyISAM AUTO_INCREMENT=1334 DEFAULT CHARSET=latin1;</code></pre>\r\n\r\n<p>we have optained the linkedin api files at <a href=\"https://github.com/Skillbooker/linkedin_oauth\">https://github.com/Skillbooker/linkedin_oauth</a></p>\r\n\r\n<h3>The linkedin function</h3>\r\n\r\n<p>This linkedin function has to go in your controller.</p>\r\n\r\n<pre>\r\n<code>public function linkedin() {\r\n\r\ndefine(\"SITEURL\", \"http://www.skillbooker.com/\");    \r\ndefine(\"LINKEDIN_KEY\", \"0000000000000000\");\r\n//your linkedin key\r\ndefine(\"LINKEDIN_SECRET\", \"000000000000000\");\r\n//your linkedin secret key\r\ndefine(\"LINKEDIN_REROUTE\", \"social/linkedin\");\r\n\r\n$callbackURL = SITEURL.LINKEDIN_REROUTE;\r\n$linkedinApiKey = LINKEDIN_KEY;\r\n$linkedinApiSecret = LINKEDIN_SECRET;\r\n$linkedinScope = ;\r\n\r\nrequire_once(APP . \'Vendor\' . DS . \'linkedin\' . DS . \'http.php\');\r\nrequire_once(APP . \'Vendor\' . DS . \'linkedin\' . DS .  \'oauth_client.php\');   \r\n\r\nif (isset($_GET[\"oauth_problem\"]) &amp;&amp; $_GET[\"oauth_problem\"] &lt;&gt; \"\") {\r\n  // in case if user cancel the login. redirect back to home page.\r\n\r\n  $this-&gt;Session-&gt;setFlash($_GET[\"oauth_problem\"],\'error\');\r\n  $this-&gt;redirect(array(\'plugin\'=&gt;false, \'controller\'=&gt;\'social\', \'action\' =&gt; \'linkedin\'));\r\n}\r\n\r\n$client = new oauth_client_class;\r\n\r\n$client-&gt;debug = false;\r\n$client-&gt;debug_http = true;\r\n$client-&gt;redirect_uri = $callbackURL;\r\n\r\n$client-&gt;client_id = $linkedinApiKey;\r\n$application_line = __LINE__;\r\n$client-&gt;client_secret = $linkedinApiSecret;\r\n\r\nif (strlen($client-&gt;client_id) == 0 || strlen($client-&gt;client_secret) == 0)\r\n  die(\'Please go to LinkedIn Apps page https://www.linkedin.com/secure/developer?newapp= , \'.\r\n			\'create an application, and in the line \'.$application_line.\r\n			\' set the client_id to Consumer key and client_secret with Consumer secret. \'.\r\n			\'The Callback URL must be \'.$client-&gt;redirect_uri).\' Make sure you enable the \'.\r\n			\'necessary permissions to execute the API calls your application needs.\';\r\n\r\n/* API permissions\r\n */\r\n$client-&gt;scope = \'r_basicprofile r_emailaddress\';\r\nif (($success = $client-&gt;Initialize())) {\r\n  if (($success = $client-&gt;Process())) {\r\n    if (strlen($client-&gt;authorization_error)) {\r\n      $client-&gt;error = $client-&gt;authorization_error;\r\n      $success = false;\r\n    } elseif (strlen($client-&gt;access_token)) {\r\n      $success = $client-&gt;CallAPI(\r\n					\'http://api.linkedin.com/v1/people/~:(id,email-address,first-name,last-name,location,picture-url,public-profile-url,formatted-name)\', \r\n					\'GET\', array(\r\n						\'format\'=&gt;\'json\'\r\n					), array(\'FailOnAccessError\'=&gt;true), $userProfile);\r\n    }\r\n  }\r\n  $success = $client-&gt;Finalize($success);\r\n}\r\nif ($client-&gt;exit) exit;\r\nif ($success) { \r\n			           \r\n		$social[\'oauth_provider\'] = \'linkedin\'; \r\n		$social[\'oauth_uid\'] = $userProfile-&gt;id;        \r\n        $social[\'picture\']  = $userProfile-&gt;pictureUrl;\r\n		$social[\'link\']  = $userProfile-&gt;publicProfileUrl;\r\n				\r\n		$user[\'last_name\'] = $userProfile-&gt;lastName;\r\n		$user[\'first_name\'] = $userProfile-&gt;firstName;\r\n		$user[\'email\']  = $userProfile-&gt;emailAddress;\r\n\r\n		$email  = $userProfile-&gt;emailAddress;\r\n\r\n        $this-&gt;socialcheck($social, $user, $email);		 \r\n		 \r\n} else {\r\n   $this-&gt;Session-&gt;setFlash($client-&gt;error,\'error\');\r\n}\r\n\r\n$this-&gt;redirect(array(\'plugin\'=&gt;false, \'controller\'=&gt;\'social\', \'action\' =&gt; \'linkedin\'));\r\n\r\n}\r\n</code></pre>\r\n\r\n<h3>now the function that updates our social users tables and users tables</h3>\r\n\r\n<p>this function will be used for our facebook, google, linkedin, twitter and all other one click social login systems</p>\r\n\r\n<pre>\r\n<code>function socialcheck($social, $user, $email) {\r\n	\r\n	$this-&gt;loadModel(\'UserSocial\');\r\n	$options = array(\'conditions\' =&gt; array(\'UserSocial.oauth_uid\' =&gt; $social[\'oauth_uid\']));\r\n	$findsocialuser = $this-&gt;UserSocial-&gt;find(\'first\',$options);\r\n	\r\n	if(!empty($findsocialuser)){\r\n	\r\n		$userdata[\'id\']	=	$findsocialuser[\'UserSocial\'][\'id\'];\r\n		$userdata[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n		\r\n		$this-&gt;UserSocial-&gt;save($userdata,false);\r\n		$social_id = $findsocialuser[\'UserSocial\'][\'id\'];\r\n	\r\n	} else {\r\n		\r\n		$userdata = $social;	\r\n		$userdata[\'created\']	=	date(\"Y-m-d H:i:s\");\r\n		$userdata[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n		\r\n		$this-&gt;UserSocial-&gt;save($userdata,false);      \r\n\r\n	}\r\n    \r\n		$this-&gt;loadModel(\'User\');\r\n		\r\n		$options = array(\'conditions\' =&gt; array(\'User.email\' =&gt; $email));\r\n		$finduser = $this-&gt;User-&gt;find(\'first\',$options);\r\n		\r\n		if($social[\'oauth_provider\'] == \'google\') { $data[\'google_id\'] = $social[\'oauth_uid\']; }\r\n		if($social[\'oauth_provider\'] == \'facebook\') { $data[\'facebook_id\'] = $social[\'oauth_uid\']; }\r\n		if($social[\'oauth_provider\'] == \'linkedin\') { $data[\'linkedin_id\'] = $social[\'oauth_uid\']; }\r\n    \r\n	if(!empty($finduser)){\r\n		\r\n		$data[\'id\']	=	$finduser[\'User\'][\'id\'];\r\n		$data[\'modified\']	=	date(\"Y-m-d H:i:s\");\r\n	\r\n		$this-&gt;User-&gt;save($data,false);\r\n		\r\n	} else {\r\n			\r\n		$data  = $user;\r\n		// setting data to the user data that will contain the first names email addresses ect\r\n		\r\n		$data[\'password\']	=	AuthComponent::password($user[\'firstname\']);\r\n		// creating a password for the user in our database --&gt;this can be emailed to the user\r\n	\r\n		$this-&gt;User-&gt;save($data, false);\r\n	\r\n	}\r\n}</code></pre>\r\n\r\n<p>&nbsp;</p>\r\n' , '' , '0' , '4' , '2017-05-11' , '0000-00-00' );